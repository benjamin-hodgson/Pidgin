### YamlMime:XRefMap
sorted: true
references:
- uid: Pidgin
  name: Pidgin
  href: api/Pidgin.html
  commentId: N:Pidgin
  fullName: Pidgin
  nameWithType: Pidgin
- uid: Pidgin.Comment
  name: Pidgin.Comment
  href: api/Pidgin.Comment.html
  commentId: N:Pidgin.Comment
  fullName: Pidgin.Comment
  nameWithType: Pidgin.Comment
- uid: Pidgin.Comment.CommentParser
  name: CommentParser
  href: api/Pidgin.Comment.CommentParser.html
  commentId: T:Pidgin.Comment.CommentParser
  fullName: Pidgin.Comment.CommentParser
  nameWithType: CommentParser
- uid: Pidgin.Comment.CommentParser.SkipBlockComment*
  name: SkipBlockComment
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipBlockComment_
  commentId: Overload:Pidgin.Comment.CommentParser.SkipBlockComment
  isSpec: "True"
  fullName: Pidgin.Comment.CommentParser.SkipBlockComment
  nameWithType: CommentParser.SkipBlockComment
- uid: Pidgin.Comment.CommentParser.SkipBlockComment``2(Pidgin.Parser{System.Char,``0},Pidgin.Parser{System.Char,``1})
  name: SkipBlockComment<T, U>(Parser<Char, T>, Parser<Char, U>)
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipBlockComment__2_Pidgin_Parser_System_Char___0__Pidgin_Parser_System_Char___1__
  commentId: M:Pidgin.Comment.CommentParser.SkipBlockComment``2(Pidgin.Parser{System.Char,``0},Pidgin.Parser{System.Char,``1})
  name.vb: SkipBlockComment(Of T, U)(Parser(Of Char, T), Parser(Of Char, U))
  fullName: Pidgin.Comment.CommentParser.SkipBlockComment<T, U>(Pidgin.Parser<System.Char, T>, Pidgin.Parser<System.Char, U>)
  fullName.vb: Pidgin.Comment.CommentParser.SkipBlockComment(Of T, U)(Pidgin.Parser(Of System.Char, T), Pidgin.Parser(Of System.Char, U))
  nameWithType: CommentParser.SkipBlockComment<T, U>(Parser<Char, T>, Parser<Char, U>)
  nameWithType.vb: CommentParser.SkipBlockComment(Of T, U)(Parser(Of Char, T), Parser(Of Char, U))
- uid: Pidgin.Comment.CommentParser.SkipLineComment*
  name: SkipLineComment
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipLineComment_
  commentId: Overload:Pidgin.Comment.CommentParser.SkipLineComment
  isSpec: "True"
  fullName: Pidgin.Comment.CommentParser.SkipLineComment
  nameWithType: CommentParser.SkipLineComment
- uid: Pidgin.Comment.CommentParser.SkipLineComment``1(Pidgin.Parser{System.Char,``0})
  name: SkipLineComment<T>(Parser<Char, T>)
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipLineComment__1_Pidgin_Parser_System_Char___0__
  commentId: M:Pidgin.Comment.CommentParser.SkipLineComment``1(Pidgin.Parser{System.Char,``0})
  name.vb: SkipLineComment(Of T)(Parser(Of Char, T))
  fullName: Pidgin.Comment.CommentParser.SkipLineComment<T>(Pidgin.Parser<System.Char, T>)
  fullName.vb: Pidgin.Comment.CommentParser.SkipLineComment(Of T)(Pidgin.Parser(Of System.Char, T))
  nameWithType: CommentParser.SkipLineComment<T>(Parser<Char, T>)
  nameWithType.vb: CommentParser.SkipLineComment(Of T)(Parser(Of Char, T))
- uid: Pidgin.Comment.CommentParser.SkipNestedBlockComment*
  name: SkipNestedBlockComment
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipNestedBlockComment_
  commentId: Overload:Pidgin.Comment.CommentParser.SkipNestedBlockComment
  isSpec: "True"
  fullName: Pidgin.Comment.CommentParser.SkipNestedBlockComment
  nameWithType: CommentParser.SkipNestedBlockComment
- uid: Pidgin.Comment.CommentParser.SkipNestedBlockComment``2(Pidgin.Parser{System.Char,``0},Pidgin.Parser{System.Char,``1})
  name: SkipNestedBlockComment<T, U>(Parser<Char, T>, Parser<Char, U>)
  href: api/Pidgin.Comment.CommentParser.html#Pidgin_Comment_CommentParser_SkipNestedBlockComment__2_Pidgin_Parser_System_Char___0__Pidgin_Parser_System_Char___1__
  commentId: M:Pidgin.Comment.CommentParser.SkipNestedBlockComment``2(Pidgin.Parser{System.Char,``0},Pidgin.Parser{System.Char,``1})
  name.vb: SkipNestedBlockComment(Of T, U)(Parser(Of Char, T), Parser(Of Char, U))
  fullName: Pidgin.Comment.CommentParser.SkipNestedBlockComment<T, U>(Pidgin.Parser<System.Char, T>, Pidgin.Parser<System.Char, U>)
  fullName.vb: Pidgin.Comment.CommentParser.SkipNestedBlockComment(Of T, U)(Pidgin.Parser(Of System.Char, T), Pidgin.Parser(Of System.Char, U))
  nameWithType: CommentParser.SkipNestedBlockComment<T, U>(Parser<Char, T>, Parser<Char, U>)
  nameWithType.vb: CommentParser.SkipNestedBlockComment(Of T, U)(Parser(Of Char, T), Parser(Of Char, U))
- uid: Pidgin.Expected`1
  name: Expected<TToken>
  href: api/Pidgin.Expected-1.html
  commentId: T:Pidgin.Expected`1
  name.vb: Expected(Of TToken)
  fullName: Pidgin.Expected<TToken>
  fullName.vb: Pidgin.Expected(Of TToken)
  nameWithType: Expected<TToken>
  nameWithType.vb: Expected(Of TToken)
- uid: Pidgin.Expected`1.CompareTo(Pidgin.Expected{`0})
  name: CompareTo(Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_CompareTo_Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.CompareTo(Pidgin.Expected{`0})
  name.vb: CompareTo(Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.CompareTo(Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).CompareTo(Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.CompareTo(Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).CompareTo(Expected(Of TToken))
- uid: Pidgin.Expected`1.CompareTo*
  name: CompareTo
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_CompareTo_
  commentId: Overload:Pidgin.Expected`1.CompareTo
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.CompareTo
  fullName.vb: Pidgin.Expected(Of TToken).CompareTo
  nameWithType: Expected<TToken>.CompareTo
  nameWithType.vb: Expected(Of TToken).CompareTo
- uid: Pidgin.Expected`1.Equals(Pidgin.Expected{`0})
  name: Equals(Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Equals_Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.Equals(Pidgin.Expected{`0})
  name.vb: Equals(Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.Equals(Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).Equals(Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.Equals(Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).Equals(Expected(Of TToken))
- uid: Pidgin.Expected`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Equals_System_Object_
  commentId: M:Pidgin.Expected`1.Equals(System.Object)
  fullName: Pidgin.Expected<TToken>.Equals(System.Object)
  fullName.vb: Pidgin.Expected(Of TToken).Equals(System.Object)
  nameWithType: Expected<TToken>.Equals(Object)
  nameWithType.vb: Expected(Of TToken).Equals(Object)
- uid: Pidgin.Expected`1.Equals*
  name: Equals
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Equals_
  commentId: Overload:Pidgin.Expected`1.Equals
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.Equals
  fullName.vb: Pidgin.Expected(Of TToken).Equals
  nameWithType: Expected<TToken>.Equals
  nameWithType.vb: Expected(Of TToken).Equals
- uid: Pidgin.Expected`1.GetHashCode
  name: GetHashCode()
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_GetHashCode
  commentId: M:Pidgin.Expected`1.GetHashCode
  fullName: Pidgin.Expected<TToken>.GetHashCode()
  fullName.vb: Pidgin.Expected(Of TToken).GetHashCode()
  nameWithType: Expected<TToken>.GetHashCode()
  nameWithType.vb: Expected(Of TToken).GetHashCode()
- uid: Pidgin.Expected`1.GetHashCode*
  name: GetHashCode
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_GetHashCode_
  commentId: Overload:Pidgin.Expected`1.GetHashCode
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.GetHashCode
  fullName.vb: Pidgin.Expected(Of TToken).GetHashCode
  nameWithType: Expected<TToken>.GetHashCode
  nameWithType.vb: Expected(Of TToken).GetHashCode
- uid: Pidgin.Expected`1.IsEof
  name: IsEof
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_IsEof
  commentId: P:Pidgin.Expected`1.IsEof
  fullName: Pidgin.Expected<TToken>.IsEof
  fullName.vb: Pidgin.Expected(Of TToken).IsEof
  nameWithType: Expected<TToken>.IsEof
  nameWithType.vb: Expected(Of TToken).IsEof
- uid: Pidgin.Expected`1.IsEof*
  name: IsEof
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_IsEof_
  commentId: Overload:Pidgin.Expected`1.IsEof
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.IsEof
  fullName.vb: Pidgin.Expected(Of TToken).IsEof
  nameWithType: Expected<TToken>.IsEof
  nameWithType.vb: Expected(Of TToken).IsEof
- uid: Pidgin.Expected`1.Label
  name: Label
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Label
  commentId: P:Pidgin.Expected`1.Label
  fullName: Pidgin.Expected<TToken>.Label
  fullName.vb: Pidgin.Expected(Of TToken).Label
  nameWithType: Expected<TToken>.Label
  nameWithType.vb: Expected(Of TToken).Label
- uid: Pidgin.Expected`1.Label*
  name: Label
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Label_
  commentId: Overload:Pidgin.Expected`1.Label
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.Label
  fullName.vb: Pidgin.Expected(Of TToken).Label
  nameWithType: Expected<TToken>.Label
  nameWithType.vb: Expected(Of TToken).Label
- uid: Pidgin.Expected`1.op_Equality(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: Equality(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_Equality_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_Equality(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: Equality(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.Equality(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).Equality(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.Equality(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).Equality(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_Equality*
  name: Equality
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_Equality_
  commentId: Overload:Pidgin.Expected`1.op_Equality
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.Equality
  fullName.vb: Pidgin.Expected(Of TToken).Equality
  nameWithType: Expected<TToken>.Equality
  nameWithType.vb: Expected(Of TToken).Equality
- uid: Pidgin.Expected`1.op_GreaterThan(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: GreaterThan(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_GreaterThan_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_GreaterThan(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: GreaterThan(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.GreaterThan(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).GreaterThan(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.GreaterThan(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).GreaterThan(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_GreaterThan*
  name: GreaterThan
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_GreaterThan_
  commentId: Overload:Pidgin.Expected`1.op_GreaterThan
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.GreaterThan
  fullName.vb: Pidgin.Expected(Of TToken).GreaterThan
  nameWithType: Expected<TToken>.GreaterThan
  nameWithType.vb: Expected(Of TToken).GreaterThan
- uid: Pidgin.Expected`1.op_GreaterThanOrEqual(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: GreaterThanOrEqual(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_GreaterThanOrEqual_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_GreaterThanOrEqual(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: GreaterThanOrEqual(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.GreaterThanOrEqual(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).GreaterThanOrEqual(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.GreaterThanOrEqual(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).GreaterThanOrEqual(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_GreaterThanOrEqual_
  commentId: Overload:Pidgin.Expected`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.GreaterThanOrEqual
  fullName.vb: Pidgin.Expected(Of TToken).GreaterThanOrEqual
  nameWithType: Expected<TToken>.GreaterThanOrEqual
  nameWithType.vb: Expected(Of TToken).GreaterThanOrEqual
- uid: Pidgin.Expected`1.op_Inequality(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: Inequality(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_Inequality_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_Inequality(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: Inequality(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.Inequality(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).Inequality(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.Inequality(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).Inequality(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_Inequality*
  name: Inequality
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_Inequality_
  commentId: Overload:Pidgin.Expected`1.op_Inequality
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.Inequality
  fullName.vb: Pidgin.Expected(Of TToken).Inequality
  nameWithType: Expected<TToken>.Inequality
  nameWithType.vb: Expected(Of TToken).Inequality
- uid: Pidgin.Expected`1.op_LessThan(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: LessThan(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_LessThan_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_LessThan(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: LessThan(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.LessThan(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).LessThan(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.LessThan(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).LessThan(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_LessThan*
  name: LessThan
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_LessThan_
  commentId: Overload:Pidgin.Expected`1.op_LessThan
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.LessThan
  fullName.vb: Pidgin.Expected(Of TToken).LessThan
  nameWithType: Expected<TToken>.LessThan
  nameWithType.vb: Expected(Of TToken).LessThan
- uid: Pidgin.Expected`1.op_LessThanOrEqual(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name: LessThanOrEqual(Expected<TToken>, Expected<TToken>)
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_LessThanOrEqual_Pidgin_Expected__0__Pidgin_Expected__0__
  commentId: M:Pidgin.Expected`1.op_LessThanOrEqual(Pidgin.Expected{`0},Pidgin.Expected{`0})
  name.vb: LessThanOrEqual(Expected(Of TToken), Expected(Of TToken))
  fullName: Pidgin.Expected<TToken>.LessThanOrEqual(Pidgin.Expected<TToken>, Pidgin.Expected<TToken>)
  fullName.vb: Pidgin.Expected(Of TToken).LessThanOrEqual(Pidgin.Expected(Of TToken), Pidgin.Expected(Of TToken))
  nameWithType: Expected<TToken>.LessThanOrEqual(Expected<TToken>, Expected<TToken>)
  nameWithType.vb: Expected(Of TToken).LessThanOrEqual(Expected(Of TToken), Expected(Of TToken))
- uid: Pidgin.Expected`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_op_LessThanOrEqual_
  commentId: Overload:Pidgin.Expected`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.LessThanOrEqual
  fullName.vb: Pidgin.Expected(Of TToken).LessThanOrEqual
  nameWithType: Expected<TToken>.LessThanOrEqual
  nameWithType.vb: Expected(Of TToken).LessThanOrEqual
- uid: Pidgin.Expected`1.Tokens
  name: Tokens
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Tokens
  commentId: P:Pidgin.Expected`1.Tokens
  fullName: Pidgin.Expected<TToken>.Tokens
  fullName.vb: Pidgin.Expected(Of TToken).Tokens
  nameWithType: Expected<TToken>.Tokens
  nameWithType.vb: Expected(Of TToken).Tokens
- uid: Pidgin.Expected`1.Tokens*
  name: Tokens
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_Tokens_
  commentId: Overload:Pidgin.Expected`1.Tokens
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.Tokens
  fullName.vb: Pidgin.Expected(Of TToken).Tokens
  nameWithType: Expected<TToken>.Tokens
  nameWithType.vb: Expected(Of TToken).Tokens
- uid: Pidgin.Expected`1.ToString
  name: ToString()
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_ToString
  commentId: M:Pidgin.Expected`1.ToString
  fullName: Pidgin.Expected<TToken>.ToString()
  fullName.vb: Pidgin.Expected(Of TToken).ToString()
  nameWithType: Expected<TToken>.ToString()
  nameWithType.vb: Expected(Of TToken).ToString()
- uid: Pidgin.Expected`1.ToString*
  name: ToString
  href: api/Pidgin.Expected-1.html#Pidgin_Expected_1_ToString_
  commentId: Overload:Pidgin.Expected`1.ToString
  isSpec: "True"
  fullName: Pidgin.Expected<TToken>.ToString
  fullName.vb: Pidgin.Expected(Of TToken).ToString
  nameWithType: Expected<TToken>.ToString
  nameWithType.vb: Expected(Of TToken).ToString
- uid: Pidgin.Expression
  name: Pidgin.Expression
  href: api/Pidgin.Expression.html
  commentId: N:Pidgin.Expression
  fullName: Pidgin.Expression
  nameWithType: Pidgin.Expression
- uid: Pidgin.Expression.BinaryOperatorType
  name: BinaryOperatorType
  href: api/Pidgin.Expression.BinaryOperatorType.html
  commentId: T:Pidgin.Expression.BinaryOperatorType
  fullName: Pidgin.Expression.BinaryOperatorType
  nameWithType: BinaryOperatorType
- uid: Pidgin.Expression.BinaryOperatorType.LeftAssociative
  name: LeftAssociative
  href: api/Pidgin.Expression.BinaryOperatorType.html#Pidgin_Expression_BinaryOperatorType_LeftAssociative
  commentId: F:Pidgin.Expression.BinaryOperatorType.LeftAssociative
  fullName: Pidgin.Expression.BinaryOperatorType.LeftAssociative
  nameWithType: BinaryOperatorType.LeftAssociative
- uid: Pidgin.Expression.BinaryOperatorType.NonAssociative
  name: NonAssociative
  href: api/Pidgin.Expression.BinaryOperatorType.html#Pidgin_Expression_BinaryOperatorType_NonAssociative
  commentId: F:Pidgin.Expression.BinaryOperatorType.NonAssociative
  fullName: Pidgin.Expression.BinaryOperatorType.NonAssociative
  nameWithType: BinaryOperatorType.NonAssociative
- uid: Pidgin.Expression.BinaryOperatorType.RightAssociative
  name: RightAssociative
  href: api/Pidgin.Expression.BinaryOperatorType.html#Pidgin_Expression_BinaryOperatorType_RightAssociative
  commentId: F:Pidgin.Expression.BinaryOperatorType.RightAssociative
  fullName: Pidgin.Expression.BinaryOperatorType.RightAssociative
  nameWithType: BinaryOperatorType.RightAssociative
- uid: Pidgin.Expression.ExpressionParser
  name: ExpressionParser
  href: api/Pidgin.Expression.ExpressionParser.html
  commentId: T:Pidgin.Expression.ExpressionParser
  fullName: Pidgin.Expression.ExpressionParser
  nameWithType: ExpressionParser
- uid: Pidgin.Expression.ExpressionParser.Build*
  name: Build
  href: api/Pidgin.Expression.ExpressionParser.html#Pidgin_Expression_ExpressionParser_Build_
  commentId: Overload:Pidgin.Expression.ExpressionParser.Build
  isSpec: "True"
  fullName: Pidgin.Expression.ExpressionParser.Build
  nameWithType: ExpressionParser.Build
- uid: Pidgin.Expression.ExpressionParser.Build``2(Pidgin.Parser{``0,``1},IEnumerable{IEnumerable{Pidgin.Expression.OperatorTableRow{``0,``1}}})
  name: Build<TToken, T>(Parser<TToken, T>, IEnumerable<IEnumerable<OperatorTableRow<TToken, T>>>)
  href: api/Pidgin.Expression.ExpressionParser.html#Pidgin_Expression_ExpressionParser_Build__2_Pidgin_Parser___0___1__IEnumerable_IEnumerable_Pidgin_Expression_OperatorTableRow___0___1____
  commentId: M:Pidgin.Expression.ExpressionParser.Build``2(Pidgin.Parser{``0,``1},IEnumerable{IEnumerable{Pidgin.Expression.OperatorTableRow{``0,``1}}})
  name.vb: Build(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of IEnumerable(Of OperatorTableRow(Of TToken, T))))
  fullName: Pidgin.Expression.ExpressionParser.Build<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerable<IEnumerable<Pidgin.Expression.OperatorTableRow<TToken, T>>>)
  fullName.vb: Pidgin.Expression.ExpressionParser.Build(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerable(Of IEnumerable(Of Pidgin.Expression.OperatorTableRow(Of TToken, T))))
  nameWithType: ExpressionParser.Build<TToken, T>(Parser<TToken, T>, IEnumerable<IEnumerable<OperatorTableRow<TToken, T>>>)
  nameWithType.vb: ExpressionParser.Build(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of IEnumerable(Of OperatorTableRow(Of TToken, T))))
- uid: Pidgin.Expression.ExpressionParser.Build``2(Pidgin.Parser{``0,``1},IEnumerable{Pidgin.Expression.OperatorTableRow{``0,``1}})
  name: Build<TToken, T>(Parser<TToken, T>, IEnumerable<OperatorTableRow<TToken, T>>)
  href: api/Pidgin.Expression.ExpressionParser.html#Pidgin_Expression_ExpressionParser_Build__2_Pidgin_Parser___0___1__IEnumerable_Pidgin_Expression_OperatorTableRow___0___1___
  commentId: M:Pidgin.Expression.ExpressionParser.Build``2(Pidgin.Parser{``0,``1},IEnumerable{Pidgin.Expression.OperatorTableRow{``0,``1}})
  name.vb: Build(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of OperatorTableRow(Of TToken, T)))
  fullName: Pidgin.Expression.ExpressionParser.Build<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerable<Pidgin.Expression.OperatorTableRow<TToken, T>>)
  fullName.vb: Pidgin.Expression.ExpressionParser.Build(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerable(Of Pidgin.Expression.OperatorTableRow(Of TToken, T)))
  nameWithType: ExpressionParser.Build<TToken, T>(Parser<TToken, T>, IEnumerable<OperatorTableRow<TToken, T>>)
  nameWithType.vb: ExpressionParser.Build(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of OperatorTableRow(Of TToken, T)))
- uid: Pidgin.Expression.Operator
  name: Operator
  href: api/Pidgin.Expression.Operator.html
  commentId: T:Pidgin.Expression.Operator
  fullName: Pidgin.Expression.Operator
  nameWithType: Operator
- uid: Pidgin.Expression.Operator.Binary*
  name: Binary
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Binary_
  commentId: Overload:Pidgin.Expression.Operator.Binary
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.Binary
  nameWithType: Operator.Binary
- uid: Pidgin.Expression.Operator.Binary``2(Pidgin.Expression.BinaryOperatorType,Pidgin.Parser{``0,Func{``1,``1,``1}})
  name: Binary<TToken, T>(BinaryOperatorType, Parser<TToken, Func<T, T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Binary__2_Pidgin_Expression_BinaryOperatorType_Pidgin_Parser___0_Func___1___1___1___
  commentId: M:Pidgin.Expression.Operator.Binary``2(Pidgin.Expression.BinaryOperatorType,Pidgin.Parser{``0,Func{``1,``1,``1}})
  name.vb: Binary(Of TToken, T)(BinaryOperatorType, Parser(Of TToken, Func(Of T, T, T)))
  fullName: Pidgin.Expression.Operator.Binary<TToken, T>(Pidgin.Expression.BinaryOperatorType, Pidgin.Parser<TToken, Func<T, T, T>>)
  fullName.vb: Pidgin.Expression.Operator.Binary(Of TToken, T)(Pidgin.Expression.BinaryOperatorType, Pidgin.Parser(Of TToken, Func(Of T, T, T)))
  nameWithType: Operator.Binary<TToken, T>(BinaryOperatorType, Parser<TToken, Func<T, T, T>>)
  nameWithType.vb: Operator.Binary(Of TToken, T)(BinaryOperatorType, Parser(Of TToken, Func(Of T, T, T)))
- uid: Pidgin.Expression.Operator.InfixL*
  name: InfixL
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixL_
  commentId: Overload:Pidgin.Expression.Operator.InfixL
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.InfixL
  nameWithType: Operator.InfixL
- uid: Pidgin.Expression.Operator.InfixL``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name: InfixL<TToken, T>(Parser<TToken, Func<T, T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixL__2_Pidgin_Parser___0_Func___1___1___1___
  commentId: M:Pidgin.Expression.Operator.InfixL``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name.vb: InfixL(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
  fullName: Pidgin.Expression.Operator.InfixL<TToken, T>(Pidgin.Parser<TToken, Func<T, T, T>>)
  fullName.vb: Pidgin.Expression.Operator.InfixL(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T, T)))
  nameWithType: Operator.InfixL<TToken, T>(Parser<TToken, Func<T, T, T>>)
  nameWithType.vb: Operator.InfixL(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
- uid: Pidgin.Expression.Operator.InfixN*
  name: InfixN
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixN_
  commentId: Overload:Pidgin.Expression.Operator.InfixN
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.InfixN
  nameWithType: Operator.InfixN
- uid: Pidgin.Expression.Operator.InfixN``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name: InfixN<TToken, T>(Parser<TToken, Func<T, T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixN__2_Pidgin_Parser___0_Func___1___1___1___
  commentId: M:Pidgin.Expression.Operator.InfixN``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name.vb: InfixN(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
  fullName: Pidgin.Expression.Operator.InfixN<TToken, T>(Pidgin.Parser<TToken, Func<T, T, T>>)
  fullName.vb: Pidgin.Expression.Operator.InfixN(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T, T)))
  nameWithType: Operator.InfixN<TToken, T>(Parser<TToken, Func<T, T, T>>)
  nameWithType.vb: Operator.InfixN(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
- uid: Pidgin.Expression.Operator.InfixR*
  name: InfixR
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixR_
  commentId: Overload:Pidgin.Expression.Operator.InfixR
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.InfixR
  nameWithType: Operator.InfixR
- uid: Pidgin.Expression.Operator.InfixR``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name: InfixR<TToken, T>(Parser<TToken, Func<T, T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_InfixR__2_Pidgin_Parser___0_Func___1___1___1___
  commentId: M:Pidgin.Expression.Operator.InfixR``2(Pidgin.Parser{``0,Func{``1,``1,``1}})
  name.vb: InfixR(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
  fullName: Pidgin.Expression.Operator.InfixR<TToken, T>(Pidgin.Parser<TToken, Func<T, T, T>>)
  fullName.vb: Pidgin.Expression.Operator.InfixR(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T, T)))
  nameWithType: Operator.InfixR<TToken, T>(Parser<TToken, Func<T, T, T>>)
  nameWithType.vb: Operator.InfixR(Of TToken, T)(Parser(Of TToken, Func(Of T, T, T)))
- uid: Pidgin.Expression.Operator.Postfix*
  name: Postfix
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Postfix_
  commentId: Overload:Pidgin.Expression.Operator.Postfix
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.Postfix
  nameWithType: Operator.Postfix
- uid: Pidgin.Expression.Operator.Postfix``2(Pidgin.Parser{``0,Func{``1,``1}})
  name: Postfix<TToken, T>(Parser<TToken, Func<T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Postfix__2_Pidgin_Parser___0_Func___1___1___
  commentId: M:Pidgin.Expression.Operator.Postfix``2(Pidgin.Parser{``0,Func{``1,``1}})
  name.vb: Postfix(Of TToken, T)(Parser(Of TToken, Func(Of T, T)))
  fullName: Pidgin.Expression.Operator.Postfix<TToken, T>(Pidgin.Parser<TToken, Func<T, T>>)
  fullName.vb: Pidgin.Expression.Operator.Postfix(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T)))
  nameWithType: Operator.Postfix<TToken, T>(Parser<TToken, Func<T, T>>)
  nameWithType.vb: Operator.Postfix(Of TToken, T)(Parser(Of TToken, Func(Of T, T)))
- uid: Pidgin.Expression.Operator.PostfixChainable*
  name: PostfixChainable
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PostfixChainable_
  commentId: Overload:Pidgin.Expression.Operator.PostfixChainable
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.PostfixChainable
  nameWithType: Operator.PostfixChainable
- uid: Pidgin.Expression.Operator.PostfixChainable``2(IEnumerable{Pidgin.Parser{``0,Func{``1,``1}}})
  name: PostfixChainable<TToken, T>(IEnumerable<Parser<TToken, Func<T, T>>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PostfixChainable__2_IEnumerable_Pidgin_Parser___0_Func___1___1____
  commentId: M:Pidgin.Expression.Operator.PostfixChainable``2(IEnumerable{Pidgin.Parser{``0,Func{``1,``1}}})
  name.vb: PostfixChainable(Of TToken, T)(IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
  fullName: Pidgin.Expression.Operator.PostfixChainable<TToken, T>(IEnumerable<Pidgin.Parser<TToken, Func<T, T>>>)
  fullName.vb: Pidgin.Expression.Operator.PostfixChainable(Of TToken, T)(IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T))))
  nameWithType: Operator.PostfixChainable<TToken, T>(IEnumerable<Parser<TToken, Func<T, T>>>)
  nameWithType.vb: Operator.PostfixChainable(Of TToken, T)(IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
- uid: Pidgin.Expression.Operator.PostfixChainable``2(Pidgin.Parser{``0,Func{``1,``1}}[])
  name: PostfixChainable<TToken, T>(Parser<TToken, Func<T, T>>[])
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PostfixChainable__2_Pidgin_Parser___0_Func___1___1_____
  commentId: M:Pidgin.Expression.Operator.PostfixChainable``2(Pidgin.Parser{``0,Func{``1,``1}}[])
  name.vb: PostfixChainable(Of TToken, T)(Parser(Of TToken, Func(Of T, T))())
  fullName: Pidgin.Expression.Operator.PostfixChainable<TToken, T>(Pidgin.Parser<TToken, Func<T, T>>[])
  fullName.vb: Pidgin.Expression.Operator.PostfixChainable(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T))())
  nameWithType: Operator.PostfixChainable<TToken, T>(Parser<TToken, Func<T, T>>[])
  nameWithType.vb: Operator.PostfixChainable(Of TToken, T)(Parser(Of TToken, Func(Of T, T))())
- uid: Pidgin.Expression.Operator.Prefix*
  name: Prefix
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Prefix_
  commentId: Overload:Pidgin.Expression.Operator.Prefix
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.Prefix
  nameWithType: Operator.Prefix
- uid: Pidgin.Expression.Operator.Prefix``2(Pidgin.Parser{``0,Func{``1,``1}})
  name: Prefix<TToken, T>(Parser<TToken, Func<T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Prefix__2_Pidgin_Parser___0_Func___1___1___
  commentId: M:Pidgin.Expression.Operator.Prefix``2(Pidgin.Parser{``0,Func{``1,``1}})
  name.vb: Prefix(Of TToken, T)(Parser(Of TToken, Func(Of T, T)))
  fullName: Pidgin.Expression.Operator.Prefix<TToken, T>(Pidgin.Parser<TToken, Func<T, T>>)
  fullName.vb: Pidgin.Expression.Operator.Prefix(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T)))
  nameWithType: Operator.Prefix<TToken, T>(Parser<TToken, Func<T, T>>)
  nameWithType.vb: Operator.Prefix(Of TToken, T)(Parser(Of TToken, Func(Of T, T)))
- uid: Pidgin.Expression.Operator.PrefixChainable*
  name: PrefixChainable
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PrefixChainable_
  commentId: Overload:Pidgin.Expression.Operator.PrefixChainable
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.PrefixChainable
  nameWithType: Operator.PrefixChainable
- uid: Pidgin.Expression.Operator.PrefixChainable``2(IEnumerable{Pidgin.Parser{``0,Func{``1,``1}}})
  name: PrefixChainable<TToken, T>(IEnumerable<Parser<TToken, Func<T, T>>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PrefixChainable__2_IEnumerable_Pidgin_Parser___0_Func___1___1____
  commentId: M:Pidgin.Expression.Operator.PrefixChainable``2(IEnumerable{Pidgin.Parser{``0,Func{``1,``1}}})
  name.vb: PrefixChainable(Of TToken, T)(IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
  fullName: Pidgin.Expression.Operator.PrefixChainable<TToken, T>(IEnumerable<Pidgin.Parser<TToken, Func<T, T>>>)
  fullName.vb: Pidgin.Expression.Operator.PrefixChainable(Of TToken, T)(IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T))))
  nameWithType: Operator.PrefixChainable<TToken, T>(IEnumerable<Parser<TToken, Func<T, T>>>)
  nameWithType.vb: Operator.PrefixChainable(Of TToken, T)(IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
- uid: Pidgin.Expression.Operator.PrefixChainable``2(Pidgin.Parser{``0,Func{``1,``1}}[])
  name: PrefixChainable<TToken, T>(Parser<TToken, Func<T, T>>[])
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_PrefixChainable__2_Pidgin_Parser___0_Func___1___1_____
  commentId: M:Pidgin.Expression.Operator.PrefixChainable``2(Pidgin.Parser{``0,Func{``1,``1}}[])
  name.vb: PrefixChainable(Of TToken, T)(Parser(Of TToken, Func(Of T, T))())
  fullName: Pidgin.Expression.Operator.PrefixChainable<TToken, T>(Pidgin.Parser<TToken, Func<T, T>>[])
  fullName.vb: Pidgin.Expression.Operator.PrefixChainable(Of TToken, T)(Pidgin.Parser(Of TToken, Func(Of T, T))())
  nameWithType: Operator.PrefixChainable<TToken, T>(Parser<TToken, Func<T, T>>[])
  nameWithType.vb: Operator.PrefixChainable(Of TToken, T)(Parser(Of TToken, Func(Of T, T))())
- uid: Pidgin.Expression.Operator.Unary*
  name: Unary
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Unary_
  commentId: Overload:Pidgin.Expression.Operator.Unary
  isSpec: "True"
  fullName: Pidgin.Expression.Operator.Unary
  nameWithType: Operator.Unary
- uid: Pidgin.Expression.Operator.Unary``2(Pidgin.Expression.UnaryOperatorType,Pidgin.Parser{``0,Func{``1,``1}})
  name: Unary<TToken, T>(UnaryOperatorType, Parser<TToken, Func<T, T>>)
  href: api/Pidgin.Expression.Operator.html#Pidgin_Expression_Operator_Unary__2_Pidgin_Expression_UnaryOperatorType_Pidgin_Parser___0_Func___1___1___
  commentId: M:Pidgin.Expression.Operator.Unary``2(Pidgin.Expression.UnaryOperatorType,Pidgin.Parser{``0,Func{``1,``1}})
  name.vb: Unary(Of TToken, T)(UnaryOperatorType, Parser(Of TToken, Func(Of T, T)))
  fullName: Pidgin.Expression.Operator.Unary<TToken, T>(Pidgin.Expression.UnaryOperatorType, Pidgin.Parser<TToken, Func<T, T>>)
  fullName.vb: Pidgin.Expression.Operator.Unary(Of TToken, T)(Pidgin.Expression.UnaryOperatorType, Pidgin.Parser(Of TToken, Func(Of T, T)))
  nameWithType: Operator.Unary<TToken, T>(UnaryOperatorType, Parser<TToken, Func<T, T>>)
  nameWithType.vb: Operator.Unary(Of TToken, T)(UnaryOperatorType, Parser(Of TToken, Func(Of T, T)))
- uid: Pidgin.Expression.OperatorTableRow`2
  name: OperatorTableRow<TToken, T>
  href: api/Pidgin.Expression.OperatorTableRow-2.html
  commentId: T:Pidgin.Expression.OperatorTableRow`2
  name.vb: OperatorTableRow(Of TToken, T)
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T)
  nameWithType: OperatorTableRow<TToken, T>
  nameWithType.vb: OperatorTableRow(Of TToken, T)
- uid: Pidgin.Expression.OperatorTableRow`2.#ctor(IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1}}})
  name: OperatorTableRow(IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T>>>, IEnumerable<Parser<TToken, Func<T, T>>>)
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2__ctor_IEnumerable_Pidgin_Parser__0_Func__1__1__1____IEnumerable_Pidgin_Parser__0_Func__1__1__1____IEnumerable_Pidgin_Parser__0_Func__1__1__1____IEnumerable_Pidgin_Parser__0_Func__1__1____IEnumerable_Pidgin_Parser__0_Func__1__1____
  commentId: M:Pidgin.Expression.OperatorTableRow`2.#ctor(IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1}}},IEnumerable{Pidgin.Parser{`0,Func{`1,`1}}})
  name.vb: OperatorTableRow(IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.OperatorTableRow(IEnumerable<Pidgin.Parser<TToken, Func<T, T, T>>>, IEnumerable<Pidgin.Parser<TToken, Func<T, T, T>>>, IEnumerable<Pidgin.Parser<TToken, Func<T, T, T>>>, IEnumerable<Pidgin.Parser<TToken, Func<T, T>>>, IEnumerable<Pidgin.Parser<TToken, Func<T, T>>>)
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).OperatorTableRow(IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T))), IEnumerable(Of Pidgin.Parser(Of TToken, Func(Of T, T))))
  nameWithType: OperatorTableRow<TToken, T>.OperatorTableRow(IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T, T>>>, IEnumerable<Parser<TToken, Func<T, T>>>, IEnumerable<Parser<TToken, Func<T, T>>>)
  nameWithType.vb: OperatorTableRow(Of TToken, T).OperatorTableRow(IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T))), IEnumerable(Of Parser(Of TToken, Func(Of T, T))))
- uid: Pidgin.Expression.OperatorTableRow`2.#ctor*
  name: OperatorTableRow
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2__ctor_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.#ctor
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.OperatorTableRow
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).OperatorTableRow
  nameWithType: OperatorTableRow<TToken, T>.OperatorTableRow
  nameWithType.vb: OperatorTableRow(Of TToken, T).OperatorTableRow
- uid: Pidgin.Expression.OperatorTableRow`2.And(Pidgin.Expression.OperatorTableRow{`0,`1})
  name: And(OperatorTableRow<TToken, T>)
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_And_Pidgin_Expression_OperatorTableRow__0__1__
  commentId: M:Pidgin.Expression.OperatorTableRow`2.And(Pidgin.Expression.OperatorTableRow{`0,`1})
  name.vb: And(OperatorTableRow(Of TToken, T))
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.And(Pidgin.Expression.OperatorTableRow<TToken, T>)
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).And(Pidgin.Expression.OperatorTableRow(Of TToken, T))
  nameWithType: OperatorTableRow<TToken, T>.And(OperatorTableRow<TToken, T>)
  nameWithType.vb: OperatorTableRow(Of TToken, T).And(OperatorTableRow(Of TToken, T))
- uid: Pidgin.Expression.OperatorTableRow`2.And*
  name: And
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_And_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.And
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.And
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).And
  nameWithType: OperatorTableRow<TToken, T>.And
  nameWithType.vb: OperatorTableRow(Of TToken, T).And
- uid: Pidgin.Expression.OperatorTableRow`2.Empty
  name: Empty
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_Empty
  commentId: P:Pidgin.Expression.OperatorTableRow`2.Empty
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.Empty
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).Empty
  nameWithType: OperatorTableRow<TToken, T>.Empty
  nameWithType.vb: OperatorTableRow(Of TToken, T).Empty
- uid: Pidgin.Expression.OperatorTableRow`2.Empty*
  name: Empty
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_Empty_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.Empty
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.Empty
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).Empty
  nameWithType: OperatorTableRow<TToken, T>.Empty
  nameWithType.vb: OperatorTableRow(Of TToken, T).Empty
- uid: Pidgin.Expression.OperatorTableRow`2.InfixLOps
  name: InfixLOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixLOps
  commentId: P:Pidgin.Expression.OperatorTableRow`2.InfixLOps
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixLOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixLOps
  nameWithType: OperatorTableRow<TToken, T>.InfixLOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixLOps
- uid: Pidgin.Expression.OperatorTableRow`2.InfixLOps*
  name: InfixLOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixLOps_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.InfixLOps
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixLOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixLOps
  nameWithType: OperatorTableRow<TToken, T>.InfixLOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixLOps
- uid: Pidgin.Expression.OperatorTableRow`2.InfixNOps
  name: InfixNOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixNOps
  commentId: P:Pidgin.Expression.OperatorTableRow`2.InfixNOps
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixNOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixNOps
  nameWithType: OperatorTableRow<TToken, T>.InfixNOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixNOps
- uid: Pidgin.Expression.OperatorTableRow`2.InfixNOps*
  name: InfixNOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixNOps_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.InfixNOps
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixNOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixNOps
  nameWithType: OperatorTableRow<TToken, T>.InfixNOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixNOps
- uid: Pidgin.Expression.OperatorTableRow`2.InfixROps
  name: InfixROps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixROps
  commentId: P:Pidgin.Expression.OperatorTableRow`2.InfixROps
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixROps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixROps
  nameWithType: OperatorTableRow<TToken, T>.InfixROps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixROps
- uid: Pidgin.Expression.OperatorTableRow`2.InfixROps*
  name: InfixROps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_InfixROps_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.InfixROps
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.InfixROps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).InfixROps
  nameWithType: OperatorTableRow<TToken, T>.InfixROps
  nameWithType.vb: OperatorTableRow(Of TToken, T).InfixROps
- uid: Pidgin.Expression.OperatorTableRow`2.PostfixOps
  name: PostfixOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_PostfixOps
  commentId: P:Pidgin.Expression.OperatorTableRow`2.PostfixOps
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.PostfixOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).PostfixOps
  nameWithType: OperatorTableRow<TToken, T>.PostfixOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).PostfixOps
- uid: Pidgin.Expression.OperatorTableRow`2.PostfixOps*
  name: PostfixOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_PostfixOps_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.PostfixOps
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.PostfixOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).PostfixOps
  nameWithType: OperatorTableRow<TToken, T>.PostfixOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).PostfixOps
- uid: Pidgin.Expression.OperatorTableRow`2.PrefixOps
  name: PrefixOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_PrefixOps
  commentId: P:Pidgin.Expression.OperatorTableRow`2.PrefixOps
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.PrefixOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).PrefixOps
  nameWithType: OperatorTableRow<TToken, T>.PrefixOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).PrefixOps
- uid: Pidgin.Expression.OperatorTableRow`2.PrefixOps*
  name: PrefixOps
  href: api/Pidgin.Expression.OperatorTableRow-2.html#Pidgin_Expression_OperatorTableRow_2_PrefixOps_
  commentId: Overload:Pidgin.Expression.OperatorTableRow`2.PrefixOps
  isSpec: "True"
  fullName: Pidgin.Expression.OperatorTableRow<TToken, T>.PrefixOps
  fullName.vb: Pidgin.Expression.OperatorTableRow(Of TToken, T).PrefixOps
  nameWithType: OperatorTableRow<TToken, T>.PrefixOps
  nameWithType.vb: OperatorTableRow(Of TToken, T).PrefixOps
- uid: Pidgin.Expression.UnaryOperatorType
  name: UnaryOperatorType
  href: api/Pidgin.Expression.UnaryOperatorType.html
  commentId: T:Pidgin.Expression.UnaryOperatorType
  fullName: Pidgin.Expression.UnaryOperatorType
  nameWithType: UnaryOperatorType
- uid: Pidgin.Expression.UnaryOperatorType.Postfix
  name: Postfix
  href: api/Pidgin.Expression.UnaryOperatorType.html#Pidgin_Expression_UnaryOperatorType_Postfix
  commentId: F:Pidgin.Expression.UnaryOperatorType.Postfix
  fullName: Pidgin.Expression.UnaryOperatorType.Postfix
  nameWithType: UnaryOperatorType.Postfix
- uid: Pidgin.Expression.UnaryOperatorType.Prefix
  name: Prefix
  href: api/Pidgin.Expression.UnaryOperatorType.html#Pidgin_Expression_UnaryOperatorType_Prefix
  commentId: F:Pidgin.Expression.UnaryOperatorType.Prefix
  fullName: Pidgin.Expression.UnaryOperatorType.Prefix
  nameWithType: UnaryOperatorType.Prefix
- uid: Pidgin.Maybe
  name: Maybe
  href: api/Pidgin.Maybe.html
  commentId: T:Pidgin.Maybe
  fullName: Pidgin.Maybe
  nameWithType: Maybe
- uid: Pidgin.Maybe.Just*
  name: Just
  href: api/Pidgin.Maybe.html#Pidgin_Maybe_Just_
  commentId: Overload:Pidgin.Maybe.Just
  isSpec: "True"
  fullName: Pidgin.Maybe.Just
  nameWithType: Maybe.Just
- uid: Pidgin.Maybe.Just``1(``0)
  name: Just<T>(T)
  href: api/Pidgin.Maybe.html#Pidgin_Maybe_Just__1___0_
  commentId: M:Pidgin.Maybe.Just``1(``0)
  name.vb: Just(Of T)(T)
  fullName: Pidgin.Maybe.Just<T>(T)
  fullName.vb: Pidgin.Maybe.Just(Of T)(T)
  nameWithType: Maybe.Just<T>(T)
  nameWithType.vb: Maybe.Just(Of T)(T)
- uid: Pidgin.Maybe.Nothing*
  name: Nothing
  href: api/Pidgin.Maybe.html#Pidgin_Maybe_Nothing_
  commentId: Overload:Pidgin.Maybe.Nothing
  isSpec: "True"
  fullName: Pidgin.Maybe.Nothing
  nameWithType: Maybe.Nothing
- uid: Pidgin.Maybe.Nothing``1
  name: Nothing<T>()
  href: api/Pidgin.Maybe.html#Pidgin_Maybe_Nothing__1
  commentId: M:Pidgin.Maybe.Nothing``1
  name.vb: Nothing(Of T)()
  fullName: Pidgin.Maybe.Nothing<T>()
  fullName.vb: Pidgin.Maybe.Nothing(Of T)()
  nameWithType: Maybe.Nothing<T>()
  nameWithType.vb: Maybe.Nothing(Of T)()
- uid: Pidgin.Maybe`1
  name: Maybe<T>
  href: api/Pidgin.Maybe-1.html
  commentId: T:Pidgin.Maybe`1
  name.vb: Maybe(Of T)
  fullName: Pidgin.Maybe<T>
  fullName.vb: Pidgin.Maybe(Of T)
  nameWithType: Maybe<T>
  nameWithType.vb: Maybe(Of T)
- uid: Pidgin.Maybe`1.#ctor(`0)
  name: Maybe(T)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1__ctor__0_
  commentId: M:Pidgin.Maybe`1.#ctor(`0)
  fullName: Pidgin.Maybe<T>.Maybe(T)
  fullName.vb: Pidgin.Maybe(Of T).Maybe(T)
  nameWithType: Maybe<T>.Maybe(T)
  nameWithType.vb: Maybe(Of T).Maybe(T)
- uid: Pidgin.Maybe`1.#ctor*
  name: Maybe
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1__ctor_
  commentId: Overload:Pidgin.Maybe`1.#ctor
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Maybe
  fullName.vb: Pidgin.Maybe(Of T).Maybe
  nameWithType: Maybe<T>.Maybe
  nameWithType.vb: Maybe(Of T).Maybe
- uid: Pidgin.Maybe`1.Cast*
  name: Cast
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Cast_
  commentId: Overload:Pidgin.Maybe`1.Cast
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Cast
  fullName.vb: Pidgin.Maybe(Of T).Cast
  nameWithType: Maybe<T>.Cast
  nameWithType.vb: Maybe(Of T).Cast
- uid: Pidgin.Maybe`1.Cast``1
  name: Cast<U>()
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Cast__1
  commentId: M:Pidgin.Maybe`1.Cast``1
  name.vb: Cast(Of U)()
  fullName: Pidgin.Maybe<T>.Cast<U>()
  fullName.vb: Pidgin.Maybe(Of T).Cast(Of U)()
  nameWithType: Maybe<T>.Cast<U>()
  nameWithType.vb: Maybe(Of T).Cast(Of U)()
- uid: Pidgin.Maybe`1.Equals(Pidgin.Maybe{`0})
  name: Equals(Maybe<T>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Equals_Pidgin_Maybe__0__
  commentId: M:Pidgin.Maybe`1.Equals(Pidgin.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Pidgin.Maybe<T>.Equals(Pidgin.Maybe<T>)
  fullName.vb: Pidgin.Maybe(Of T).Equals(Pidgin.Maybe(Of T))
  nameWithType: Maybe<T>.Equals(Maybe<T>)
  nameWithType.vb: Maybe(Of T).Equals(Maybe(Of T))
- uid: Pidgin.Maybe`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Equals_System_Object_
  commentId: M:Pidgin.Maybe`1.Equals(System.Object)
  fullName: Pidgin.Maybe<T>.Equals(System.Object)
  fullName.vb: Pidgin.Maybe(Of T).Equals(System.Object)
  nameWithType: Maybe<T>.Equals(Object)
  nameWithType.vb: Maybe(Of T).Equals(Object)
- uid: Pidgin.Maybe`1.Equals*
  name: Equals
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Equals_
  commentId: Overload:Pidgin.Maybe`1.Equals
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Equals
  fullName.vb: Pidgin.Maybe(Of T).Equals
  nameWithType: Maybe<T>.Equals
  nameWithType.vb: Maybe(Of T).Equals
- uid: Pidgin.Maybe`1.GetHashCode
  name: GetHashCode()
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetHashCode
  commentId: M:Pidgin.Maybe`1.GetHashCode
  fullName: Pidgin.Maybe<T>.GetHashCode()
  fullName.vb: Pidgin.Maybe(Of T).GetHashCode()
  nameWithType: Maybe<T>.GetHashCode()
  nameWithType.vb: Maybe(Of T).GetHashCode()
- uid: Pidgin.Maybe`1.GetHashCode*
  name: GetHashCode
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetHashCode_
  commentId: Overload:Pidgin.Maybe`1.GetHashCode
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.GetHashCode
  fullName.vb: Pidgin.Maybe(Of T).GetHashCode
  nameWithType: Maybe<T>.GetHashCode
  nameWithType.vb: Maybe(Of T).GetHashCode
- uid: Pidgin.Maybe`1.GetValueOrDefault
  name: GetValueOrDefault()
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetValueOrDefault
  commentId: M:Pidgin.Maybe`1.GetValueOrDefault
  fullName: Pidgin.Maybe<T>.GetValueOrDefault()
  fullName.vb: Pidgin.Maybe(Of T).GetValueOrDefault()
  nameWithType: Maybe<T>.GetValueOrDefault()
  nameWithType.vb: Maybe(Of T).GetValueOrDefault()
- uid: Pidgin.Maybe`1.GetValueOrDefault(`0)
  name: GetValueOrDefault(T)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetValueOrDefault__0_
  commentId: M:Pidgin.Maybe`1.GetValueOrDefault(`0)
  fullName: Pidgin.Maybe<T>.GetValueOrDefault(T)
  fullName.vb: Pidgin.Maybe(Of T).GetValueOrDefault(T)
  nameWithType: Maybe<T>.GetValueOrDefault(T)
  nameWithType.vb: Maybe(Of T).GetValueOrDefault(T)
- uid: Pidgin.Maybe`1.GetValueOrDefault(Func{`0})
  name: GetValueOrDefault(Func<T>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetValueOrDefault_Func__0__
  commentId: M:Pidgin.Maybe`1.GetValueOrDefault(Func{`0})
  name.vb: GetValueOrDefault(Func(Of T))
  fullName: Pidgin.Maybe<T>.GetValueOrDefault(Func<T>)
  fullName.vb: Pidgin.Maybe(Of T).GetValueOrDefault(Func(Of T))
  nameWithType: Maybe<T>.GetValueOrDefault(Func<T>)
  nameWithType.vb: Maybe(Of T).GetValueOrDefault(Func(Of T))
- uid: Pidgin.Maybe`1.GetValueOrDefault*
  name: GetValueOrDefault
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_GetValueOrDefault_
  commentId: Overload:Pidgin.Maybe`1.GetValueOrDefault
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.GetValueOrDefault
  fullName.vb: Pidgin.Maybe(Of T).GetValueOrDefault
  nameWithType: Maybe<T>.GetValueOrDefault
  nameWithType.vb: Maybe(Of T).GetValueOrDefault
- uid: Pidgin.Maybe`1.HasValue
  name: HasValue
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_HasValue
  commentId: P:Pidgin.Maybe`1.HasValue
  fullName: Pidgin.Maybe<T>.HasValue
  fullName.vb: Pidgin.Maybe(Of T).HasValue
  nameWithType: Maybe<T>.HasValue
  nameWithType.vb: Maybe(Of T).HasValue
- uid: Pidgin.Maybe`1.HasValue*
  name: HasValue
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_HasValue_
  commentId: Overload:Pidgin.Maybe`1.HasValue
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.HasValue
  fullName.vb: Pidgin.Maybe(Of T).HasValue
  nameWithType: Maybe<T>.HasValue
  nameWithType.vb: Maybe(Of T).HasValue
- uid: Pidgin.Maybe`1.Match*
  name: Match
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Match_
  commentId: Overload:Pidgin.Maybe`1.Match
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Match
  fullName.vb: Pidgin.Maybe(Of T).Match
  nameWithType: Maybe<T>.Match
  nameWithType.vb: Maybe(Of T).Match
- uid: Pidgin.Maybe`1.Match``1(Func{`0,``0},Func{``0})
  name: Match<U>(Func<T, U>, Func<U>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Match__1_Func__0___0__Func___0__
  commentId: M:Pidgin.Maybe`1.Match``1(Func{`0,``0},Func{``0})
  name.vb: Match(Of U)(Func(Of T, U), Func(Of U))
  fullName: Pidgin.Maybe<T>.Match<U>(Func<T, U>, Func<U>)
  fullName.vb: Pidgin.Maybe(Of T).Match(Of U)(Func(Of T, U), Func(Of U))
  nameWithType: Maybe<T>.Match<U>(Func<T, U>, Func<U>)
  nameWithType.vb: Maybe(Of T).Match(Of U)(Func(Of T, U), Func(Of U))
- uid: Pidgin.Maybe`1.OfType*
  name: OfType
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_OfType_
  commentId: Overload:Pidgin.Maybe`1.OfType
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.OfType
  fullName.vb: Pidgin.Maybe(Of T).OfType
  nameWithType: Maybe<T>.OfType
  nameWithType.vb: Maybe(Of T).OfType
- uid: Pidgin.Maybe`1.OfType``1
  name: OfType<U>()
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_OfType__1
  commentId: M:Pidgin.Maybe`1.OfType``1
  name.vb: OfType(Of U)()
  fullName: Pidgin.Maybe<T>.OfType<U>()
  fullName.vb: Pidgin.Maybe(Of T).OfType(Of U)()
  nameWithType: Maybe<T>.OfType<U>()
  nameWithType.vb: Maybe(Of T).OfType(Of U)()
- uid: Pidgin.Maybe`1.op_Equality(Pidgin.Maybe{`0},Pidgin.Maybe{`0})
  name: Equality(Maybe<T>, Maybe<T>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_op_Equality_Pidgin_Maybe__0__Pidgin_Maybe__0__
  commentId: M:Pidgin.Maybe`1.op_Equality(Pidgin.Maybe{`0},Pidgin.Maybe{`0})
  name.vb: Equality(Maybe(Of T), Maybe(Of T))
  fullName: Pidgin.Maybe<T>.Equality(Pidgin.Maybe<T>, Pidgin.Maybe<T>)
  fullName.vb: Pidgin.Maybe(Of T).Equality(Pidgin.Maybe(Of T), Pidgin.Maybe(Of T))
  nameWithType: Maybe<T>.Equality(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).Equality(Maybe(Of T), Maybe(Of T))
- uid: Pidgin.Maybe`1.op_Equality*
  name: Equality
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_op_Equality_
  commentId: Overload:Pidgin.Maybe`1.op_Equality
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Equality
  fullName.vb: Pidgin.Maybe(Of T).Equality
  nameWithType: Maybe<T>.Equality
  nameWithType.vb: Maybe(Of T).Equality
- uid: Pidgin.Maybe`1.op_Inequality(Pidgin.Maybe{`0},Pidgin.Maybe{`0})
  name: Inequality(Maybe<T>, Maybe<T>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_op_Inequality_Pidgin_Maybe__0__Pidgin_Maybe__0__
  commentId: M:Pidgin.Maybe`1.op_Inequality(Pidgin.Maybe{`0},Pidgin.Maybe{`0})
  name.vb: Inequality(Maybe(Of T), Maybe(Of T))
  fullName: Pidgin.Maybe<T>.Inequality(Pidgin.Maybe<T>, Pidgin.Maybe<T>)
  fullName.vb: Pidgin.Maybe(Of T).Inequality(Pidgin.Maybe(Of T), Pidgin.Maybe(Of T))
  nameWithType: Maybe<T>.Inequality(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).Inequality(Maybe(Of T), Maybe(Of T))
- uid: Pidgin.Maybe`1.op_Inequality*
  name: Inequality
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_op_Inequality_
  commentId: Overload:Pidgin.Maybe`1.op_Inequality
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Inequality
  fullName.vb: Pidgin.Maybe(Of T).Inequality
  nameWithType: Maybe<T>.Inequality
  nameWithType.vb: Maybe(Of T).Inequality
- uid: Pidgin.Maybe`1.Select*
  name: Select
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Select_
  commentId: Overload:Pidgin.Maybe`1.Select
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Select
  fullName.vb: Pidgin.Maybe(Of T).Select
  nameWithType: Maybe<T>.Select
  nameWithType.vb: Maybe(Of T).Select
- uid: Pidgin.Maybe`1.Select``1(Func{`0,``0})
  name: Select<U>(Func<T, U>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Select__1_Func__0___0__
  commentId: M:Pidgin.Maybe`1.Select``1(Func{`0,``0})
  name.vb: Select(Of U)(Func(Of T, U))
  fullName: Pidgin.Maybe<T>.Select<U>(Func<T, U>)
  fullName.vb: Pidgin.Maybe(Of T).Select(Of U)(Func(Of T, U))
  nameWithType: Maybe<T>.Select<U>(Func<T, U>)
  nameWithType.vb: Maybe(Of T).Select(Of U)(Func(Of T, U))
- uid: Pidgin.Maybe`1.SelectMany*
  name: SelectMany
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_SelectMany_
  commentId: Overload:Pidgin.Maybe`1.SelectMany
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.SelectMany
  fullName.vb: Pidgin.Maybe(Of T).SelectMany
  nameWithType: Maybe<T>.SelectMany
  nameWithType.vb: Maybe(Of T).SelectMany
- uid: Pidgin.Maybe`1.SelectMany``1(Func{`0,Pidgin.Maybe{``0}})
  name: SelectMany<U>(Func<T, Maybe<U>>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_SelectMany__1_Func__0_Pidgin_Maybe___0___
  commentId: M:Pidgin.Maybe`1.SelectMany``1(Func{`0,Pidgin.Maybe{``0}})
  name.vb: SelectMany(Of U)(Func(Of T, Maybe(Of U)))
  fullName: Pidgin.Maybe<T>.SelectMany<U>(Func<T, Pidgin.Maybe<U>>)
  fullName.vb: Pidgin.Maybe(Of T).SelectMany(Of U)(Func(Of T, Pidgin.Maybe(Of U)))
  nameWithType: Maybe<T>.SelectMany<U>(Func<T, Maybe<U>>)
  nameWithType.vb: Maybe(Of T).SelectMany(Of U)(Func(Of T, Maybe(Of U)))
- uid: Pidgin.Maybe`1.SelectMany``2(Func{`0,Pidgin.Maybe{``0}},Func{`0,``0,``1})
  name: SelectMany<U, R>(Func<T, Maybe<U>>, Func<T, U, R>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_SelectMany__2_Func__0_Pidgin_Maybe___0___Func__0___0___1__
  commentId: M:Pidgin.Maybe`1.SelectMany``2(Func{`0,Pidgin.Maybe{``0}},Func{`0,``0,``1})
  name.vb: SelectMany(Of U, R)(Func(Of T, Maybe(Of U)), Func(Of T, U, R))
  fullName: Pidgin.Maybe<T>.SelectMany<U, R>(Func<T, Pidgin.Maybe<U>>, Func<T, U, R>)
  fullName.vb: Pidgin.Maybe(Of T).SelectMany(Of U, R)(Func(Of T, Pidgin.Maybe(Of U)), Func(Of T, U, R))
  nameWithType: Maybe<T>.SelectMany<U, R>(Func<T, Maybe<U>>, Func<T, U, R>)
  nameWithType.vb: Maybe(Of T).SelectMany(Of U, R)(Func(Of T, Maybe(Of U)), Func(Of T, U, R))
- uid: Pidgin.Maybe`1.Value
  name: Value
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Value
  commentId: P:Pidgin.Maybe`1.Value
  fullName: Pidgin.Maybe<T>.Value
  fullName.vb: Pidgin.Maybe(Of T).Value
  nameWithType: Maybe<T>.Value
  nameWithType.vb: Maybe(Of T).Value
- uid: Pidgin.Maybe`1.Value*
  name: Value
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Value_
  commentId: Overload:Pidgin.Maybe`1.Value
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Value
  fullName.vb: Pidgin.Maybe(Of T).Value
  nameWithType: Maybe<T>.Value
  nameWithType.vb: Maybe(Of T).Value
- uid: Pidgin.Maybe`1.Where(Func{`0,System.Boolean})
  name: Where(Func<T, Boolean>)
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Where_Func__0_System_Boolean__
  commentId: M:Pidgin.Maybe`1.Where(Func{`0,System.Boolean})
  name.vb: Where(Func(Of T, Boolean))
  fullName: Pidgin.Maybe<T>.Where(Func<T, System.Boolean>)
  fullName.vb: Pidgin.Maybe(Of T).Where(Func(Of T, System.Boolean))
  nameWithType: Maybe<T>.Where(Func<T, Boolean>)
  nameWithType.vb: Maybe(Of T).Where(Func(Of T, Boolean))
- uid: Pidgin.Maybe`1.Where*
  name: Where
  href: api/Pidgin.Maybe-1.html#Pidgin_Maybe_1_Where_
  commentId: Overload:Pidgin.Maybe`1.Where
  isSpec: "True"
  fullName: Pidgin.Maybe<T>.Where
  fullName.vb: Pidgin.Maybe(Of T).Where
  nameWithType: Maybe<T>.Where
  nameWithType.vb: Maybe(Of T).Where
- uid: Pidgin.ParseError`1
  name: ParseError<TToken>
  href: api/Pidgin.ParseError-1.html
  commentId: T:Pidgin.ParseError`1
  name.vb: ParseError(Of TToken)
  fullName: Pidgin.ParseError<TToken>
  fullName.vb: Pidgin.ParseError(Of TToken)
  nameWithType: ParseError<TToken>
  nameWithType.vb: ParseError(Of TToken)
- uid: Pidgin.ParseError`1.EOF
  name: EOF
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_EOF
  commentId: P:Pidgin.ParseError`1.EOF
  fullName: Pidgin.ParseError<TToken>.EOF
  fullName.vb: Pidgin.ParseError(Of TToken).EOF
  nameWithType: ParseError<TToken>.EOF
  nameWithType.vb: ParseError(Of TToken).EOF
- uid: Pidgin.ParseError`1.EOF*
  name: EOF
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_EOF_
  commentId: Overload:Pidgin.ParseError`1.EOF
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.EOF
  fullName.vb: Pidgin.ParseError(Of TToken).EOF
  nameWithType: ParseError<TToken>.EOF
  nameWithType.vb: ParseError(Of TToken).EOF
- uid: Pidgin.ParseError`1.Equals(Pidgin.ParseError{`0})
  name: Equals(ParseError<TToken>)
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Equals_Pidgin_ParseError__0__
  commentId: M:Pidgin.ParseError`1.Equals(Pidgin.ParseError{`0})
  name.vb: Equals(ParseError(Of TToken))
  fullName: Pidgin.ParseError<TToken>.Equals(Pidgin.ParseError<TToken>)
  fullName.vb: Pidgin.ParseError(Of TToken).Equals(Pidgin.ParseError(Of TToken))
  nameWithType: ParseError<TToken>.Equals(ParseError<TToken>)
  nameWithType.vb: ParseError(Of TToken).Equals(ParseError(Of TToken))
- uid: Pidgin.ParseError`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Equals_System_Object_
  commentId: M:Pidgin.ParseError`1.Equals(System.Object)
  fullName: Pidgin.ParseError<TToken>.Equals(System.Object)
  fullName.vb: Pidgin.ParseError(Of TToken).Equals(System.Object)
  nameWithType: ParseError<TToken>.Equals(Object)
  nameWithType.vb: ParseError(Of TToken).Equals(Object)
- uid: Pidgin.ParseError`1.Equals*
  name: Equals
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Equals_
  commentId: Overload:Pidgin.ParseError`1.Equals
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Equals
  fullName.vb: Pidgin.ParseError(Of TToken).Equals
  nameWithType: ParseError<TToken>.Equals
  nameWithType.vb: ParseError(Of TToken).Equals
- uid: Pidgin.ParseError`1.ErrorPos
  name: ErrorPos
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_ErrorPos
  commentId: P:Pidgin.ParseError`1.ErrorPos
  fullName: Pidgin.ParseError<TToken>.ErrorPos
  fullName.vb: Pidgin.ParseError(Of TToken).ErrorPos
  nameWithType: ParseError<TToken>.ErrorPos
  nameWithType.vb: ParseError(Of TToken).ErrorPos
- uid: Pidgin.ParseError`1.ErrorPos*
  name: ErrorPos
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_ErrorPos_
  commentId: Overload:Pidgin.ParseError`1.ErrorPos
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.ErrorPos
  fullName.vb: Pidgin.ParseError(Of TToken).ErrorPos
  nameWithType: ParseError<TToken>.ErrorPos
  nameWithType.vb: ParseError(Of TToken).ErrorPos
- uid: Pidgin.ParseError`1.Expected
  name: Expected
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Expected
  commentId: P:Pidgin.ParseError`1.Expected
  fullName: Pidgin.ParseError<TToken>.Expected
  fullName.vb: Pidgin.ParseError(Of TToken).Expected
  nameWithType: ParseError<TToken>.Expected
  nameWithType.vb: ParseError(Of TToken).Expected
- uid: Pidgin.ParseError`1.Expected*
  name: Expected
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Expected_
  commentId: Overload:Pidgin.ParseError`1.Expected
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Expected
  fullName.vb: Pidgin.ParseError(Of TToken).Expected
  nameWithType: ParseError<TToken>.Expected
  nameWithType.vb: ParseError(Of TToken).Expected
- uid: Pidgin.ParseError`1.GetHashCode
  name: GetHashCode()
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_GetHashCode
  commentId: M:Pidgin.ParseError`1.GetHashCode
  fullName: Pidgin.ParseError<TToken>.GetHashCode()
  fullName.vb: Pidgin.ParseError(Of TToken).GetHashCode()
  nameWithType: ParseError<TToken>.GetHashCode()
  nameWithType.vb: ParseError(Of TToken).GetHashCode()
- uid: Pidgin.ParseError`1.GetHashCode*
  name: GetHashCode
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_GetHashCode_
  commentId: Overload:Pidgin.ParseError`1.GetHashCode
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.GetHashCode
  fullName.vb: Pidgin.ParseError(Of TToken).GetHashCode
  nameWithType: ParseError<TToken>.GetHashCode
  nameWithType.vb: ParseError(Of TToken).GetHashCode
- uid: Pidgin.ParseError`1.Message
  name: Message
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Message
  commentId: P:Pidgin.ParseError`1.Message
  fullName: Pidgin.ParseError<TToken>.Message
  fullName.vb: Pidgin.ParseError(Of TToken).Message
  nameWithType: ParseError<TToken>.Message
  nameWithType.vb: ParseError(Of TToken).Message
- uid: Pidgin.ParseError`1.Message*
  name: Message
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Message_
  commentId: Overload:Pidgin.ParseError`1.Message
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Message
  fullName.vb: Pidgin.ParseError(Of TToken).Message
  nameWithType: ParseError<TToken>.Message
  nameWithType.vb: ParseError(Of TToken).Message
- uid: Pidgin.ParseError`1.op_Equality(Pidgin.ParseError{`0},Pidgin.ParseError{`0})
  name: Equality(ParseError<TToken>, ParseError<TToken>)
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_op_Equality_Pidgin_ParseError__0__Pidgin_ParseError__0__
  commentId: M:Pidgin.ParseError`1.op_Equality(Pidgin.ParseError{`0},Pidgin.ParseError{`0})
  name.vb: Equality(ParseError(Of TToken), ParseError(Of TToken))
  fullName: Pidgin.ParseError<TToken>.Equality(Pidgin.ParseError<TToken>, Pidgin.ParseError<TToken>)
  fullName.vb: Pidgin.ParseError(Of TToken).Equality(Pidgin.ParseError(Of TToken), Pidgin.ParseError(Of TToken))
  nameWithType: ParseError<TToken>.Equality(ParseError<TToken>, ParseError<TToken>)
  nameWithType.vb: ParseError(Of TToken).Equality(ParseError(Of TToken), ParseError(Of TToken))
- uid: Pidgin.ParseError`1.op_Equality*
  name: Equality
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_op_Equality_
  commentId: Overload:Pidgin.ParseError`1.op_Equality
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Equality
  fullName.vb: Pidgin.ParseError(Of TToken).Equality
  nameWithType: ParseError<TToken>.Equality
  nameWithType.vb: ParseError(Of TToken).Equality
- uid: Pidgin.ParseError`1.op_Inequality(Pidgin.ParseError{`0},Pidgin.ParseError{`0})
  name: Inequality(ParseError<TToken>, ParseError<TToken>)
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_op_Inequality_Pidgin_ParseError__0__Pidgin_ParseError__0__
  commentId: M:Pidgin.ParseError`1.op_Inequality(Pidgin.ParseError{`0},Pidgin.ParseError{`0})
  name.vb: Inequality(ParseError(Of TToken), ParseError(Of TToken))
  fullName: Pidgin.ParseError<TToken>.Inequality(Pidgin.ParseError<TToken>, Pidgin.ParseError<TToken>)
  fullName.vb: Pidgin.ParseError(Of TToken).Inequality(Pidgin.ParseError(Of TToken), Pidgin.ParseError(Of TToken))
  nameWithType: ParseError<TToken>.Inequality(ParseError<TToken>, ParseError<TToken>)
  nameWithType.vb: ParseError(Of TToken).Inequality(ParseError(Of TToken), ParseError(Of TToken))
- uid: Pidgin.ParseError`1.op_Inequality*
  name: Inequality
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_op_Inequality_
  commentId: Overload:Pidgin.ParseError`1.op_Inequality
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Inequality
  fullName.vb: Pidgin.ParseError(Of TToken).Inequality
  nameWithType: ParseError<TToken>.Inequality
  nameWithType.vb: ParseError(Of TToken).Inequality
- uid: Pidgin.ParseError`1.RenderErrorMessage
  name: RenderErrorMessage()
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_RenderErrorMessage
  commentId: M:Pidgin.ParseError`1.RenderErrorMessage
  fullName: Pidgin.ParseError<TToken>.RenderErrorMessage()
  fullName.vb: Pidgin.ParseError(Of TToken).RenderErrorMessage()
  nameWithType: ParseError<TToken>.RenderErrorMessage()
  nameWithType.vb: ParseError(Of TToken).RenderErrorMessage()
- uid: Pidgin.ParseError`1.RenderErrorMessage*
  name: RenderErrorMessage
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_RenderErrorMessage_
  commentId: Overload:Pidgin.ParseError`1.RenderErrorMessage
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.RenderErrorMessage
  fullName.vb: Pidgin.ParseError(Of TToken).RenderErrorMessage
  nameWithType: ParseError<TToken>.RenderErrorMessage
  nameWithType.vb: ParseError(Of TToken).RenderErrorMessage
- uid: Pidgin.ParseError`1.ToString
  name: ToString()
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_ToString
  commentId: M:Pidgin.ParseError`1.ToString
  fullName: Pidgin.ParseError<TToken>.ToString()
  fullName.vb: Pidgin.ParseError(Of TToken).ToString()
  nameWithType: ParseError<TToken>.ToString()
  nameWithType.vb: ParseError(Of TToken).ToString()
- uid: Pidgin.ParseError`1.ToString*
  name: ToString
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_ToString_
  commentId: Overload:Pidgin.ParseError`1.ToString
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.ToString
  fullName.vb: Pidgin.ParseError(Of TToken).ToString
  nameWithType: ParseError<TToken>.ToString
  nameWithType.vb: ParseError(Of TToken).ToString
- uid: Pidgin.ParseError`1.Unexpected
  name: Unexpected
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Unexpected
  commentId: P:Pidgin.ParseError`1.Unexpected
  fullName: Pidgin.ParseError<TToken>.Unexpected
  fullName.vb: Pidgin.ParseError(Of TToken).Unexpected
  nameWithType: ParseError<TToken>.Unexpected
  nameWithType.vb: ParseError(Of TToken).Unexpected
- uid: Pidgin.ParseError`1.Unexpected*
  name: Unexpected
  href: api/Pidgin.ParseError-1.html#Pidgin_ParseError_1_Unexpected_
  commentId: Overload:Pidgin.ParseError`1.Unexpected
  isSpec: "True"
  fullName: Pidgin.ParseError<TToken>.Unexpected
  fullName.vb: Pidgin.ParseError(Of TToken).Unexpected
  nameWithType: ParseError<TToken>.Unexpected
  nameWithType.vb: ParseError(Of TToken).Unexpected
- uid: Pidgin.ParseException
  name: ParseException
  href: api/Pidgin.ParseException.html
  commentId: T:Pidgin.ParseException
  fullName: Pidgin.ParseException
  nameWithType: ParseException
- uid: Pidgin.Parser
  name: Parser
  href: api/Pidgin.Parser.html
  commentId: T:Pidgin.Parser
  fullName: Pidgin.Parser
  nameWithType: Parser
- uid: Pidgin.Parser.AnyCharExcept(IEnumerable{System.Char})
  name: AnyCharExcept(IEnumerable<Char>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_AnyCharExcept_IEnumerable_System_Char__
  commentId: M:Pidgin.Parser.AnyCharExcept(IEnumerable{System.Char})
  name.vb: AnyCharExcept(IEnumerable(Of Char))
  fullName: Pidgin.Parser.AnyCharExcept(IEnumerable<System.Char>)
  fullName.vb: Pidgin.Parser.AnyCharExcept(IEnumerable(Of System.Char))
  nameWithType: Parser.AnyCharExcept(IEnumerable<Char>)
  nameWithType.vb: Parser.AnyCharExcept(IEnumerable(Of Char))
- uid: Pidgin.Parser.AnyCharExcept(System.Char[])
  name: AnyCharExcept(Char[])
  href: api/Pidgin.Parser.html#Pidgin_Parser_AnyCharExcept_System_Char___
  commentId: M:Pidgin.Parser.AnyCharExcept(System.Char[])
  name.vb: AnyCharExcept(Char())
  fullName: Pidgin.Parser.AnyCharExcept(System.Char[])
  fullName.vb: Pidgin.Parser.AnyCharExcept(System.Char())
  nameWithType: Parser.AnyCharExcept(Char[])
  nameWithType.vb: Parser.AnyCharExcept(Char())
- uid: Pidgin.Parser.AnyCharExcept*
  name: AnyCharExcept
  href: api/Pidgin.Parser.html#Pidgin_Parser_AnyCharExcept_
  commentId: Overload:Pidgin.Parser.AnyCharExcept
  isSpec: "True"
  fullName: Pidgin.Parser.AnyCharExcept
  nameWithType: Parser.AnyCharExcept
- uid: Pidgin.Parser.AtLeastOnceString*
  name: AtLeastOnceString
  href: api/Pidgin.Parser.html#Pidgin_Parser_AtLeastOnceString_
  commentId: Overload:Pidgin.Parser.AtLeastOnceString
  isSpec: "True"
  fullName: Pidgin.Parser.AtLeastOnceString
  nameWithType: Parser.AtLeastOnceString
- uid: Pidgin.Parser.AtLeastOnceString``1(Pidgin.Parser{``0,System.Char})
  name: AtLeastOnceString<TToken>(Parser<TToken, Char>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_AtLeastOnceString__1_Pidgin_Parser___0_System_Char__
  commentId: M:Pidgin.Parser.AtLeastOnceString``1(Pidgin.Parser{``0,System.Char})
  name.vb: AtLeastOnceString(Of TToken)(Parser(Of TToken, Char))
  fullName: Pidgin.Parser.AtLeastOnceString<TToken>(Pidgin.Parser<TToken, System.Char>)
  fullName.vb: Pidgin.Parser.AtLeastOnceString(Of TToken)(Pidgin.Parser(Of TToken, System.Char))
  nameWithType: Parser.AtLeastOnceString<TToken>(Parser<TToken, Char>)
  nameWithType.vb: Parser.AtLeastOnceString(Of TToken)(Parser(Of TToken, Char))
- uid: Pidgin.Parser.AtLeastOnceString``1(Pidgin.Parser{``0,System.String})
  name: AtLeastOnceString<TToken>(Parser<TToken, String>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_AtLeastOnceString__1_Pidgin_Parser___0_System_String__
  commentId: M:Pidgin.Parser.AtLeastOnceString``1(Pidgin.Parser{``0,System.String})
  name.vb: AtLeastOnceString(Of TToken)(Parser(Of TToken, String))
  fullName: Pidgin.Parser.AtLeastOnceString<TToken>(Pidgin.Parser<TToken, System.String>)
  fullName.vb: Pidgin.Parser.AtLeastOnceString(Of TToken)(Pidgin.Parser(Of TToken, System.String))
  nameWithType: Parser.AtLeastOnceString<TToken>(Parser<TToken, String>)
  nameWithType.vb: Parser.AtLeastOnceString(Of TToken)(Parser(Of TToken, String))
- uid: Pidgin.Parser.Char(System.Char)
  name: Char(Char)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Char_System_Char_
  commentId: M:Pidgin.Parser.Char(System.Char)
  fullName: Pidgin.Parser.Char(System.Char)
  nameWithType: Parser.Char(Char)
- uid: Pidgin.Parser.Char*
  name: Char
  href: api/Pidgin.Parser.html#Pidgin_Parser_Char_
  commentId: Overload:Pidgin.Parser.Char
  isSpec: "True"
  fullName: Pidgin.Parser.Char
  nameWithType: Parser.Char
- uid: Pidgin.Parser.CIChar(System.Char)
  name: CIChar(Char)
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIChar_System_Char_
  commentId: M:Pidgin.Parser.CIChar(System.Char)
  fullName: Pidgin.Parser.CIChar(System.Char)
  nameWithType: Parser.CIChar(Char)
- uid: Pidgin.Parser.CIChar*
  name: CIChar
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIChar_
  commentId: Overload:Pidgin.Parser.CIChar
  isSpec: "True"
  fullName: Pidgin.Parser.CIChar
  nameWithType: Parser.CIChar
- uid: Pidgin.Parser.CIOneOf(IEnumerable{System.Char})
  name: CIOneOf(IEnumerable<Char>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIOneOf_IEnumerable_System_Char__
  commentId: M:Pidgin.Parser.CIOneOf(IEnumerable{System.Char})
  name.vb: CIOneOf(IEnumerable(Of Char))
  fullName: Pidgin.Parser.CIOneOf(IEnumerable<System.Char>)
  fullName.vb: Pidgin.Parser.CIOneOf(IEnumerable(Of System.Char))
  nameWithType: Parser.CIOneOf(IEnumerable<Char>)
  nameWithType.vb: Parser.CIOneOf(IEnumerable(Of Char))
- uid: Pidgin.Parser.CIOneOf(System.Char[])
  name: CIOneOf(Char[])
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIOneOf_System_Char___
  commentId: M:Pidgin.Parser.CIOneOf(System.Char[])
  name.vb: CIOneOf(Char())
  fullName: Pidgin.Parser.CIOneOf(System.Char[])
  fullName.vb: Pidgin.Parser.CIOneOf(System.Char())
  nameWithType: Parser.CIOneOf(Char[])
  nameWithType.vb: Parser.CIOneOf(Char())
- uid: Pidgin.Parser.CIOneOf*
  name: CIOneOf
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIOneOf_
  commentId: Overload:Pidgin.Parser.CIOneOf
  isSpec: "True"
  fullName: Pidgin.Parser.CIOneOf
  nameWithType: Parser.CIOneOf
- uid: Pidgin.Parser.CIString(System.String)
  name: CIString(String)
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIString_System_String_
  commentId: M:Pidgin.Parser.CIString(System.String)
  fullName: Pidgin.Parser.CIString(System.String)
  nameWithType: Parser.CIString(String)
- uid: Pidgin.Parser.CIString*
  name: CIString
  href: api/Pidgin.Parser.html#Pidgin_Parser_CIString_
  commentId: Overload:Pidgin.Parser.CIString
  isSpec: "True"
  fullName: Pidgin.Parser.CIString
  nameWithType: Parser.CIString
- uid: Pidgin.Parser.DecimalNum
  name: DecimalNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_DecimalNum
  commentId: P:Pidgin.Parser.DecimalNum
  fullName: Pidgin.Parser.DecimalNum
  nameWithType: Parser.DecimalNum
- uid: Pidgin.Parser.DecimalNum*
  name: DecimalNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_DecimalNum_
  commentId: Overload:Pidgin.Parser.DecimalNum
  isSpec: "True"
  fullName: Pidgin.Parser.DecimalNum
  nameWithType: Parser.DecimalNum
- uid: Pidgin.Parser.Digit
  name: Digit
  href: api/Pidgin.Parser.html#Pidgin_Parser_Digit
  commentId: P:Pidgin.Parser.Digit
  fullName: Pidgin.Parser.Digit
  nameWithType: Parser.Digit
- uid: Pidgin.Parser.Digit*
  name: Digit
  href: api/Pidgin.Parser.html#Pidgin_Parser_Digit_
  commentId: Overload:Pidgin.Parser.Digit
  isSpec: "True"
  fullName: Pidgin.Parser.Digit
  nameWithType: Parser.Digit
- uid: Pidgin.Parser.EndOfLine
  name: EndOfLine
  href: api/Pidgin.Parser.html#Pidgin_Parser_EndOfLine
  commentId: P:Pidgin.Parser.EndOfLine
  fullName: Pidgin.Parser.EndOfLine
  nameWithType: Parser.EndOfLine
- uid: Pidgin.Parser.EndOfLine*
  name: EndOfLine
  href: api/Pidgin.Parser.html#Pidgin_Parser_EndOfLine_
  commentId: Overload:Pidgin.Parser.EndOfLine
  isSpec: "True"
  fullName: Pidgin.Parser.EndOfLine
  nameWithType: Parser.EndOfLine
- uid: Pidgin.Parser.HexNum
  name: HexNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_HexNum
  commentId: P:Pidgin.Parser.HexNum
  fullName: Pidgin.Parser.HexNum
  nameWithType: Parser.HexNum
- uid: Pidgin.Parser.HexNum*
  name: HexNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_HexNum_
  commentId: Overload:Pidgin.Parser.HexNum
  isSpec: "True"
  fullName: Pidgin.Parser.HexNum
  nameWithType: Parser.HexNum
- uid: Pidgin.Parser.Int(System.Int32)
  name: Int(Int32)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Int_System_Int32_
  commentId: M:Pidgin.Parser.Int(System.Int32)
  fullName: Pidgin.Parser.Int(System.Int32)
  nameWithType: Parser.Int(Int32)
- uid: Pidgin.Parser.Int*
  name: Int
  href: api/Pidgin.Parser.html#Pidgin_Parser_Int_
  commentId: Overload:Pidgin.Parser.Int
  isSpec: "True"
  fullName: Pidgin.Parser.Int
  nameWithType: Parser.Int
- uid: Pidgin.Parser.Letter
  name: Letter
  href: api/Pidgin.Parser.html#Pidgin_Parser_Letter
  commentId: P:Pidgin.Parser.Letter
  fullName: Pidgin.Parser.Letter
  nameWithType: Parser.Letter
- uid: Pidgin.Parser.Letter*
  name: Letter
  href: api/Pidgin.Parser.html#Pidgin_Parser_Letter_
  commentId: Overload:Pidgin.Parser.Letter
  isSpec: "True"
  fullName: Pidgin.Parser.Letter
  nameWithType: Parser.Letter
- uid: Pidgin.Parser.LetterOrDigit
  name: LetterOrDigit
  href: api/Pidgin.Parser.html#Pidgin_Parser_LetterOrDigit
  commentId: P:Pidgin.Parser.LetterOrDigit
  fullName: Pidgin.Parser.LetterOrDigit
  nameWithType: Parser.LetterOrDigit
- uid: Pidgin.Parser.LetterOrDigit*
  name: LetterOrDigit
  href: api/Pidgin.Parser.html#Pidgin_Parser_LetterOrDigit_
  commentId: Overload:Pidgin.Parser.LetterOrDigit
  isSpec: "True"
  fullName: Pidgin.Parser.LetterOrDigit
  nameWithType: Parser.LetterOrDigit
- uid: Pidgin.Parser.Long(System.Int32)
  name: Long(Int32)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Long_System_Int32_
  commentId: M:Pidgin.Parser.Long(System.Int32)
  fullName: Pidgin.Parser.Long(System.Int32)
  nameWithType: Parser.Long(Int32)
- uid: Pidgin.Parser.Long*
  name: Long
  href: api/Pidgin.Parser.html#Pidgin_Parser_Long_
  commentId: Overload:Pidgin.Parser.Long
  isSpec: "True"
  fullName: Pidgin.Parser.Long
  nameWithType: Parser.Long
- uid: Pidgin.Parser.LongNum
  name: LongNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_LongNum
  commentId: P:Pidgin.Parser.LongNum
  fullName: Pidgin.Parser.LongNum
  nameWithType: Parser.LongNum
- uid: Pidgin.Parser.LongNum*
  name: LongNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_LongNum_
  commentId: Overload:Pidgin.Parser.LongNum
  isSpec: "True"
  fullName: Pidgin.Parser.LongNum
  nameWithType: Parser.LongNum
- uid: Pidgin.Parser.Lookahead*
  name: Lookahead
  href: api/Pidgin.Parser.html#Pidgin_Parser_Lookahead_
  commentId: Overload:Pidgin.Parser.Lookahead
  isSpec: "True"
  fullName: Pidgin.Parser.Lookahead
  nameWithType: Parser.Lookahead
- uid: Pidgin.Parser.Lookahead``2(Pidgin.Parser{``0,``1})
  name: Lookahead<TToken, T>(Parser<TToken, T>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Lookahead__2_Pidgin_Parser___0___1__
  commentId: M:Pidgin.Parser.Lookahead``2(Pidgin.Parser{``0,``1})
  name.vb: Lookahead(Of TToken, T)(Parser(Of TToken, T))
  fullName: Pidgin.Parser.Lookahead<TToken, T>(Pidgin.Parser<TToken, T>)
  fullName.vb: Pidgin.Parser.Lookahead(Of TToken, T)(Pidgin.Parser(Of TToken, T))
  nameWithType: Parser.Lookahead<TToken, T>(Parser<TToken, T>)
  nameWithType.vb: Parser.Lookahead(Of TToken, T)(Parser(Of TToken, T))
- uid: Pidgin.Parser.Lowercase
  name: Lowercase
  href: api/Pidgin.Parser.html#Pidgin_Parser_Lowercase
  commentId: P:Pidgin.Parser.Lowercase
  fullName: Pidgin.Parser.Lowercase
  nameWithType: Parser.Lowercase
- uid: Pidgin.Parser.Lowercase*
  name: Lowercase
  href: api/Pidgin.Parser.html#Pidgin_Parser_Lowercase_
  commentId: Overload:Pidgin.Parser.Lowercase
  isSpec: "True"
  fullName: Pidgin.Parser.Lowercase
  nameWithType: Parser.Lowercase
- uid: Pidgin.Parser.ManyString*
  name: ManyString
  href: api/Pidgin.Parser.html#Pidgin_Parser_ManyString_
  commentId: Overload:Pidgin.Parser.ManyString
  isSpec: "True"
  fullName: Pidgin.Parser.ManyString
  nameWithType: Parser.ManyString
- uid: Pidgin.Parser.ManyString``1(Pidgin.Parser{``0,System.Char})
  name: ManyString<TToken>(Parser<TToken, Char>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_ManyString__1_Pidgin_Parser___0_System_Char__
  commentId: M:Pidgin.Parser.ManyString``1(Pidgin.Parser{``0,System.Char})
  name.vb: ManyString(Of TToken)(Parser(Of TToken, Char))
  fullName: Pidgin.Parser.ManyString<TToken>(Pidgin.Parser<TToken, System.Char>)
  fullName.vb: Pidgin.Parser.ManyString(Of TToken)(Pidgin.Parser(Of TToken, System.Char))
  nameWithType: Parser.ManyString<TToken>(Parser<TToken, Char>)
  nameWithType.vb: Parser.ManyString(Of TToken)(Parser(Of TToken, Char))
- uid: Pidgin.Parser.ManyString``1(Pidgin.Parser{``0,System.String})
  name: ManyString<TToken>(Parser<TToken, String>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_ManyString__1_Pidgin_Parser___0_System_String__
  commentId: M:Pidgin.Parser.ManyString``1(Pidgin.Parser{``0,System.String})
  name.vb: ManyString(Of TToken)(Parser(Of TToken, String))
  fullName: Pidgin.Parser.ManyString<TToken>(Pidgin.Parser<TToken, System.String>)
  fullName.vb: Pidgin.Parser.ManyString(Of TToken)(Pidgin.Parser(Of TToken, System.String))
  nameWithType: Parser.ManyString<TToken>(Parser<TToken, String>)
  nameWithType.vb: Parser.ManyString(Of TToken)(Parser(Of TToken, String))
- uid: Pidgin.Parser.Map*
  name: Map
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map_
  commentId: Overload:Pidgin.Parser.Map
  isSpec: "True"
  fullName: Pidgin.Parser.Map
  nameWithType: Parser.Map
- uid: Pidgin.Parser.Map``10(Func{``1,``2,``3,``4,``5,``6,``7,``8,``9},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6},Pidgin.Parser{``0,``7},Pidgin.Parser{``0,``8})
  name: Map<TToken, T1, T2, T3, T4, T5, T6, T7, T8, R>(Func<T1, T2, T3, T4, T5, T6, T7, T8, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>, Parser<TToken, T7>, Parser<TToken, T8>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__10_Func___1___2___3___4___5___6___7___8___9__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__Pidgin_Parser___0___4__Pidgin_Parser___0___5__Pidgin_Parser___0___6__Pidgin_Parser___0___7__Pidgin_Parser___0___8__
  commentId: M:Pidgin.Parser.Map``10(Func{``1,``2,``3,``4,``5,``6,``7,``8,``9},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6},Pidgin.Parser{``0,``7},Pidgin.Parser{``0,``8})
  name.vb: Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, T8, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6), Parser(Of TToken, T7), Parser(Of TToken, T8))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, T4, T5, T6, T7, T8, R>(Func<T1, T2, T3, T4, T5, T6, T7, T8, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>, Pidgin.Parser<TToken, T4>, Pidgin.Parser<TToken, T5>, Pidgin.Parser<TToken, T6>, Pidgin.Parser<TToken, T7>, Pidgin.Parser<TToken, T8>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, T8, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3), Pidgin.Parser(Of TToken, T4), Pidgin.Parser(Of TToken, T5), Pidgin.Parser(Of TToken, T6), Pidgin.Parser(Of TToken, T7), Pidgin.Parser(Of TToken, T8))
  nameWithType: Parser.Map<TToken, T1, T2, T3, T4, T5, T6, T7, T8, R>(Func<T1, T2, T3, T4, T5, T6, T7, T8, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>, Parser<TToken, T7>, Parser<TToken, T8>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, T8, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, T8, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6), Parser(Of TToken, T7), Parser(Of TToken, T8))
- uid: Pidgin.Parser.Map``3(Func{``1,``2},Pidgin.Parser{``0,``1})
  name: Map<TToken, T1, R>(Func<T1, R>, Parser<TToken, T1>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__3_Func___1___2__Pidgin_Parser___0___1__
  commentId: M:Pidgin.Parser.Map``3(Func{``1,``2},Pidgin.Parser{``0,``1})
  name.vb: Map(Of TToken, T1, R)(Func(Of T1, R), Parser(Of TToken, T1))
  fullName: Pidgin.Parser.Map<TToken, T1, R>(Func<T1, R>, Pidgin.Parser<TToken, T1>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, R)(Func(Of T1, R), Pidgin.Parser(Of TToken, T1))
  nameWithType: Parser.Map<TToken, T1, R>(Func<T1, R>, Parser<TToken, T1>)
  nameWithType.vb: Parser.Map(Of TToken, T1, R)(Func(Of T1, R), Parser(Of TToken, T1))
- uid: Pidgin.Parser.Map``4(Func{``1,``2,``3},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2})
  name: Map<TToken, T1, T2, R>(Func<T1, T2, R>, Parser<TToken, T1>, Parser<TToken, T2>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__4_Func___1___2___3__Pidgin_Parser___0___1__Pidgin_Parser___0___2__
  commentId: M:Pidgin.Parser.Map``4(Func{``1,``2,``3},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2})
  name.vb: Map(Of TToken, T1, T2, R)(Func(Of T1, T2, R), Parser(Of TToken, T1), Parser(Of TToken, T2))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, R>(Func<T1, T2, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, R)(Func(Of T1, T2, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2))
  nameWithType: Parser.Map<TToken, T1, T2, R>(Func<T1, T2, R>, Parser<TToken, T1>, Parser<TToken, T2>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, R)(Func(Of T1, T2, R), Parser(Of TToken, T1), Parser(Of TToken, T2))
- uid: Pidgin.Parser.Map``5(Func{``1,``2,``3,``4},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3})
  name: Map<TToken, T1, T2, T3, R>(Func<T1, T2, T3, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__5_Func___1___2___3___4__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__
  commentId: M:Pidgin.Parser.Map``5(Func{``1,``2,``3,``4},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3})
  name.vb: Map(Of TToken, T1, T2, T3, R)(Func(Of T1, T2, T3, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, R>(Func<T1, T2, T3, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, R)(Func(Of T1, T2, T3, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3))
  nameWithType: Parser.Map<TToken, T1, T2, T3, R>(Func<T1, T2, T3, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, R)(Func(Of T1, T2, T3, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3))
- uid: Pidgin.Parser.Map``6(Func{``1,``2,``3,``4,``5},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4})
  name: Map<TToken, T1, T2, T3, T4, R>(Func<T1, T2, T3, T4, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__6_Func___1___2___3___4___5__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__Pidgin_Parser___0___4__
  commentId: M:Pidgin.Parser.Map``6(Func{``1,``2,``3,``4,``5},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4})
  name.vb: Map(Of TToken, T1, T2, T3, T4, R)(Func(Of T1, T2, T3, T4, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, T4, R>(Func<T1, T2, T3, T4, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>, Pidgin.Parser<TToken, T4>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, T4, R)(Func(Of T1, T2, T3, T4, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3), Pidgin.Parser(Of TToken, T4))
  nameWithType: Parser.Map<TToken, T1, T2, T3, T4, R>(Func<T1, T2, T3, T4, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, T4, R)(Func(Of T1, T2, T3, T4, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4))
- uid: Pidgin.Parser.Map``7(Func{``1,``2,``3,``4,``5,``6},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5})
  name: Map<TToken, T1, T2, T3, T4, T5, R>(Func<T1, T2, T3, T4, T5, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__7_Func___1___2___3___4___5___6__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__Pidgin_Parser___0___4__Pidgin_Parser___0___5__
  commentId: M:Pidgin.Parser.Map``7(Func{``1,``2,``3,``4,``5,``6},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5})
  name.vb: Map(Of TToken, T1, T2, T3, T4, T5, R)(Func(Of T1, T2, T3, T4, T5, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, T4, T5, R>(Func<T1, T2, T3, T4, T5, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>, Pidgin.Parser<TToken, T4>, Pidgin.Parser<TToken, T5>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, T4, T5, R)(Func(Of T1, T2, T3, T4, T5, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3), Pidgin.Parser(Of TToken, T4), Pidgin.Parser(Of TToken, T5))
  nameWithType: Parser.Map<TToken, T1, T2, T3, T4, T5, R>(Func<T1, T2, T3, T4, T5, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, T4, T5, R)(Func(Of T1, T2, T3, T4, T5, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5))
- uid: Pidgin.Parser.Map``8(Func{``1,``2,``3,``4,``5,``6,``7},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6})
  name: Map<TToken, T1, T2, T3, T4, T5, T6, R>(Func<T1, T2, T3, T4, T5, T6, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__8_Func___1___2___3___4___5___6___7__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__Pidgin_Parser___0___4__Pidgin_Parser___0___5__Pidgin_Parser___0___6__
  commentId: M:Pidgin.Parser.Map``8(Func{``1,``2,``3,``4,``5,``6,``7},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6})
  name.vb: Map(Of TToken, T1, T2, T3, T4, T5, T6, R)(Func(Of T1, T2, T3, T4, T5, T6, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, T4, T5, T6, R>(Func<T1, T2, T3, T4, T5, T6, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>, Pidgin.Parser<TToken, T4>, Pidgin.Parser<TToken, T5>, Pidgin.Parser<TToken, T6>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, R)(Func(Of T1, T2, T3, T4, T5, T6, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3), Pidgin.Parser(Of TToken, T4), Pidgin.Parser(Of TToken, T5), Pidgin.Parser(Of TToken, T6))
  nameWithType: Parser.Map<TToken, T1, T2, T3, T4, T5, T6, R>(Func<T1, T2, T3, T4, T5, T6, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, R)(Func(Of T1, T2, T3, T4, T5, T6, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6))
- uid: Pidgin.Parser.Map``9(Func{``1,``2,``3,``4,``5,``6,``7,``8},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6},Pidgin.Parser{``0,``7})
  name: Map<TToken, T1, T2, T3, T4, T5, T6, T7, R>(Func<T1, T2, T3, T4, T5, T6, T7, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>, Parser<TToken, T7>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Map__9_Func___1___2___3___4___5___6___7___8__Pidgin_Parser___0___1__Pidgin_Parser___0___2__Pidgin_Parser___0___3__Pidgin_Parser___0___4__Pidgin_Parser___0___5__Pidgin_Parser___0___6__Pidgin_Parser___0___7__
  commentId: M:Pidgin.Parser.Map``9(Func{``1,``2,``3,``4,``5,``6,``7,``8},Pidgin.Parser{``0,``1},Pidgin.Parser{``0,``2},Pidgin.Parser{``0,``3},Pidgin.Parser{``0,``4},Pidgin.Parser{``0,``5},Pidgin.Parser{``0,``6},Pidgin.Parser{``0,``7})
  name.vb: Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6), Parser(Of TToken, T7))
  fullName: Pidgin.Parser.Map<TToken, T1, T2, T3, T4, T5, T6, T7, R>(Func<T1, T2, T3, T4, T5, T6, T7, R>, Pidgin.Parser<TToken, T1>, Pidgin.Parser<TToken, T2>, Pidgin.Parser<TToken, T3>, Pidgin.Parser<TToken, T4>, Pidgin.Parser<TToken, T5>, Pidgin.Parser<TToken, T6>, Pidgin.Parser<TToken, T7>)
  fullName.vb: Pidgin.Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, R), Pidgin.Parser(Of TToken, T1), Pidgin.Parser(Of TToken, T2), Pidgin.Parser(Of TToken, T3), Pidgin.Parser(Of TToken, T4), Pidgin.Parser(Of TToken, T5), Pidgin.Parser(Of TToken, T6), Pidgin.Parser(Of TToken, T7))
  nameWithType: Parser.Map<TToken, T1, T2, T3, T4, T5, T6, T7, R>(Func<T1, T2, T3, T4, T5, T6, T7, R>, Parser<TToken, T1>, Parser<TToken, T2>, Parser<TToken, T3>, Parser<TToken, T4>, Parser<TToken, T5>, Parser<TToken, T6>, Parser<TToken, T7>)
  nameWithType.vb: Parser.Map(Of TToken, T1, T2, T3, T4, T5, T6, T7, R)(Func(Of T1, T2, T3, T4, T5, T6, T7, R), Parser(Of TToken, T1), Parser(Of TToken, T2), Parser(Of TToken, T3), Parser(Of TToken, T4), Parser(Of TToken, T5), Parser(Of TToken, T6), Parser(Of TToken, T7))
- uid: Pidgin.Parser.Not*
  name: Not
  href: api/Pidgin.Parser.html#Pidgin_Parser_Not_
  commentId: Overload:Pidgin.Parser.Not
  isSpec: "True"
  fullName: Pidgin.Parser.Not
  nameWithType: Parser.Not
- uid: Pidgin.Parser.Not``2(Pidgin.Parser{``0,``1})
  name: Not<TToken, T>(Parser<TToken, T>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Not__2_Pidgin_Parser___0___1__
  commentId: M:Pidgin.Parser.Not``2(Pidgin.Parser{``0,``1})
  name.vb: Not(Of TToken, T)(Parser(Of TToken, T))
  fullName: Pidgin.Parser.Not<TToken, T>(Pidgin.Parser<TToken, T>)
  fullName.vb: Pidgin.Parser.Not(Of TToken, T)(Pidgin.Parser(Of TToken, T))
  nameWithType: Parser.Not<TToken, T>(Parser<TToken, T>)
  nameWithType.vb: Parser.Not(Of TToken, T)(Parser(Of TToken, T))
- uid: Pidgin.Parser.Num
  name: Num
  href: api/Pidgin.Parser.html#Pidgin_Parser_Num
  commentId: P:Pidgin.Parser.Num
  fullName: Pidgin.Parser.Num
  nameWithType: Parser.Num
- uid: Pidgin.Parser.Num*
  name: Num
  href: api/Pidgin.Parser.html#Pidgin_Parser_Num_
  commentId: Overload:Pidgin.Parser.Num
  isSpec: "True"
  fullName: Pidgin.Parser.Num
  nameWithType: Parser.Num
- uid: Pidgin.Parser.OctalNum
  name: OctalNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_OctalNum
  commentId: P:Pidgin.Parser.OctalNum
  fullName: Pidgin.Parser.OctalNum
  nameWithType: Parser.OctalNum
- uid: Pidgin.Parser.OctalNum*
  name: OctalNum
  href: api/Pidgin.Parser.html#Pidgin_Parser_OctalNum_
  commentId: Overload:Pidgin.Parser.OctalNum
  isSpec: "True"
  fullName: Pidgin.Parser.OctalNum
  nameWithType: Parser.OctalNum
- uid: Pidgin.Parser.OneOf(IEnumerable{System.Char})
  name: OneOf(IEnumerable<Char>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_OneOf_IEnumerable_System_Char__
  commentId: M:Pidgin.Parser.OneOf(IEnumerable{System.Char})
  name.vb: OneOf(IEnumerable(Of Char))
  fullName: Pidgin.Parser.OneOf(IEnumerable<System.Char>)
  fullName.vb: Pidgin.Parser.OneOf(IEnumerable(Of System.Char))
  nameWithType: Parser.OneOf(IEnumerable<Char>)
  nameWithType.vb: Parser.OneOf(IEnumerable(Of Char))
- uid: Pidgin.Parser.OneOf(System.Char[])
  name: OneOf(Char[])
  href: api/Pidgin.Parser.html#Pidgin_Parser_OneOf_System_Char___
  commentId: M:Pidgin.Parser.OneOf(System.Char[])
  name.vb: OneOf(Char())
  fullName: Pidgin.Parser.OneOf(System.Char[])
  fullName.vb: Pidgin.Parser.OneOf(System.Char())
  nameWithType: Parser.OneOf(Char[])
  nameWithType.vb: Parser.OneOf(Char())
- uid: Pidgin.Parser.OneOf*
  name: OneOf
  href: api/Pidgin.Parser.html#Pidgin_Parser_OneOf_
  commentId: Overload:Pidgin.Parser.OneOf
  isSpec: "True"
  fullName: Pidgin.Parser.OneOf
  nameWithType: Parser.OneOf
- uid: Pidgin.Parser.OneOf``2(IEnumerable{Pidgin.Parser{``0,``1}})
  name: OneOf<TToken, T>(IEnumerable<Parser<TToken, T>>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_OneOf__2_IEnumerable_Pidgin_Parser___0___1___
  commentId: M:Pidgin.Parser.OneOf``2(IEnumerable{Pidgin.Parser{``0,``1}})
  name.vb: OneOf(Of TToken, T)(IEnumerable(Of Parser(Of TToken, T)))
  fullName: Pidgin.Parser.OneOf<TToken, T>(IEnumerable<Pidgin.Parser<TToken, T>>)
  fullName.vb: Pidgin.Parser.OneOf(Of TToken, T)(IEnumerable(Of Pidgin.Parser(Of TToken, T)))
  nameWithType: Parser.OneOf<TToken, T>(IEnumerable<Parser<TToken, T>>)
  nameWithType.vb: Parser.OneOf(Of TToken, T)(IEnumerable(Of Parser(Of TToken, T)))
- uid: Pidgin.Parser.OneOf``2(Pidgin.Parser{``0,``1}[])
  name: OneOf<TToken, T>(Parser<TToken, T>[])
  href: api/Pidgin.Parser.html#Pidgin_Parser_OneOf__2_Pidgin_Parser___0___1____
  commentId: M:Pidgin.Parser.OneOf``2(Pidgin.Parser{``0,``1}[])
  name.vb: OneOf(Of TToken, T)(Parser(Of TToken, T)())
  fullName: Pidgin.Parser.OneOf<TToken, T>(Pidgin.Parser<TToken, T>[])
  fullName.vb: Pidgin.Parser.OneOf(Of TToken, T)(Pidgin.Parser(Of TToken, T)())
  nameWithType: Parser.OneOf<TToken, T>(Parser<TToken, T>[])
  nameWithType.vb: Parser.OneOf(Of TToken, T)(Parser(Of TToken, T)())
- uid: Pidgin.Parser.Punctuation
  name: Punctuation
  href: api/Pidgin.Parser.html#Pidgin_Parser_Punctuation
  commentId: P:Pidgin.Parser.Punctuation
  fullName: Pidgin.Parser.Punctuation
  nameWithType: Parser.Punctuation
- uid: Pidgin.Parser.Punctuation*
  name: Punctuation
  href: api/Pidgin.Parser.html#Pidgin_Parser_Punctuation_
  commentId: Overload:Pidgin.Parser.Punctuation
  isSpec: "True"
  fullName: Pidgin.Parser.Punctuation
  nameWithType: Parser.Punctuation
- uid: Pidgin.Parser.Rec*
  name: Rec
  href: api/Pidgin.Parser.html#Pidgin_Parser_Rec_
  commentId: Overload:Pidgin.Parser.Rec
  isSpec: "True"
  fullName: Pidgin.Parser.Rec
  nameWithType: Parser.Rec
- uid: Pidgin.Parser.Rec``2(Func{Pidgin.Parser{``0,``1}})
  name: Rec<TToken, T>(Func<Parser<TToken, T>>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Rec__2_Func_Pidgin_Parser___0___1___
  commentId: M:Pidgin.Parser.Rec``2(Func{Pidgin.Parser{``0,``1}})
  name.vb: Rec(Of TToken, T)(Func(Of Parser(Of TToken, T)))
  fullName: Pidgin.Parser.Rec<TToken, T>(Func<Pidgin.Parser<TToken, T>>)
  fullName.vb: Pidgin.Parser.Rec(Of TToken, T)(Func(Of Pidgin.Parser(Of TToken, T)))
  nameWithType: Parser.Rec<TToken, T>(Func<Parser<TToken, T>>)
  nameWithType.vb: Parser.Rec(Of TToken, T)(Func(Of Parser(Of TToken, T)))
- uid: Pidgin.Parser.Rec``2(Lazy{Pidgin.Parser{``0,``1}})
  name: Rec<TToken, T>(Lazy<Parser<TToken, T>>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Rec__2_Lazy_Pidgin_Parser___0___1___
  commentId: M:Pidgin.Parser.Rec``2(Lazy{Pidgin.Parser{``0,``1}})
  name.vb: Rec(Of TToken, T)(Lazy(Of Parser(Of TToken, T)))
  fullName: Pidgin.Parser.Rec<TToken, T>(Lazy<Pidgin.Parser<TToken, T>>)
  fullName.vb: Pidgin.Parser.Rec(Of TToken, T)(Lazy(Of Pidgin.Parser(Of TToken, T)))
  nameWithType: Parser.Rec<TToken, T>(Lazy<Parser<TToken, T>>)
  nameWithType.vb: Parser.Rec(Of TToken, T)(Lazy(Of Parser(Of TToken, T)))
- uid: Pidgin.Parser.RepeatString*
  name: RepeatString
  href: api/Pidgin.Parser.html#Pidgin_Parser_RepeatString_
  commentId: Overload:Pidgin.Parser.RepeatString
  isSpec: "True"
  fullName: Pidgin.Parser.RepeatString
  nameWithType: Parser.RepeatString
- uid: Pidgin.Parser.RepeatString``1(Pidgin.Parser{``0,System.Char},System.Int32)
  name: RepeatString<TToken>(Parser<TToken, Char>, Int32)
  href: api/Pidgin.Parser.html#Pidgin_Parser_RepeatString__1_Pidgin_Parser___0_System_Char__System_Int32_
  commentId: M:Pidgin.Parser.RepeatString``1(Pidgin.Parser{``0,System.Char},System.Int32)
  name.vb: RepeatString(Of TToken)(Parser(Of TToken, Char), Int32)
  fullName: Pidgin.Parser.RepeatString<TToken>(Pidgin.Parser<TToken, System.Char>, System.Int32)
  fullName.vb: Pidgin.Parser.RepeatString(Of TToken)(Pidgin.Parser(Of TToken, System.Char), System.Int32)
  nameWithType: Parser.RepeatString<TToken>(Parser<TToken, Char>, Int32)
  nameWithType.vb: Parser.RepeatString(Of TToken)(Parser(Of TToken, Char), Int32)
- uid: Pidgin.Parser.ResetDefaultPosCalculator*
  name: ResetDefaultPosCalculator
  href: api/Pidgin.Parser.html#Pidgin_Parser_ResetDefaultPosCalculator_
  commentId: Overload:Pidgin.Parser.ResetDefaultPosCalculator
  isSpec: "True"
  fullName: Pidgin.Parser.ResetDefaultPosCalculator
  nameWithType: Parser.ResetDefaultPosCalculator
- uid: Pidgin.Parser.ResetDefaultPosCalculator``1
  name: ResetDefaultPosCalculator<TToken>()
  href: api/Pidgin.Parser.html#Pidgin_Parser_ResetDefaultPosCalculator__1
  commentId: M:Pidgin.Parser.ResetDefaultPosCalculator``1
  name.vb: ResetDefaultPosCalculator(Of TToken)()
  fullName: Pidgin.Parser.ResetDefaultPosCalculator<TToken>()
  fullName.vb: Pidgin.Parser.ResetDefaultPosCalculator(Of TToken)()
  nameWithType: Parser.ResetDefaultPosCalculator<TToken>()
  nameWithType.vb: Parser.ResetDefaultPosCalculator(Of TToken)()
- uid: Pidgin.Parser.Separator
  name: Separator
  href: api/Pidgin.Parser.html#Pidgin_Parser_Separator
  commentId: P:Pidgin.Parser.Separator
  fullName: Pidgin.Parser.Separator
  nameWithType: Parser.Separator
- uid: Pidgin.Parser.Separator*
  name: Separator
  href: api/Pidgin.Parser.html#Pidgin_Parser_Separator_
  commentId: Overload:Pidgin.Parser.Separator
  isSpec: "True"
  fullName: Pidgin.Parser.Separator
  nameWithType: Parser.Separator
- uid: Pidgin.Parser.SetDefaultPosCalculator*
  name: SetDefaultPosCalculator
  href: api/Pidgin.Parser.html#Pidgin_Parser_SetDefaultPosCalculator_
  commentId: Overload:Pidgin.Parser.SetDefaultPosCalculator
  isSpec: "True"
  fullName: Pidgin.Parser.SetDefaultPosCalculator
  nameWithType: Parser.SetDefaultPosCalculator
- uid: Pidgin.Parser.SetDefaultPosCalculator``1(Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: SetDefaultPosCalculator<TToken>(Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_SetDefaultPosCalculator__1_Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.Parser.SetDefaultPosCalculator``1(Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: SetDefaultPosCalculator(Of TToken)(Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.Parser.SetDefaultPosCalculator<TToken>(Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.Parser.SetDefaultPosCalculator(Of TToken)(Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: Parser.SetDefaultPosCalculator<TToken>(Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: Parser.SetDefaultPosCalculator(Of TToken)(Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.Parser.SkipWhitespaces
  name: SkipWhitespaces
  href: api/Pidgin.Parser.html#Pidgin_Parser_SkipWhitespaces
  commentId: P:Pidgin.Parser.SkipWhitespaces
  fullName: Pidgin.Parser.SkipWhitespaces
  nameWithType: Parser.SkipWhitespaces
- uid: Pidgin.Parser.SkipWhitespaces*
  name: SkipWhitespaces
  href: api/Pidgin.Parser.html#Pidgin_Parser_SkipWhitespaces_
  commentId: Overload:Pidgin.Parser.SkipWhitespaces
  isSpec: "True"
  fullName: Pidgin.Parser.SkipWhitespaces
  nameWithType: Parser.SkipWhitespaces
- uid: Pidgin.Parser.String(System.String)
  name: String(String)
  href: api/Pidgin.Parser.html#Pidgin_Parser_String_System_String_
  commentId: M:Pidgin.Parser.String(System.String)
  fullName: Pidgin.Parser.String(System.String)
  nameWithType: Parser.String(String)
- uid: Pidgin.Parser.String*
  name: String
  href: api/Pidgin.Parser.html#Pidgin_Parser_String_
  commentId: Overload:Pidgin.Parser.String
  isSpec: "True"
  fullName: Pidgin.Parser.String
  nameWithType: Parser.String
- uid: Pidgin.Parser.Symbol
  name: Symbol
  href: api/Pidgin.Parser.html#Pidgin_Parser_Symbol
  commentId: P:Pidgin.Parser.Symbol
  fullName: Pidgin.Parser.Symbol
  nameWithType: Parser.Symbol
- uid: Pidgin.Parser.Symbol*
  name: Symbol
  href: api/Pidgin.Parser.html#Pidgin_Parser_Symbol_
  commentId: Overload:Pidgin.Parser.Symbol
  isSpec: "True"
  fullName: Pidgin.Parser.Symbol
  nameWithType: Parser.Symbol
- uid: Pidgin.Parser.Try*
  name: Try
  href: api/Pidgin.Parser.html#Pidgin_Parser_Try_
  commentId: Overload:Pidgin.Parser.Try
  isSpec: "True"
  fullName: Pidgin.Parser.Try
  nameWithType: Parser.Try
- uid: Pidgin.Parser.Try``2(Pidgin.Parser{``0,``1})
  name: Try<TToken, T>(Parser<TToken, T>)
  href: api/Pidgin.Parser.html#Pidgin_Parser_Try__2_Pidgin_Parser___0___1__
  commentId: M:Pidgin.Parser.Try``2(Pidgin.Parser{``0,``1})
  name.vb: Try(Of TToken, T)(Parser(Of TToken, T))
  fullName: Pidgin.Parser.Try<TToken, T>(Pidgin.Parser<TToken, T>)
  fullName.vb: Pidgin.Parser.Try(Of TToken, T)(Pidgin.Parser(Of TToken, T))
  nameWithType: Parser.Try<TToken, T>(Parser<TToken, T>)
  nameWithType.vb: Parser.Try(Of TToken, T)(Parser(Of TToken, T))
- uid: Pidgin.Parser.UnsignedInt(System.Int32)
  name: UnsignedInt(Int32)
  href: api/Pidgin.Parser.html#Pidgin_Parser_UnsignedInt_System_Int32_
  commentId: M:Pidgin.Parser.UnsignedInt(System.Int32)
  fullName: Pidgin.Parser.UnsignedInt(System.Int32)
  nameWithType: Parser.UnsignedInt(Int32)
- uid: Pidgin.Parser.UnsignedInt*
  name: UnsignedInt
  href: api/Pidgin.Parser.html#Pidgin_Parser_UnsignedInt_
  commentId: Overload:Pidgin.Parser.UnsignedInt
  isSpec: "True"
  fullName: Pidgin.Parser.UnsignedInt
  nameWithType: Parser.UnsignedInt
- uid: Pidgin.Parser.UnsignedLong(System.Int32)
  name: UnsignedLong(Int32)
  href: api/Pidgin.Parser.html#Pidgin_Parser_UnsignedLong_System_Int32_
  commentId: M:Pidgin.Parser.UnsignedLong(System.Int32)
  fullName: Pidgin.Parser.UnsignedLong(System.Int32)
  nameWithType: Parser.UnsignedLong(Int32)
- uid: Pidgin.Parser.UnsignedLong*
  name: UnsignedLong
  href: api/Pidgin.Parser.html#Pidgin_Parser_UnsignedLong_
  commentId: Overload:Pidgin.Parser.UnsignedLong
  isSpec: "True"
  fullName: Pidgin.Parser.UnsignedLong
  nameWithType: Parser.UnsignedLong
- uid: Pidgin.Parser.Uppercase
  name: Uppercase
  href: api/Pidgin.Parser.html#Pidgin_Parser_Uppercase
  commentId: P:Pidgin.Parser.Uppercase
  fullName: Pidgin.Parser.Uppercase
  nameWithType: Parser.Uppercase
- uid: Pidgin.Parser.Uppercase*
  name: Uppercase
  href: api/Pidgin.Parser.html#Pidgin_Parser_Uppercase_
  commentId: Overload:Pidgin.Parser.Uppercase
  isSpec: "True"
  fullName: Pidgin.Parser.Uppercase
  nameWithType: Parser.Uppercase
- uid: Pidgin.Parser.Whitespace
  name: Whitespace
  href: api/Pidgin.Parser.html#Pidgin_Parser_Whitespace
  commentId: P:Pidgin.Parser.Whitespace
  fullName: Pidgin.Parser.Whitespace
  nameWithType: Parser.Whitespace
- uid: Pidgin.Parser.Whitespace*
  name: Whitespace
  href: api/Pidgin.Parser.html#Pidgin_Parser_Whitespace_
  commentId: Overload:Pidgin.Parser.Whitespace
  isSpec: "True"
  fullName: Pidgin.Parser.Whitespace
  nameWithType: Parser.Whitespace
- uid: Pidgin.Parser.Whitespaces
  name: Whitespaces
  href: api/Pidgin.Parser.html#Pidgin_Parser_Whitespaces
  commentId: P:Pidgin.Parser.Whitespaces
  fullName: Pidgin.Parser.Whitespaces
  nameWithType: Parser.Whitespaces
- uid: Pidgin.Parser.Whitespaces*
  name: Whitespaces
  href: api/Pidgin.Parser.html#Pidgin_Parser_Whitespaces_
  commentId: Overload:Pidgin.Parser.Whitespaces
  isSpec: "True"
  fullName: Pidgin.Parser.Whitespaces
  nameWithType: Parser.Whitespaces
- uid: Pidgin.Parser.WhitespaceString
  name: WhitespaceString
  href: api/Pidgin.Parser.html#Pidgin_Parser_WhitespaceString
  commentId: P:Pidgin.Parser.WhitespaceString
  fullName: Pidgin.Parser.WhitespaceString
  nameWithType: Parser.WhitespaceString
- uid: Pidgin.Parser.WhitespaceString*
  name: WhitespaceString
  href: api/Pidgin.Parser.html#Pidgin_Parser_WhitespaceString_
  commentId: Overload:Pidgin.Parser.WhitespaceString
  isSpec: "True"
  fullName: Pidgin.Parser.WhitespaceString
  nameWithType: Parser.WhitespaceString
- uid: Pidgin.Parser`1
  name: Parser<TToken>
  href: api/Pidgin.Parser-1.html
  commentId: T:Pidgin.Parser`1
  name.vb: Parser(Of TToken)
  fullName: Pidgin.Parser<TToken>
  fullName.vb: Pidgin.Parser(Of TToken)
  nameWithType: Parser<TToken>
  nameWithType.vb: Parser(Of TToken)
- uid: Pidgin.Parser`1.Any
  name: Any
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Any
  commentId: P:Pidgin.Parser`1.Any
  fullName: Pidgin.Parser<TToken>.Any
  fullName.vb: Pidgin.Parser(Of TToken).Any
  nameWithType: Parser<TToken>.Any
  nameWithType.vb: Parser(Of TToken).Any
- uid: Pidgin.Parser`1.Any*
  name: Any
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Any_
  commentId: Overload:Pidgin.Parser`1.Any
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.Any
  fullName.vb: Pidgin.Parser(Of TToken).Any
  nameWithType: Parser<TToken>.Any
  nameWithType.vb: Parser(Of TToken).Any
- uid: Pidgin.Parser`1.CurrentPos
  name: CurrentPos
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_CurrentPos
  commentId: P:Pidgin.Parser`1.CurrentPos
  fullName: Pidgin.Parser<TToken>.CurrentPos
  fullName.vb: Pidgin.Parser(Of TToken).CurrentPos
  nameWithType: Parser<TToken>.CurrentPos
  nameWithType.vb: Parser(Of TToken).CurrentPos
- uid: Pidgin.Parser`1.CurrentPos*
  name: CurrentPos
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_CurrentPos_
  commentId: Overload:Pidgin.Parser`1.CurrentPos
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.CurrentPos
  fullName.vb: Pidgin.Parser(Of TToken).CurrentPos
  nameWithType: Parser<TToken>.CurrentPos
  nameWithType.vb: Parser(Of TToken).CurrentPos
- uid: Pidgin.Parser`1.End
  name: End
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_End
  commentId: P:Pidgin.Parser`1.End
  fullName: Pidgin.Parser<TToken>.End
  fullName.vb: Pidgin.Parser(Of TToken).End
  nameWithType: Parser<TToken>.End
  nameWithType.vb: Parser(Of TToken).End
- uid: Pidgin.Parser`1.End*
  name: End
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_End_
  commentId: Overload:Pidgin.Parser`1.End
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.End
  fullName.vb: Pidgin.Parser(Of TToken).End
  nameWithType: Parser<TToken>.End
  nameWithType.vb: Parser(Of TToken).End
- uid: Pidgin.Parser`1.Fail*
  name: Fail
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Fail_
  commentId: Overload:Pidgin.Parser`1.Fail
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.Fail
  fullName.vb: Pidgin.Parser(Of TToken).Fail
  nameWithType: Parser<TToken>.Fail
  nameWithType.vb: Parser(Of TToken).Fail
- uid: Pidgin.Parser`1.Fail``1(System.String)
  name: Fail<T>(String)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Fail__1_System_String_
  commentId: M:Pidgin.Parser`1.Fail``1(System.String)
  name.vb: Fail(Of T)(String)
  fullName: Pidgin.Parser<TToken>.Fail<T>(System.String)
  fullName.vb: Pidgin.Parser(Of TToken).Fail(Of T)(System.String)
  nameWithType: Parser<TToken>.Fail<T>(String)
  nameWithType.vb: Parser(Of TToken).Fail(Of T)(String)
- uid: Pidgin.Parser`1.FromResult*
  name: FromResult
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_FromResult_
  commentId: Overload:Pidgin.Parser`1.FromResult
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.FromResult
  fullName.vb: Pidgin.Parser(Of TToken).FromResult
  nameWithType: Parser<TToken>.FromResult
  nameWithType.vb: Parser(Of TToken).FromResult
- uid: Pidgin.Parser`1.FromResult``1(``0)
  name: FromResult<T>(T)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_FromResult__1___0_
  commentId: M:Pidgin.Parser`1.FromResult``1(``0)
  name.vb: FromResult(Of T)(T)
  fullName: Pidgin.Parser<TToken>.FromResult<T>(T)
  fullName.vb: Pidgin.Parser(Of TToken).FromResult(Of T)(T)
  nameWithType: Parser<TToken>.FromResult<T>(T)
  nameWithType.vb: Parser(Of TToken).FromResult(Of T)(T)
- uid: Pidgin.Parser`1.Return*
  name: Return
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Return_
  commentId: Overload:Pidgin.Parser`1.Return
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.Return
  fullName.vb: Pidgin.Parser(Of TToken).Return
  nameWithType: Parser<TToken>.Return
  nameWithType.vb: Parser(Of TToken).Return
- uid: Pidgin.Parser`1.Return``1(``0)
  name: Return<T>(T)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Return__1___0_
  commentId: M:Pidgin.Parser`1.Return``1(``0)
  name.vb: Return(Of T)(T)
  fullName: Pidgin.Parser<TToken>.Return<T>(T)
  fullName.vb: Pidgin.Parser(Of TToken).Return(Of T)(T)
  nameWithType: Parser<TToken>.Return<T>(T)
  nameWithType.vb: Parser(Of TToken).Return(Of T)(T)
- uid: Pidgin.Parser`1.Sequence(`0[])
  name: Sequence(TToken[])
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Sequence__0___
  commentId: M:Pidgin.Parser`1.Sequence(`0[])
  name.vb: Sequence(TToken())
  fullName: Pidgin.Parser<TToken>.Sequence(TToken[])
  fullName.vb: Pidgin.Parser(Of TToken).Sequence(TToken())
  nameWithType: Parser<TToken>.Sequence(TToken[])
  nameWithType.vb: Parser(Of TToken).Sequence(TToken())
- uid: Pidgin.Parser`1.Sequence*
  name: Sequence
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Sequence_
  commentId: Overload:Pidgin.Parser`1.Sequence
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.Sequence
  fullName.vb: Pidgin.Parser(Of TToken).Sequence
  nameWithType: Parser<TToken>.Sequence
  nameWithType.vb: Parser(Of TToken).Sequence
- uid: Pidgin.Parser`1.Sequence``1(``0)
  name: Sequence<TEnumerable>(TEnumerable)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Sequence__1___0_
  commentId: M:Pidgin.Parser`1.Sequence``1(``0)
  name.vb: Sequence(Of TEnumerable)(TEnumerable)
  fullName: Pidgin.Parser<TToken>.Sequence<TEnumerable>(TEnumerable)
  fullName.vb: Pidgin.Parser(Of TToken).Sequence(Of TEnumerable)(TEnumerable)
  nameWithType: Parser<TToken>.Sequence<TEnumerable>(TEnumerable)
  nameWithType.vb: Parser(Of TToken).Sequence(Of TEnumerable)(TEnumerable)
- uid: Pidgin.Parser`1.Sequence``1(IEnumerable{Pidgin.Parser{`0,``0}})
  name: Sequence<T>(IEnumerable<Parser<TToken, T>>)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Sequence__1_IEnumerable_Pidgin_Parser__0___0___
  commentId: M:Pidgin.Parser`1.Sequence``1(IEnumerable{Pidgin.Parser{`0,``0}})
  name.vb: Sequence(Of T)(IEnumerable(Of Parser(Of TToken, T)))
  fullName: Pidgin.Parser<TToken>.Sequence<T>(IEnumerable<Pidgin.Parser<TToken, T>>)
  fullName.vb: Pidgin.Parser(Of TToken).Sequence(Of T)(IEnumerable(Of Pidgin.Parser(Of TToken, T)))
  nameWithType: Parser<TToken>.Sequence<T>(IEnumerable<Parser<TToken, T>>)
  nameWithType.vb: Parser(Of TToken).Sequence(Of T)(IEnumerable(Of Parser(Of TToken, T)))
- uid: Pidgin.Parser`1.Sequence``1(Pidgin.Parser{`0,``0}[])
  name: Sequence<T>(Parser<TToken, T>[])
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Sequence__1_Pidgin_Parser__0___0____
  commentId: M:Pidgin.Parser`1.Sequence``1(Pidgin.Parser{`0,``0}[])
  name.vb: Sequence(Of T)(Parser(Of TToken, T)())
  fullName: Pidgin.Parser<TToken>.Sequence<T>(Pidgin.Parser<TToken, T>[])
  fullName.vb: Pidgin.Parser(Of TToken).Sequence(Of T)(Pidgin.Parser(Of TToken, T)())
  nameWithType: Parser<TToken>.Sequence<T>(Parser<TToken, T>[])
  nameWithType.vb: Parser(Of TToken).Sequence(Of T)(Parser(Of TToken, T)())
- uid: Pidgin.Parser`1.Token(`0)
  name: Token(TToken)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Token__0_
  commentId: M:Pidgin.Parser`1.Token(`0)
  fullName: Pidgin.Parser<TToken>.Token(TToken)
  fullName.vb: Pidgin.Parser(Of TToken).Token(TToken)
  nameWithType: Parser<TToken>.Token(TToken)
  nameWithType.vb: Parser(Of TToken).Token(TToken)
- uid: Pidgin.Parser`1.Token(Func{`0,System.Boolean})
  name: Token(Func<TToken, Boolean>)
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Token_Func__0_System_Boolean__
  commentId: M:Pidgin.Parser`1.Token(Func{`0,System.Boolean})
  name.vb: Token(Func(Of TToken, Boolean))
  fullName: Pidgin.Parser<TToken>.Token(Func<TToken, System.Boolean>)
  fullName.vb: Pidgin.Parser(Of TToken).Token(Func(Of TToken, System.Boolean))
  nameWithType: Parser<TToken>.Token(Func<TToken, Boolean>)
  nameWithType.vb: Parser(Of TToken).Token(Func(Of TToken, Boolean))
- uid: Pidgin.Parser`1.Token*
  name: Token
  href: api/Pidgin.Parser-1.html#Pidgin_Parser_1_Token_
  commentId: Overload:Pidgin.Parser`1.Token
  isSpec: "True"
  fullName: Pidgin.Parser<TToken>.Token
  fullName.vb: Pidgin.Parser(Of TToken).Token
  nameWithType: Parser<TToken>.Token
  nameWithType.vb: Parser(Of TToken).Token
- uid: Pidgin.Parser`2
  name: Parser<TToken, T>
  href: api/Pidgin.Parser-2.html
  commentId: T:Pidgin.Parser`2
  name.vb: Parser(Of TToken, T)
  fullName: Pidgin.Parser<TToken, T>
  fullName.vb: Pidgin.Parser(Of TToken, T)
  nameWithType: Parser<TToken, T>
  nameWithType.vb: Parser(Of TToken, T)
- uid: Pidgin.Parser`2.Assert(Func{`1,System.Boolean})
  name: Assert(Func<T, Boolean>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Assert_Func__1_System_Boolean__
  commentId: M:Pidgin.Parser`2.Assert(Func{`1,System.Boolean})
  name.vb: Assert(Func(Of T, Boolean))
  fullName: Pidgin.Parser<TToken, T>.Assert(Func<T, System.Boolean>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Assert(Func(Of T, System.Boolean))
  nameWithType: Parser<TToken, T>.Assert(Func<T, Boolean>)
  nameWithType.vb: Parser(Of TToken, T).Assert(Func(Of T, Boolean))
- uid: Pidgin.Parser`2.Assert(Func{`1,System.Boolean},Func{`1,System.String})
  name: Assert(Func<T, Boolean>, Func<T, String>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Assert_Func__1_System_Boolean__Func__1_System_String__
  commentId: M:Pidgin.Parser`2.Assert(Func{`1,System.Boolean},Func{`1,System.String})
  name.vb: Assert(Func(Of T, Boolean), Func(Of T, String))
  fullName: Pidgin.Parser<TToken, T>.Assert(Func<T, System.Boolean>, Func<T, System.String>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Assert(Func(Of T, System.Boolean), Func(Of T, System.String))
  nameWithType: Parser<TToken, T>.Assert(Func<T, Boolean>, Func<T, String>)
  nameWithType.vb: Parser(Of TToken, T).Assert(Func(Of T, Boolean), Func(Of T, String))
- uid: Pidgin.Parser`2.Assert(Func{`1,System.Boolean},System.String)
  name: Assert(Func<T, Boolean>, String)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Assert_Func__1_System_Boolean__System_String_
  commentId: M:Pidgin.Parser`2.Assert(Func{`1,System.Boolean},System.String)
  name.vb: Assert(Func(Of T, Boolean), String)
  fullName: Pidgin.Parser<TToken, T>.Assert(Func<T, System.Boolean>, System.String)
  fullName.vb: Pidgin.Parser(Of TToken, T).Assert(Func(Of T, System.Boolean), System.String)
  nameWithType: Parser<TToken, T>.Assert(Func<T, Boolean>, String)
  nameWithType.vb: Parser(Of TToken, T).Assert(Func(Of T, Boolean), String)
- uid: Pidgin.Parser`2.Assert*
  name: Assert
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Assert_
  commentId: Overload:Pidgin.Parser`2.Assert
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Assert
  fullName.vb: Pidgin.Parser(Of TToken, T).Assert
  nameWithType: Parser<TToken, T>.Assert
  nameWithType.vb: Parser(Of TToken, T).Assert
- uid: Pidgin.Parser`2.AtLeastOnce
  name: AtLeastOnce()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_AtLeastOnce
  commentId: M:Pidgin.Parser`2.AtLeastOnce
  fullName: Pidgin.Parser<TToken, T>.AtLeastOnce()
  fullName.vb: Pidgin.Parser(Of TToken, T).AtLeastOnce()
  nameWithType: Parser<TToken, T>.AtLeastOnce()
  nameWithType.vb: Parser(Of TToken, T).AtLeastOnce()
- uid: Pidgin.Parser`2.AtLeastOnce*
  name: AtLeastOnce
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_AtLeastOnce_
  commentId: Overload:Pidgin.Parser`2.AtLeastOnce
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.AtLeastOnce
  fullName.vb: Pidgin.Parser(Of TToken, T).AtLeastOnce
  nameWithType: Parser<TToken, T>.AtLeastOnce
  nameWithType.vb: Parser(Of TToken, T).AtLeastOnce
- uid: Pidgin.Parser`2.AtLeastOnceUntil*
  name: AtLeastOnceUntil
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_AtLeastOnceUntil_
  commentId: Overload:Pidgin.Parser`2.AtLeastOnceUntil
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.AtLeastOnceUntil
  fullName.vb: Pidgin.Parser(Of TToken, T).AtLeastOnceUntil
  nameWithType: Parser<TToken, T>.AtLeastOnceUntil
  nameWithType.vb: Parser(Of TToken, T).AtLeastOnceUntil
- uid: Pidgin.Parser`2.AtLeastOnceUntil``1(Pidgin.Parser{`0,``0})
  name: AtLeastOnceUntil<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_AtLeastOnceUntil__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.AtLeastOnceUntil``1(Pidgin.Parser{`0,``0})
  name.vb: AtLeastOnceUntil(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.AtLeastOnceUntil<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).AtLeastOnceUntil(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.AtLeastOnceUntil<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).AtLeastOnceUntil(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Before*
  name: Before
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Before_
  commentId: Overload:Pidgin.Parser`2.Before
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Before
  fullName.vb: Pidgin.Parser(Of TToken, T).Before
  nameWithType: Parser<TToken, T>.Before
  nameWithType.vb: Parser(Of TToken, T).Before
- uid: Pidgin.Parser`2.Before``1(Pidgin.Parser{`0,``0})
  name: Before<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Before__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.Before``1(Pidgin.Parser{`0,``0})
  name.vb: Before(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.Before<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Before(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.Before<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).Before(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Between*
  name: Between
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Between_
  commentId: Overload:Pidgin.Parser`2.Between
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Between
  fullName.vb: Pidgin.Parser(Of TToken, T).Between
  nameWithType: Parser<TToken, T>.Between
  nameWithType.vb: Parser(Of TToken, T).Between
- uid: Pidgin.Parser`2.Between``1(Pidgin.Parser{`0,``0})
  name: Between<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Between__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.Between``1(Pidgin.Parser{`0,``0})
  name.vb: Between(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.Between<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Between(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.Between<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).Between(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Between``2(Pidgin.Parser{`0,``0},Pidgin.Parser{`0,``1})
  name: Between<U, V>(Parser<TToken, U>, Parser<TToken, V>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Between__2_Pidgin_Parser__0___0__Pidgin_Parser__0___1__
  commentId: M:Pidgin.Parser`2.Between``2(Pidgin.Parser{`0,``0},Pidgin.Parser{`0,``1})
  name.vb: Between(Of U, V)(Parser(Of TToken, U), Parser(Of TToken, V))
  fullName: Pidgin.Parser<TToken, T>.Between<U, V>(Pidgin.Parser<TToken, U>, Pidgin.Parser<TToken, V>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Between(Of U, V)(Pidgin.Parser(Of TToken, U), Pidgin.Parser(Of TToken, V))
  nameWithType: Parser<TToken, T>.Between<U, V>(Parser<TToken, U>, Parser<TToken, V>)
  nameWithType.vb: Parser(Of TToken, T).Between(Of U, V)(Parser(Of TToken, U), Parser(Of TToken, V))
- uid: Pidgin.Parser`2.Bind*
  name: Bind
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Bind_
  commentId: Overload:Pidgin.Parser`2.Bind
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Bind
  fullName.vb: Pidgin.Parser(Of TToken, T).Bind
  nameWithType: Parser<TToken, T>.Bind
  nameWithType.vb: Parser(Of TToken, T).Bind
- uid: Pidgin.Parser`2.Bind``1(Func{`1,Pidgin.Parser{`0,``0}})
  name: Bind<U>(Func<T, Parser<TToken, U>>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Bind__1_Func__1_Pidgin_Parser__0___0___
  commentId: M:Pidgin.Parser`2.Bind``1(Func{`1,Pidgin.Parser{`0,``0}})
  name.vb: Bind(Of U)(Func(Of T, Parser(Of TToken, U)))
  fullName: Pidgin.Parser<TToken, T>.Bind<U>(Func<T, Pidgin.Parser<TToken, U>>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Bind(Of U)(Func(Of T, Pidgin.Parser(Of TToken, U)))
  nameWithType: Parser<TToken, T>.Bind<U>(Func<T, Parser<TToken, U>>)
  nameWithType.vb: Parser(Of TToken, T).Bind(Of U)(Func(Of T, Parser(Of TToken, U)))
- uid: Pidgin.Parser`2.Bind``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name: Bind<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Bind__2_Func__1_Pidgin_Parser__0___0___Func__1___0___1__
  commentId: M:Pidgin.Parser`2.Bind``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name.vb: Bind(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
  fullName: Pidgin.Parser<TToken, T>.Bind<U, R>(Func<T, Pidgin.Parser<TToken, U>>, Func<T, U, R>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Bind(Of U, R)(Func(Of T, Pidgin.Parser(Of TToken, U)), Func(Of T, U, R))
  nameWithType: Parser<TToken, T>.Bind<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  nameWithType.vb: Parser(Of TToken, T).Bind(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
- uid: Pidgin.Parser`2.Cast*
  name: Cast
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Cast_
  commentId: Overload:Pidgin.Parser`2.Cast
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Cast
  fullName.vb: Pidgin.Parser(Of TToken, T).Cast
  nameWithType: Parser<TToken, T>.Cast
  nameWithType.vb: Parser(Of TToken, T).Cast
- uid: Pidgin.Parser`2.Cast``1
  name: Cast<U>()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Cast__1
  commentId: M:Pidgin.Parser`2.Cast``1
  name.vb: Cast(Of U)()
  fullName: Pidgin.Parser<TToken, T>.Cast<U>()
  fullName.vb: Pidgin.Parser(Of TToken, T).Cast(Of U)()
  nameWithType: Parser<TToken, T>.Cast<U>()
  nameWithType.vb: Parser(Of TToken, T).Cast(Of U)()
- uid: Pidgin.Parser`2.IgnoreResult
  name: IgnoreResult()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_IgnoreResult
  commentId: M:Pidgin.Parser`2.IgnoreResult
  fullName: Pidgin.Parser<TToken, T>.IgnoreResult()
  fullName.vb: Pidgin.Parser(Of TToken, T).IgnoreResult()
  nameWithType: Parser<TToken, T>.IgnoreResult()
  nameWithType.vb: Parser(Of TToken, T).IgnoreResult()
- uid: Pidgin.Parser`2.IgnoreResult*
  name: IgnoreResult
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_IgnoreResult_
  commentId: Overload:Pidgin.Parser`2.IgnoreResult
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.IgnoreResult
  fullName.vb: Pidgin.Parser(Of TToken, T).IgnoreResult
  nameWithType: Parser<TToken, T>.IgnoreResult
  nameWithType.vb: Parser(Of TToken, T).IgnoreResult
- uid: Pidgin.Parser`2.Labelled(System.String)
  name: Labelled(String)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Labelled_System_String_
  commentId: M:Pidgin.Parser`2.Labelled(System.String)
  fullName: Pidgin.Parser<TToken, T>.Labelled(System.String)
  fullName.vb: Pidgin.Parser(Of TToken, T).Labelled(System.String)
  nameWithType: Parser<TToken, T>.Labelled(String)
  nameWithType.vb: Parser(Of TToken, T).Labelled(String)
- uid: Pidgin.Parser`2.Labelled*
  name: Labelled
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Labelled_
  commentId: Overload:Pidgin.Parser`2.Labelled
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Labelled
  fullName.vb: Pidgin.Parser(Of TToken, T).Labelled
  nameWithType: Parser<TToken, T>.Labelled
  nameWithType.vb: Parser(Of TToken, T).Labelled
- uid: Pidgin.Parser`2.Many
  name: Many()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Many
  commentId: M:Pidgin.Parser`2.Many
  fullName: Pidgin.Parser<TToken, T>.Many()
  fullName.vb: Pidgin.Parser(Of TToken, T).Many()
  nameWithType: Parser<TToken, T>.Many()
  nameWithType.vb: Parser(Of TToken, T).Many()
- uid: Pidgin.Parser`2.Many*
  name: Many
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Many_
  commentId: Overload:Pidgin.Parser`2.Many
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Many
  fullName.vb: Pidgin.Parser(Of TToken, T).Many
  nameWithType: Parser<TToken, T>.Many
  nameWithType.vb: Parser(Of TToken, T).Many
- uid: Pidgin.Parser`2.OfType*
  name: OfType
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_OfType_
  commentId: Overload:Pidgin.Parser`2.OfType
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.OfType
  fullName.vb: Pidgin.Parser(Of TToken, T).OfType
  nameWithType: Parser<TToken, T>.OfType
  nameWithType.vb: Parser(Of TToken, T).OfType
- uid: Pidgin.Parser`2.OfType``1
  name: OfType<U>()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_OfType__1
  commentId: M:Pidgin.Parser`2.OfType``1
  name.vb: OfType(Of U)()
  fullName: Pidgin.Parser<TToken, T>.OfType<U>()
  fullName.vb: Pidgin.Parser(Of TToken, T).OfType(Of U)()
  nameWithType: Parser<TToken, T>.OfType<U>()
  nameWithType.vb: Parser(Of TToken, T).OfType(Of U)()
- uid: Pidgin.Parser`2.Optional
  name: Optional()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Optional
  commentId: M:Pidgin.Parser`2.Optional
  fullName: Pidgin.Parser<TToken, T>.Optional()
  fullName.vb: Pidgin.Parser(Of TToken, T).Optional()
  nameWithType: Parser<TToken, T>.Optional()
  nameWithType.vb: Parser(Of TToken, T).Optional()
- uid: Pidgin.Parser`2.Optional*
  name: Optional
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Optional_
  commentId: Overload:Pidgin.Parser`2.Optional
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Optional
  fullName.vb: Pidgin.Parser(Of TToken, T).Optional
  nameWithType: Parser<TToken, T>.Optional
  nameWithType.vb: Parser(Of TToken, T).Optional
- uid: Pidgin.Parser`2.Or(Pidgin.Parser{`0,`1})
  name: Or(Parser<TToken, T>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Or_Pidgin_Parser__0__1__
  commentId: M:Pidgin.Parser`2.Or(Pidgin.Parser{`0,`1})
  name.vb: Or(Parser(Of TToken, T))
  fullName: Pidgin.Parser<TToken, T>.Or(Pidgin.Parser<TToken, T>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Or(Pidgin.Parser(Of TToken, T))
  nameWithType: Parser<TToken, T>.Or(Parser<TToken, T>)
  nameWithType.vb: Parser(Of TToken, T).Or(Parser(Of TToken, T))
- uid: Pidgin.Parser`2.Or*
  name: Or
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Or_
  commentId: Overload:Pidgin.Parser`2.Or
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Or
  fullName.vb: Pidgin.Parser(Of TToken, T).Or
  nameWithType: Parser<TToken, T>.Or
  nameWithType.vb: Parser(Of TToken, T).Or
- uid: Pidgin.Parser`2.RecoverWith(Func{Pidgin.ParseError{`0},Pidgin.Parser{`0,`1}})
  name: RecoverWith(Func<ParseError<TToken>, Parser<TToken, T>>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_RecoverWith_Func_Pidgin_ParseError__0__Pidgin_Parser__0__1___
  commentId: M:Pidgin.Parser`2.RecoverWith(Func{Pidgin.ParseError{`0},Pidgin.Parser{`0,`1}})
  name.vb: RecoverWith(Func(Of ParseError(Of TToken), Parser(Of TToken, T)))
  fullName: Pidgin.Parser<TToken, T>.RecoverWith(Func<Pidgin.ParseError<TToken>, Pidgin.Parser<TToken, T>>)
  fullName.vb: Pidgin.Parser(Of TToken, T).RecoverWith(Func(Of Pidgin.ParseError(Of TToken), Pidgin.Parser(Of TToken, T)))
  nameWithType: Parser<TToken, T>.RecoverWith(Func<ParseError<TToken>, Parser<TToken, T>>)
  nameWithType.vb: Parser(Of TToken, T).RecoverWith(Func(Of ParseError(Of TToken), Parser(Of TToken, T)))
- uid: Pidgin.Parser`2.RecoverWith*
  name: RecoverWith
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_RecoverWith_
  commentId: Overload:Pidgin.Parser`2.RecoverWith
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.RecoverWith
  fullName.vb: Pidgin.Parser(Of TToken, T).RecoverWith
  nameWithType: Parser<TToken, T>.RecoverWith
  nameWithType.vb: Parser(Of TToken, T).RecoverWith
- uid: Pidgin.Parser`2.Repeat(System.Int32)
  name: Repeat(Int32)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Repeat_System_Int32_
  commentId: M:Pidgin.Parser`2.Repeat(System.Int32)
  fullName: Pidgin.Parser<TToken, T>.Repeat(System.Int32)
  fullName.vb: Pidgin.Parser(Of TToken, T).Repeat(System.Int32)
  nameWithType: Parser<TToken, T>.Repeat(Int32)
  nameWithType.vb: Parser(Of TToken, T).Repeat(Int32)
- uid: Pidgin.Parser`2.Repeat*
  name: Repeat
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Repeat_
  commentId: Overload:Pidgin.Parser`2.Repeat
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Repeat
  fullName.vb: Pidgin.Parser(Of TToken, T).Repeat
  nameWithType: Parser<TToken, T>.Repeat
  nameWithType.vb: Parser(Of TToken, T).Repeat
- uid: Pidgin.Parser`2.Select*
  name: Select
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Select_
  commentId: Overload:Pidgin.Parser`2.Select
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Select
  fullName.vb: Pidgin.Parser(Of TToken, T).Select
  nameWithType: Parser<TToken, T>.Select
  nameWithType.vb: Parser(Of TToken, T).Select
- uid: Pidgin.Parser`2.Select``1(Func{`1,``0})
  name: Select<U>(Func<T, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Select__1_Func__1___0__
  commentId: M:Pidgin.Parser`2.Select``1(Func{`1,``0})
  name.vb: Select(Of U)(Func(Of T, U))
  fullName: Pidgin.Parser<TToken, T>.Select<U>(Func<T, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Select(Of U)(Func(Of T, U))
  nameWithType: Parser<TToken, T>.Select<U>(Func<T, U>)
  nameWithType.vb: Parser(Of TToken, T).Select(Of U)(Func(Of T, U))
- uid: Pidgin.Parser`2.SelectMany*
  name: SelectMany
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SelectMany_
  commentId: Overload:Pidgin.Parser`2.SelectMany
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SelectMany
  fullName.vb: Pidgin.Parser(Of TToken, T).SelectMany
  nameWithType: Parser<TToken, T>.SelectMany
  nameWithType.vb: Parser(Of TToken, T).SelectMany
- uid: Pidgin.Parser`2.SelectMany``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name: SelectMany<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SelectMany__2_Func__1_Pidgin_Parser__0___0___Func__1___0___1__
  commentId: M:Pidgin.Parser`2.SelectMany``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name.vb: SelectMany(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
  fullName: Pidgin.Parser<TToken, T>.SelectMany<U, R>(Func<T, Pidgin.Parser<TToken, U>>, Func<T, U, R>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SelectMany(Of U, R)(Func(Of T, Pidgin.Parser(Of TToken, U)), Func(Of T, U, R))
  nameWithType: Parser<TToken, T>.SelectMany<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  nameWithType.vb: Parser(Of TToken, T).SelectMany(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
- uid: Pidgin.Parser`2.Separated*
  name: Separated
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Separated_
  commentId: Overload:Pidgin.Parser`2.Separated
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Separated
  fullName.vb: Pidgin.Parser(Of TToken, T).Separated
  nameWithType: Parser<TToken, T>.Separated
  nameWithType.vb: Parser(Of TToken, T).Separated
- uid: Pidgin.Parser`2.Separated``1(Pidgin.Parser{`0,``0})
  name: Separated<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Separated__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.Separated``1(Pidgin.Parser{`0,``0})
  name.vb: Separated(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.Separated<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Separated(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.Separated<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).Separated(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SeparatedAndOptionallyTerminated*
  name: SeparatedAndOptionallyTerminated
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndOptionallyTerminated_
  commentId: Overload:Pidgin.Parser`2.SeparatedAndOptionallyTerminated
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndOptionallyTerminated
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndOptionallyTerminated
  nameWithType: Parser<TToken, T>.SeparatedAndOptionallyTerminated
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndOptionallyTerminated
- uid: Pidgin.Parser`2.SeparatedAndOptionallyTerminated``1(Pidgin.Parser{`0,``0})
  name: SeparatedAndOptionallyTerminated<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndOptionallyTerminated__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SeparatedAndOptionallyTerminated``1(Pidgin.Parser{`0,``0})
  name.vb: SeparatedAndOptionallyTerminated(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndOptionallyTerminated<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndOptionallyTerminated(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SeparatedAndOptionallyTerminated<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndOptionallyTerminated(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SeparatedAndOptionallyTerminatedAtLeastOnce*
  name: SeparatedAndOptionallyTerminatedAtLeastOnce
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndOptionallyTerminatedAtLeastOnce_
  commentId: Overload:Pidgin.Parser`2.SeparatedAndOptionallyTerminatedAtLeastOnce
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndOptionallyTerminatedAtLeastOnce
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndOptionallyTerminatedAtLeastOnce
  nameWithType: Parser<TToken, T>.SeparatedAndOptionallyTerminatedAtLeastOnce
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndOptionallyTerminatedAtLeastOnce
- uid: Pidgin.Parser`2.SeparatedAndOptionallyTerminatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name: SeparatedAndOptionallyTerminatedAtLeastOnce<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndOptionallyTerminatedAtLeastOnce__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SeparatedAndOptionallyTerminatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name.vb: SeparatedAndOptionallyTerminatedAtLeastOnce(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndOptionallyTerminatedAtLeastOnce<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndOptionallyTerminatedAtLeastOnce(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SeparatedAndOptionallyTerminatedAtLeastOnce<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndOptionallyTerminatedAtLeastOnce(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SeparatedAndTerminated*
  name: SeparatedAndTerminated
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndTerminated_
  commentId: Overload:Pidgin.Parser`2.SeparatedAndTerminated
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndTerminated
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndTerminated
  nameWithType: Parser<TToken, T>.SeparatedAndTerminated
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndTerminated
- uid: Pidgin.Parser`2.SeparatedAndTerminated``1(Pidgin.Parser{`0,``0})
  name: SeparatedAndTerminated<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndTerminated__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SeparatedAndTerminated``1(Pidgin.Parser{`0,``0})
  name.vb: SeparatedAndTerminated(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndTerminated<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndTerminated(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SeparatedAndTerminated<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndTerminated(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SeparatedAndTerminatedAtLeastOnce*
  name: SeparatedAndTerminatedAtLeastOnce
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndTerminatedAtLeastOnce_
  commentId: Overload:Pidgin.Parser`2.SeparatedAndTerminatedAtLeastOnce
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndTerminatedAtLeastOnce
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndTerminatedAtLeastOnce
  nameWithType: Parser<TToken, T>.SeparatedAndTerminatedAtLeastOnce
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndTerminatedAtLeastOnce
- uid: Pidgin.Parser`2.SeparatedAndTerminatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name: SeparatedAndTerminatedAtLeastOnce<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAndTerminatedAtLeastOnce__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SeparatedAndTerminatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name.vb: SeparatedAndTerminatedAtLeastOnce(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SeparatedAndTerminatedAtLeastOnce<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAndTerminatedAtLeastOnce(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SeparatedAndTerminatedAtLeastOnce<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SeparatedAndTerminatedAtLeastOnce(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SeparatedAtLeastOnce*
  name: SeparatedAtLeastOnce
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAtLeastOnce_
  commentId: Overload:Pidgin.Parser`2.SeparatedAtLeastOnce
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SeparatedAtLeastOnce
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAtLeastOnce
  nameWithType: Parser<TToken, T>.SeparatedAtLeastOnce
  nameWithType.vb: Parser(Of TToken, T).SeparatedAtLeastOnce
- uid: Pidgin.Parser`2.SeparatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name: SeparatedAtLeastOnce<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SeparatedAtLeastOnce__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SeparatedAtLeastOnce``1(Pidgin.Parser{`0,``0})
  name.vb: SeparatedAtLeastOnce(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SeparatedAtLeastOnce<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SeparatedAtLeastOnce(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SeparatedAtLeastOnce<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SeparatedAtLeastOnce(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SkipAtLeastOnce
  name: SkipAtLeastOnce()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipAtLeastOnce
  commentId: M:Pidgin.Parser`2.SkipAtLeastOnce
  fullName: Pidgin.Parser<TToken, T>.SkipAtLeastOnce()
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipAtLeastOnce()
  nameWithType: Parser<TToken, T>.SkipAtLeastOnce()
  nameWithType.vb: Parser(Of TToken, T).SkipAtLeastOnce()
- uid: Pidgin.Parser`2.SkipAtLeastOnce*
  name: SkipAtLeastOnce
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipAtLeastOnce_
  commentId: Overload:Pidgin.Parser`2.SkipAtLeastOnce
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SkipAtLeastOnce
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipAtLeastOnce
  nameWithType: Parser<TToken, T>.SkipAtLeastOnce
  nameWithType.vb: Parser(Of TToken, T).SkipAtLeastOnce
- uid: Pidgin.Parser`2.SkipAtLeastOnceUntil*
  name: SkipAtLeastOnceUntil
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipAtLeastOnceUntil_
  commentId: Overload:Pidgin.Parser`2.SkipAtLeastOnceUntil
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SkipAtLeastOnceUntil
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipAtLeastOnceUntil
  nameWithType: Parser<TToken, T>.SkipAtLeastOnceUntil
  nameWithType.vb: Parser(Of TToken, T).SkipAtLeastOnceUntil
- uid: Pidgin.Parser`2.SkipAtLeastOnceUntil``1(Pidgin.Parser{`0,``0})
  name: SkipAtLeastOnceUntil<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipAtLeastOnceUntil__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SkipAtLeastOnceUntil``1(Pidgin.Parser{`0,``0})
  name.vb: SkipAtLeastOnceUntil(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SkipAtLeastOnceUntil<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipAtLeastOnceUntil(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SkipAtLeastOnceUntil<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SkipAtLeastOnceUntil(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.SkipMany
  name: SkipMany()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipMany
  commentId: M:Pidgin.Parser`2.SkipMany
  fullName: Pidgin.Parser<TToken, T>.SkipMany()
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipMany()
  nameWithType: Parser<TToken, T>.SkipMany()
  nameWithType.vb: Parser(Of TToken, T).SkipMany()
- uid: Pidgin.Parser`2.SkipMany*
  name: SkipMany
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipMany_
  commentId: Overload:Pidgin.Parser`2.SkipMany
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SkipMany
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipMany
  nameWithType: Parser<TToken, T>.SkipMany
  nameWithType.vb: Parser(Of TToken, T).SkipMany
- uid: Pidgin.Parser`2.SkipUntil*
  name: SkipUntil
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipUntil_
  commentId: Overload:Pidgin.Parser`2.SkipUntil
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.SkipUntil
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipUntil
  nameWithType: Parser<TToken, T>.SkipUntil
  nameWithType.vb: Parser(Of TToken, T).SkipUntil
- uid: Pidgin.Parser`2.SkipUntil``1(Pidgin.Parser{`0,``0})
  name: SkipUntil<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_SkipUntil__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.SkipUntil``1(Pidgin.Parser{`0,``0})
  name.vb: SkipUntil(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.SkipUntil<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).SkipUntil(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.SkipUntil<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).SkipUntil(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Then*
  name: Then
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Then_
  commentId: Overload:Pidgin.Parser`2.Then
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Then
  fullName.vb: Pidgin.Parser(Of TToken, T).Then
  nameWithType: Parser<TToken, T>.Then
  nameWithType.vb: Parser(Of TToken, T).Then
- uid: Pidgin.Parser`2.Then``1(Func{`1,Pidgin.Parser{`0,``0}})
  name: Then<U>(Func<T, Parser<TToken, U>>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Then__1_Func__1_Pidgin_Parser__0___0___
  commentId: M:Pidgin.Parser`2.Then``1(Func{`1,Pidgin.Parser{`0,``0}})
  name.vb: Then(Of U)(Func(Of T, Parser(Of TToken, U)))
  fullName: Pidgin.Parser<TToken, T>.Then<U>(Func<T, Pidgin.Parser<TToken, U>>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Then(Of U)(Func(Of T, Pidgin.Parser(Of TToken, U)))
  nameWithType: Parser<TToken, T>.Then<U>(Func<T, Parser<TToken, U>>)
  nameWithType.vb: Parser(Of TToken, T).Then(Of U)(Func(Of T, Parser(Of TToken, U)))
- uid: Pidgin.Parser`2.Then``1(Pidgin.Parser{`0,``0})
  name: Then<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Then__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.Then``1(Pidgin.Parser{`0,``0})
  name.vb: Then(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.Then<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Then(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.Then<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).Then(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Then``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name: Then<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Then__2_Func__1_Pidgin_Parser__0___0___Func__1___0___1__
  commentId: M:Pidgin.Parser`2.Then``2(Func{`1,Pidgin.Parser{`0,``0}},Func{`1,``0,``1})
  name.vb: Then(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
  fullName: Pidgin.Parser<TToken, T>.Then<U, R>(Func<T, Pidgin.Parser<TToken, U>>, Func<T, U, R>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Then(Of U, R)(Func(Of T, Pidgin.Parser(Of TToken, U)), Func(Of T, U, R))
  nameWithType: Parser<TToken, T>.Then<U, R>(Func<T, Parser<TToken, U>>, Func<T, U, R>)
  nameWithType.vb: Parser(Of TToken, T).Then(Of U, R)(Func(Of T, Parser(Of TToken, U)), Func(Of T, U, R))
- uid: Pidgin.Parser`2.Then``2(Pidgin.Parser{`0,``0},Func{`1,``0,``1})
  name: Then<U, R>(Parser<TToken, U>, Func<T, U, R>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Then__2_Pidgin_Parser__0___0__Func__1___0___1__
  commentId: M:Pidgin.Parser`2.Then``2(Pidgin.Parser{`0,``0},Func{`1,``0,``1})
  name.vb: Then(Of U, R)(Parser(Of TToken, U), Func(Of T, U, R))
  fullName: Pidgin.Parser<TToken, T>.Then<U, R>(Pidgin.Parser<TToken, U>, Func<T, U, R>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Then(Of U, R)(Pidgin.Parser(Of TToken, U), Func(Of T, U, R))
  nameWithType: Parser<TToken, T>.Then<U, R>(Parser<TToken, U>, Func<T, U, R>)
  nameWithType.vb: Parser(Of TToken, T).Then(Of U, R)(Parser(Of TToken, U), Func(Of T, U, R))
- uid: Pidgin.Parser`2.ThenReturn*
  name: ThenReturn
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_ThenReturn_
  commentId: Overload:Pidgin.Parser`2.ThenReturn
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.ThenReturn
  fullName.vb: Pidgin.Parser(Of TToken, T).ThenReturn
  nameWithType: Parser<TToken, T>.ThenReturn
  nameWithType.vb: Parser(Of TToken, T).ThenReturn
- uid: Pidgin.Parser`2.ThenReturn``1(``0)
  name: ThenReturn<U>(U)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_ThenReturn__1___0_
  commentId: M:Pidgin.Parser`2.ThenReturn``1(``0)
  name.vb: ThenReturn(Of U)(U)
  fullName: Pidgin.Parser<TToken, T>.ThenReturn<U>(U)
  fullName.vb: Pidgin.Parser(Of TToken, T).ThenReturn(Of U)(U)
  nameWithType: Parser<TToken, T>.ThenReturn<U>(U)
  nameWithType.vb: Parser(Of TToken, T).ThenReturn(Of U)(U)
- uid: Pidgin.Parser`2.Trace(Func{`1,System.String})
  name: Trace(Func<T, String>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Trace_Func__1_System_String__
  commentId: M:Pidgin.Parser`2.Trace(Func{`1,System.String})
  name.vb: Trace(Func(Of T, String))
  fullName: Pidgin.Parser<TToken, T>.Trace(Func<T, System.String>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Trace(Func(Of T, System.String))
  nameWithType: Parser<TToken, T>.Trace(Func<T, String>)
  nameWithType.vb: Parser(Of TToken, T).Trace(Func(Of T, String))
- uid: Pidgin.Parser`2.Trace(System.String)
  name: Trace(String)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Trace_System_String_
  commentId: M:Pidgin.Parser`2.Trace(System.String)
  fullName: Pidgin.Parser<TToken, T>.Trace(System.String)
  fullName.vb: Pidgin.Parser(Of TToken, T).Trace(System.String)
  nameWithType: Parser<TToken, T>.Trace(String)
  nameWithType.vb: Parser(Of TToken, T).Trace(String)
- uid: Pidgin.Parser`2.Trace*
  name: Trace
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Trace_
  commentId: Overload:Pidgin.Parser`2.Trace
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Trace
  fullName.vb: Pidgin.Parser(Of TToken, T).Trace
  nameWithType: Parser<TToken, T>.Trace
  nameWithType.vb: Parser(Of TToken, T).Trace
- uid: Pidgin.Parser`2.TraceResult
  name: TraceResult()
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_TraceResult
  commentId: M:Pidgin.Parser`2.TraceResult
  fullName: Pidgin.Parser<TToken, T>.TraceResult()
  fullName.vb: Pidgin.Parser(Of TToken, T).TraceResult()
  nameWithType: Parser<TToken, T>.TraceResult()
  nameWithType.vb: Parser(Of TToken, T).TraceResult()
- uid: Pidgin.Parser`2.TraceResult*
  name: TraceResult
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_TraceResult_
  commentId: Overload:Pidgin.Parser`2.TraceResult
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.TraceResult
  fullName.vb: Pidgin.Parser(Of TToken, T).TraceResult
  nameWithType: Parser<TToken, T>.TraceResult
  nameWithType.vb: Parser(Of TToken, T).TraceResult
- uid: Pidgin.Parser`2.Until*
  name: Until
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Until_
  commentId: Overload:Pidgin.Parser`2.Until
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Until
  fullName.vb: Pidgin.Parser(Of TToken, T).Until
  nameWithType: Parser<TToken, T>.Until
  nameWithType.vb: Parser(Of TToken, T).Until
- uid: Pidgin.Parser`2.Until``1(Pidgin.Parser{`0,``0})
  name: Until<U>(Parser<TToken, U>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Until__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Parser`2.Until``1(Pidgin.Parser{`0,``0})
  name.vb: Until(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Parser<TToken, T>.Until<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Until(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: Parser<TToken, T>.Until<U>(Parser<TToken, U>)
  nameWithType.vb: Parser(Of TToken, T).Until(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Parser`2.Where(Func{`1,System.Boolean})
  name: Where(Func<T, Boolean>)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Where_Func__1_System_Boolean__
  commentId: M:Pidgin.Parser`2.Where(Func{`1,System.Boolean})
  name.vb: Where(Func(Of T, Boolean))
  fullName: Pidgin.Parser<TToken, T>.Where(Func<T, System.Boolean>)
  fullName.vb: Pidgin.Parser(Of TToken, T).Where(Func(Of T, System.Boolean))
  nameWithType: Parser<TToken, T>.Where(Func<T, Boolean>)
  nameWithType.vb: Parser(Of TToken, T).Where(Func(Of T, Boolean))
- uid: Pidgin.Parser`2.Where*
  name: Where
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_Where_
  commentId: Overload:Pidgin.Parser`2.Where
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.Where
  fullName.vb: Pidgin.Parser(Of TToken, T).Where
  nameWithType: Parser<TToken, T>.Where
  nameWithType.vb: Parser(Of TToken, T).Where
- uid: Pidgin.Parser`2.WithResult*
  name: WithResult
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_WithResult_
  commentId: Overload:Pidgin.Parser`2.WithResult
  isSpec: "True"
  fullName: Pidgin.Parser<TToken, T>.WithResult
  fullName.vb: Pidgin.Parser(Of TToken, T).WithResult
  nameWithType: Parser<TToken, T>.WithResult
  nameWithType.vb: Parser(Of TToken, T).WithResult
- uid: Pidgin.Parser`2.WithResult``1(``0)
  name: WithResult<U>(U)
  href: api/Pidgin.Parser-2.html#Pidgin_Parser_2_WithResult__1___0_
  commentId: M:Pidgin.Parser`2.WithResult``1(``0)
  name.vb: WithResult(Of U)(U)
  fullName: Pidgin.Parser<TToken, T>.WithResult<U>(U)
  fullName.vb: Pidgin.Parser(Of TToken, T).WithResult(Of U)(U)
  nameWithType: Parser<TToken, T>.WithResult<U>(U)
  nameWithType.vb: Parser(Of TToken, T).WithResult(Of U)(U)
- uid: Pidgin.ParserExtensions
  name: ParserExtensions
  href: api/Pidgin.ParserExtensions.html
  commentId: T:Pidgin.ParserExtensions
  fullName: Pidgin.ParserExtensions
  nameWithType: ParserExtensions
- uid: Pidgin.ParserExtensions.Parse*
  name: Parse
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse_
  commentId: Overload:Pidgin.ParserExtensions.Parse
  isSpec: "True"
  fullName: Pidgin.ParserExtensions.Parse
  nameWithType: ParserExtensions.Parse
- uid: Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Byte,``0},Stream,Func{System.Byte,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<T>(Parser<Byte, T>, Stream, Func<Byte, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__1_Pidgin_Parser_System_Byte___0__Stream_Func_System_Byte_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Byte,``0},Stream,Func{System.Byte,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of T)(Parser(Of Byte, T), Stream, Func(Of Byte, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<T>(Pidgin.Parser<System.Byte, T>, Stream, Func<System.Byte, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of T)(Pidgin.Parser(Of System.Byte, T), Stream, Func(Of System.Byte, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<T>(Parser<Byte, T>, Stream, Func<Byte, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of T)(Parser(Of Byte, T), Stream, Func(Of Byte, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Char,``0},System.String,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<T>(Parser<Char, T>, String, Func<Char, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__1_Pidgin_Parser_System_Char___0__System_String_Func_System_Char_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Char,``0},System.String,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of T)(Parser(Of Char, T), String, Func(Of Char, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<T>(Pidgin.Parser<System.Char, T>, System.String, Func<System.Char, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of T)(Pidgin.Parser(Of System.Char, T), System.String, Func(Of System.Char, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<T>(Parser<Char, T>, String, Func<Char, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of T)(Parser(Of Char, T), String, Func(Of Char, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Char,``0},TextReader,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<T>(Parser<Char, T>, TextReader, Func<Char, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__1_Pidgin_Parser_System_Char___0__TextReader_Func_System_Char_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``1(Pidgin.Parser{System.Char,``0},TextReader,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of T)(Parser(Of Char, T), TextReader, Func(Of Char, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<T>(Pidgin.Parser<System.Char, T>, TextReader, Func<System.Char, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of T)(Pidgin.Parser(Of System.Char, T), TextReader, Func(Of System.Char, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<T>(Parser<Char, T>, TextReader, Func<Char, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of T)(Parser(Of Char, T), TextReader, Func(Of Char, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},``0[],Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<TToken, T>(Parser<TToken, T>, TToken[], Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__2_Pidgin_Parser___0___1____0___Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},``0[],Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of TToken, T)(Parser(Of TToken, T), TToken(), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<TToken, T>(Pidgin.Parser<TToken, T>, TToken[], Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of TToken, T)(Pidgin.Parser(Of TToken, T), TToken(), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<TToken, T>(Parser<TToken, T>, TToken[], Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of TToken, T)(Parser(Of TToken, T), TToken(), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IEnumerable{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<TToken, T>(Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__2_Pidgin_Parser___0___1__IEnumerable___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IEnumerable{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<TToken, T>(Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IEnumerator{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<TToken, T>(Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__2_Pidgin_Parser___0___1__IEnumerator___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IEnumerator{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of TToken, T)(Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<TToken, T>(Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of TToken, T)(Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<TToken, T>(Parser<TToken, T>, IList<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__2_Pidgin_Parser___0___1__IList___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},IList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of TToken, T)(Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<TToken, T>(Pidgin.Parser<TToken, T>, IList<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of TToken, T)(Pidgin.Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<TToken, T>(Parser<TToken, T>, IList<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of TToken, T)(Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},ReadOnlySpan{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: Parse<TToken, T>(Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_Parse__2_Pidgin_Parser___0___1__ReadOnlySpan___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.Parse``2(Pidgin.Parser{``0,``1},ReadOnlySpan{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: Parse(Of TToken, T)(Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.Parse<TToken, T>(Pidgin.Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.Parse(Of TToken, T)(Pidgin.Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.Parse<TToken, T>(Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.Parse(Of TToken, T)(Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow*
  name: ParseOrThrow
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow_
  commentId: Overload:Pidgin.ParserExtensions.ParseOrThrow
  isSpec: "True"
  fullName: Pidgin.ParserExtensions.ParseOrThrow
  nameWithType: ParserExtensions.ParseOrThrow
- uid: Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Byte,``0},Stream,Func{System.Byte,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<T>(Parser<Byte, T>, Stream, Func<Byte, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__1_Pidgin_Parser_System_Byte___0__Stream_Func_System_Byte_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Byte,``0},Stream,Func{System.Byte,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of T)(Parser(Of Byte, T), Stream, Func(Of Byte, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<T>(Pidgin.Parser<System.Byte, T>, Stream, Func<System.Byte, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of T)(Pidgin.Parser(Of System.Byte, T), Stream, Func(Of System.Byte, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<T>(Parser<Byte, T>, Stream, Func<Byte, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of T)(Parser(Of Byte, T), Stream, Func(Of Byte, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Char,``0},System.String,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<T>(Parser<Char, T>, String, Func<Char, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__1_Pidgin_Parser_System_Char___0__System_String_Func_System_Char_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Char,``0},System.String,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of T)(Parser(Of Char, T), String, Func(Of Char, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<T>(Pidgin.Parser<System.Char, T>, System.String, Func<System.Char, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of T)(Pidgin.Parser(Of System.Char, T), System.String, Func(Of System.Char, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<T>(Parser<Char, T>, String, Func<Char, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of T)(Parser(Of Char, T), String, Func(Of Char, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Char,``0},TextReader,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<T>(Parser<Char, T>, TextReader, Func<Char, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__1_Pidgin_Parser_System_Char___0__TextReader_Func_System_Char_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``1(Pidgin.Parser{System.Char,``0},TextReader,Func{System.Char,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of T)(Parser(Of Char, T), TextReader, Func(Of Char, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<T>(Pidgin.Parser<System.Char, T>, TextReader, Func<System.Char, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of T)(Pidgin.Parser(Of System.Char, T), TextReader, Func(Of System.Char, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<T>(Parser<Char, T>, TextReader, Func<Char, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of T)(Parser(Of Char, T), TextReader, Func(Of Char, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},``0[],Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<TToken, T>(Parser<TToken, T>, TToken[], Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__2_Pidgin_Parser___0___1____0___Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},``0[],Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), TToken(), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, TToken[], Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), TToken(), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<TToken, T>(Parser<TToken, T>, TToken[], Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), TToken(), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IEnumerable{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<TToken, T>(Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__2_Pidgin_Parser___0___1__IEnumerable___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IEnumerable{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<TToken, T>(Parser<TToken, T>, IEnumerable<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IEnumerable(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IEnumerator{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<TToken, T>(Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__2_Pidgin_Parser___0___1__IEnumerator___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IEnumerator{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<TToken, T>(Parser<TToken, T>, IEnumerator<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IEnumerator(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<TToken, T>(Parser<TToken, T>, IList<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__2_Pidgin_Parser___0___1__IList___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},IList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, IList<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<TToken, T>(Parser<TToken, T>, IList<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), IList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},ReadOnlySpan{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseOrThrow<TToken, T>(Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseOrThrow__2_Pidgin_Parser___0___1__ReadOnlySpan___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseOrThrow``2(Pidgin.Parser{``0,``1},ReadOnlySpan{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseOrThrow<TToken, T>(Parser<TToken, T>, ReadOnlySpan<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseOrThrow(Of TToken, T)(Parser(Of TToken, T), ReadOnlySpan(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseReadOnlyList*
  name: ParseReadOnlyList
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseReadOnlyList_
  commentId: Overload:Pidgin.ParserExtensions.ParseReadOnlyList
  isSpec: "True"
  fullName: Pidgin.ParserExtensions.ParseReadOnlyList
  nameWithType: ParserExtensions.ParseReadOnlyList
- uid: Pidgin.ParserExtensions.ParseReadOnlyList``2(Pidgin.Parser{``0,``1},IReadOnlyList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseReadOnlyList<TToken, T>(Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseReadOnlyList__2_Pidgin_Parser___0___1__IReadOnlyList___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseReadOnlyList``2(Pidgin.Parser{``0,``1},IReadOnlyList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseReadOnlyList(Of TToken, T)(Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseReadOnlyList<TToken, T>(Pidgin.Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseReadOnlyList(Of TToken, T)(Pidgin.Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseReadOnlyList<TToken, T>(Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseReadOnlyList(Of TToken, T)(Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.ParserExtensions.ParseReadOnlyListOrThrow*
  name: ParseReadOnlyListOrThrow
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseReadOnlyListOrThrow_
  commentId: Overload:Pidgin.ParserExtensions.ParseReadOnlyListOrThrow
  isSpec: "True"
  fullName: Pidgin.ParserExtensions.ParseReadOnlyListOrThrow
  nameWithType: ParserExtensions.ParseReadOnlyListOrThrow
- uid: Pidgin.ParserExtensions.ParseReadOnlyListOrThrow``2(Pidgin.Parser{``0,``1},IReadOnlyList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name: ParseReadOnlyListOrThrow<TToken, T>(Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, SourcePos, SourcePos>)
  href: api/Pidgin.ParserExtensions.html#Pidgin_ParserExtensions_ParseReadOnlyListOrThrow__2_Pidgin_Parser___0___1__IReadOnlyList___0__Func___0_Pidgin_SourcePos_Pidgin_SourcePos__
  commentId: M:Pidgin.ParserExtensions.ParseReadOnlyListOrThrow``2(Pidgin.Parser{``0,``1},IReadOnlyList{``0},Func{``0,Pidgin.SourcePos,Pidgin.SourcePos})
  name.vb: ParseReadOnlyListOrThrow(Of TToken, T)(Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
  fullName: Pidgin.ParserExtensions.ParseReadOnlyListOrThrow<TToken, T>(Pidgin.Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, Pidgin.SourcePos, Pidgin.SourcePos>)
  fullName.vb: Pidgin.ParserExtensions.ParseReadOnlyListOrThrow(Of TToken, T)(Pidgin.Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, Pidgin.SourcePos, Pidgin.SourcePos))
  nameWithType: ParserExtensions.ParseReadOnlyListOrThrow<TToken, T>(Parser<TToken, T>, IReadOnlyList<TToken>, Func<TToken, SourcePos, SourcePos>)
  nameWithType.vb: ParserExtensions.ParseReadOnlyListOrThrow(Of TToken, T)(Parser(Of TToken, T), IReadOnlyList(Of TToken), Func(Of TToken, SourcePos, SourcePos))
- uid: Pidgin.Permutation
  name: Pidgin.Permutation
  href: api/Pidgin.Permutation.html
  commentId: N:Pidgin.Permutation
  fullName: Pidgin.Permutation
  nameWithType: Pidgin.Permutation
- uid: Pidgin.Permutation.PermutationParser
  name: PermutationParser
  href: api/Pidgin.Permutation.PermutationParser.html
  commentId: T:Pidgin.Permutation.PermutationParser
  fullName: Pidgin.Permutation.PermutationParser
  nameWithType: PermutationParser
- uid: Pidgin.Permutation.PermutationParser.Create*
  name: Create
  href: api/Pidgin.Permutation.PermutationParser.html#Pidgin_Permutation_PermutationParser_Create_
  commentId: Overload:Pidgin.Permutation.PermutationParser.Create
  isSpec: "True"
  fullName: Pidgin.Permutation.PermutationParser.Create
  nameWithType: PermutationParser.Create
- uid: Pidgin.Permutation.PermutationParser.Create``1
  name: Create<TToken>()
  href: api/Pidgin.Permutation.PermutationParser.html#Pidgin_Permutation_PermutationParser_Create__1
  commentId: M:Pidgin.Permutation.PermutationParser.Create``1
  name.vb: Create(Of TToken)()
  fullName: Pidgin.Permutation.PermutationParser.Create<TToken>()
  fullName.vb: Pidgin.Permutation.PermutationParser.Create(Of TToken)()
  nameWithType: PermutationParser.Create<TToken>()
  nameWithType.vb: PermutationParser.Create(Of TToken)()
- uid: Pidgin.Permutation.PermutationParser`2
  name: PermutationParser<TToken, T>
  href: api/Pidgin.Permutation.PermutationParser-2.html
  commentId: T:Pidgin.Permutation.PermutationParser`2
  name.vb: PermutationParser(Of TToken, T)
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T)
  nameWithType: PermutationParser<TToken, T>
  nameWithType.vb: PermutationParser(Of TToken, T)
- uid: Pidgin.Permutation.PermutationParser`2.Add*
  name: Add
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_Add_
  commentId: Overload:Pidgin.Permutation.PermutationParser`2.Add
  isSpec: "True"
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.Add
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).Add
  nameWithType: PermutationParser<TToken, T>.Add
  nameWithType.vb: PermutationParser(Of TToken, T).Add
- uid: Pidgin.Permutation.PermutationParser`2.Add``1(Pidgin.Parser{`0,``0})
  name: Add<U>(Parser<TToken, U>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_Add__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Permutation.PermutationParser`2.Add``1(Pidgin.Parser{`0,``0})
  name.vb: Add(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.Add<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).Add(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: PermutationParser<TToken, T>.Add<U>(Parser<TToken, U>)
  nameWithType.vb: PermutationParser(Of TToken, T).Add(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Permutation.PermutationParser`2.Add``2(Pidgin.Parser{`0,``0},Func{`1,``0,``1})
  name: Add<U, R>(Parser<TToken, U>, Func<T, U, R>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_Add__2_Pidgin_Parser__0___0__Func__1___0___1__
  commentId: M:Pidgin.Permutation.PermutationParser`2.Add``2(Pidgin.Parser{`0,``0},Func{`1,``0,``1})
  name.vb: Add(Of U, R)(Parser(Of TToken, U), Func(Of T, U, R))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.Add<U, R>(Pidgin.Parser<TToken, U>, Func<T, U, R>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).Add(Of U, R)(Pidgin.Parser(Of TToken, U), Func(Of T, U, R))
  nameWithType: PermutationParser<TToken, T>.Add<U, R>(Parser<TToken, U>, Func<T, U, R>)
  nameWithType.vb: PermutationParser(Of TToken, T).Add(Of U, R)(Parser(Of TToken, U), Func(Of T, U, R))
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional*
  name: AddOptional
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional_
  commentId: Overload:Pidgin.Permutation.PermutationParser`2.AddOptional
  isSpec: "True"
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional
  nameWithType: PermutationParser<TToken, T>.AddOptional
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0})
  name: AddOptional<U>(Parser<TToken, U>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__1_Pidgin_Parser__0___0__
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0})
  name.vb: AddOptional(Of U)(Parser(Of TToken, U))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U>(Pidgin.Parser<TToken, U>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U)(Pidgin.Parser(Of TToken, U))
  nameWithType: PermutationParser<TToken, T>.AddOptional<U>(Parser<TToken, U>)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U)(Parser(Of TToken, U))
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0},``0)
  name: AddOptional<U>(Parser<TToken, U>, U)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__1_Pidgin_Parser__0___0____0_
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0},``0)
  name.vb: AddOptional(Of U)(Parser(Of TToken, U), U)
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U>(Pidgin.Parser<TToken, U>, U)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U)(Pidgin.Parser(Of TToken, U), U)
  nameWithType: PermutationParser<TToken, T>.AddOptional<U>(Parser<TToken, U>, U)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U)(Parser(Of TToken, U), U)
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0},Func{``0})
  name: AddOptional<U>(Parser<TToken, U>, Func<U>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__1_Pidgin_Parser__0___0__Func___0__
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``1(Pidgin.Parser{`0,``0},Func{``0})
  name.vb: AddOptional(Of U)(Parser(Of TToken, U), Func(Of U))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U>(Pidgin.Parser<TToken, U>, Func<U>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U)(Pidgin.Parser(Of TToken, U), Func(Of U))
  nameWithType: PermutationParser<TToken, T>.AddOptional<U>(Parser<TToken, U>, Func<U>)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U)(Parser(Of TToken, U), Func(Of U))
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},``0,Func{`1,``0,``1})
  name: AddOptional<U, R>(Parser<TToken, U>, U, Func<T, U, R>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__2_Pidgin_Parser__0___0____0_Func__1___0___1__
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},``0,Func{`1,``0,``1})
  name.vb: AddOptional(Of U, R)(Parser(Of TToken, U), U, Func(Of T, U, R))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U, R>(Pidgin.Parser<TToken, U>, U, Func<T, U, R>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U, R)(Pidgin.Parser(Of TToken, U), U, Func(Of T, U, R))
  nameWithType: PermutationParser<TToken, T>.AddOptional<U, R>(Parser<TToken, U>, U, Func<T, U, R>)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U, R)(Parser(Of TToken, U), U, Func(Of T, U, R))
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},Func{``0},Func{`1,``0,``1})
  name: AddOptional<U, R>(Parser<TToken, U>, Func<U>, Func<T, U, R>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__2_Pidgin_Parser__0___0__Func___0__Func__1___0___1__
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},Func{``0},Func{`1,``0,``1})
  name.vb: AddOptional(Of U, R)(Parser(Of TToken, U), Func(Of U), Func(Of T, U, R))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U, R>(Pidgin.Parser<TToken, U>, Func<U>, Func<T, U, R>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U, R)(Pidgin.Parser(Of TToken, U), Func(Of U), Func(Of T, U, R))
  nameWithType: PermutationParser<TToken, T>.AddOptional<U, R>(Parser<TToken, U>, Func<U>, Func<T, U, R>)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U, R)(Parser(Of TToken, U), Func(Of U), Func(Of T, U, R))
- uid: Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},Func{`1,Pidgin.Maybe{``0},``1})
  name: AddOptional<U, R>(Parser<TToken, U>, Func<T, Maybe<U>, R>)
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_AddOptional__2_Pidgin_Parser__0___0__Func__1_Pidgin_Maybe___0____1__
  commentId: M:Pidgin.Permutation.PermutationParser`2.AddOptional``2(Pidgin.Parser{`0,``0},Func{`1,Pidgin.Maybe{``0},``1})
  name.vb: AddOptional(Of U, R)(Parser(Of TToken, U), Func(Of T, Maybe(Of U), R))
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.AddOptional<U, R>(Pidgin.Parser<TToken, U>, Func<T, Pidgin.Maybe<U>, R>)
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).AddOptional(Of U, R)(Pidgin.Parser(Of TToken, U), Func(Of T, Pidgin.Maybe(Of U), R))
  nameWithType: PermutationParser<TToken, T>.AddOptional<U, R>(Parser<TToken, U>, Func<T, Maybe<U>, R>)
  nameWithType.vb: PermutationParser(Of TToken, T).AddOptional(Of U, R)(Parser(Of TToken, U), Func(Of T, Maybe(Of U), R))
- uid: Pidgin.Permutation.PermutationParser`2.Build
  name: Build()
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_Build
  commentId: M:Pidgin.Permutation.PermutationParser`2.Build
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.Build()
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).Build()
  nameWithType: PermutationParser<TToken, T>.Build()
  nameWithType.vb: PermutationParser(Of TToken, T).Build()
- uid: Pidgin.Permutation.PermutationParser`2.Build*
  name: Build
  href: api/Pidgin.Permutation.PermutationParser-2.html#Pidgin_Permutation_PermutationParser_2_Build_
  commentId: Overload:Pidgin.Permutation.PermutationParser`2.Build
  isSpec: "True"
  fullName: Pidgin.Permutation.PermutationParser<TToken, T>.Build
  fullName.vb: Pidgin.Permutation.PermutationParser(Of TToken, T).Build
  nameWithType: PermutationParser<TToken, T>.Build
  nameWithType.vb: PermutationParser(Of TToken, T).Build
- uid: Pidgin.Result`2
  name: Result<TToken, T>
  href: api/Pidgin.Result-2.html
  commentId: T:Pidgin.Result`2
  name.vb: Result(Of TToken, T)
  fullName: Pidgin.Result<TToken, T>
  fullName.vb: Pidgin.Result(Of TToken, T)
  nameWithType: Result<TToken, T>
  nameWithType.vb: Result(Of TToken, T)
- uid: Pidgin.Result`2.Cast*
  name: Cast
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Cast_
  commentId: Overload:Pidgin.Result`2.Cast
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Cast
  fullName.vb: Pidgin.Result(Of TToken, T).Cast
  nameWithType: Result<TToken, T>.Cast
  nameWithType.vb: Result(Of TToken, T).Cast
- uid: Pidgin.Result`2.Cast``1
  name: Cast<U>()
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Cast__1
  commentId: M:Pidgin.Result`2.Cast``1
  name.vb: Cast(Of U)()
  fullName: Pidgin.Result<TToken, T>.Cast<U>()
  fullName.vb: Pidgin.Result(Of TToken, T).Cast(Of U)()
  nameWithType: Result<TToken, T>.Cast<U>()
  nameWithType.vb: Result(Of TToken, T).Cast(Of U)()
- uid: Pidgin.Result`2.Error
  name: Error
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Error
  commentId: P:Pidgin.Result`2.Error
  fullName: Pidgin.Result<TToken, T>.Error
  fullName.vb: Pidgin.Result(Of TToken, T).Error
  nameWithType: Result<TToken, T>.Error
  nameWithType.vb: Result(Of TToken, T).Error
- uid: Pidgin.Result`2.Error*
  name: Error
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Error_
  commentId: Overload:Pidgin.Result`2.Error
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Error
  fullName.vb: Pidgin.Result(Of TToken, T).Error
  nameWithType: Result<TToken, T>.Error
  nameWithType.vb: Result(Of TToken, T).Error
- uid: Pidgin.Result`2.GetValueOrDefault
  name: GetValueOrDefault()
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_GetValueOrDefault
  commentId: M:Pidgin.Result`2.GetValueOrDefault
  fullName: Pidgin.Result<TToken, T>.GetValueOrDefault()
  fullName.vb: Pidgin.Result(Of TToken, T).GetValueOrDefault()
  nameWithType: Result<TToken, T>.GetValueOrDefault()
  nameWithType.vb: Result(Of TToken, T).GetValueOrDefault()
- uid: Pidgin.Result`2.GetValueOrDefault(`1)
  name: GetValueOrDefault(T)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_GetValueOrDefault__1_
  commentId: M:Pidgin.Result`2.GetValueOrDefault(`1)
  fullName: Pidgin.Result<TToken, T>.GetValueOrDefault(T)
  fullName.vb: Pidgin.Result(Of TToken, T).GetValueOrDefault(T)
  nameWithType: Result<TToken, T>.GetValueOrDefault(T)
  nameWithType.vb: Result(Of TToken, T).GetValueOrDefault(T)
- uid: Pidgin.Result`2.GetValueOrDefault(Func{`1})
  name: GetValueOrDefault(Func<T>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_GetValueOrDefault_Func__1__
  commentId: M:Pidgin.Result`2.GetValueOrDefault(Func{`1})
  name.vb: GetValueOrDefault(Func(Of T))
  fullName: Pidgin.Result<TToken, T>.GetValueOrDefault(Func<T>)
  fullName.vb: Pidgin.Result(Of TToken, T).GetValueOrDefault(Func(Of T))
  nameWithType: Result<TToken, T>.GetValueOrDefault(Func<T>)
  nameWithType.vb: Result(Of TToken, T).GetValueOrDefault(Func(Of T))
- uid: Pidgin.Result`2.GetValueOrDefault*
  name: GetValueOrDefault
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_GetValueOrDefault_
  commentId: Overload:Pidgin.Result`2.GetValueOrDefault
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.GetValueOrDefault
  fullName.vb: Pidgin.Result(Of TToken, T).GetValueOrDefault
  nameWithType: Result<TToken, T>.GetValueOrDefault
  nameWithType.vb: Result(Of TToken, T).GetValueOrDefault
- uid: Pidgin.Result`2.Match*
  name: Match
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Match_
  commentId: Overload:Pidgin.Result`2.Match
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Match
  fullName.vb: Pidgin.Result(Of TToken, T).Match
  nameWithType: Result<TToken, T>.Match
  nameWithType.vb: Result(Of TToken, T).Match
- uid: Pidgin.Result`2.Match``1(Func{`1,``0},Func{Pidgin.ParseError{`0},``0})
  name: Match<U>(Func<T, U>, Func<ParseError<TToken>, U>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Match__1_Func__1___0__Func_Pidgin_ParseError__0____0__
  commentId: M:Pidgin.Result`2.Match``1(Func{`1,``0},Func{Pidgin.ParseError{`0},``0})
  name.vb: Match(Of U)(Func(Of T, U), Func(Of ParseError(Of TToken), U))
  fullName: Pidgin.Result<TToken, T>.Match<U>(Func<T, U>, Func<Pidgin.ParseError<TToken>, U>)
  fullName.vb: Pidgin.Result(Of TToken, T).Match(Of U)(Func(Of T, U), Func(Of Pidgin.ParseError(Of TToken), U))
  nameWithType: Result<TToken, T>.Match<U>(Func<T, U>, Func<ParseError<TToken>, U>)
  nameWithType.vb: Result(Of TToken, T).Match(Of U)(Func(Of T, U), Func(Of ParseError(Of TToken), U))
- uid: Pidgin.Result`2.Or(Func{Pidgin.Result{`0,`1}})
  name: Or(Func<Result<TToken, T>>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Or_Func_Pidgin_Result__0__1___
  commentId: M:Pidgin.Result`2.Or(Func{Pidgin.Result{`0,`1}})
  name.vb: Or(Func(Of Result(Of TToken, T)))
  fullName: Pidgin.Result<TToken, T>.Or(Func<Pidgin.Result<TToken, T>>)
  fullName.vb: Pidgin.Result(Of TToken, T).Or(Func(Of Pidgin.Result(Of TToken, T)))
  nameWithType: Result<TToken, T>.Or(Func<Result<TToken, T>>)
  nameWithType.vb: Result(Of TToken, T).Or(Func(Of Result(Of TToken, T)))
- uid: Pidgin.Result`2.Or(Pidgin.Result{`0,`1})
  name: Or(Result<TToken, T>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Or_Pidgin_Result__0__1__
  commentId: M:Pidgin.Result`2.Or(Pidgin.Result{`0,`1})
  name.vb: Or(Result(Of TToken, T))
  fullName: Pidgin.Result<TToken, T>.Or(Pidgin.Result<TToken, T>)
  fullName.vb: Pidgin.Result(Of TToken, T).Or(Pidgin.Result(Of TToken, T))
  nameWithType: Result<TToken, T>.Or(Result<TToken, T>)
  nameWithType.vb: Result(Of TToken, T).Or(Result(Of TToken, T))
- uid: Pidgin.Result`2.Or*
  name: Or
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Or_
  commentId: Overload:Pidgin.Result`2.Or
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Or
  fullName.vb: Pidgin.Result(Of TToken, T).Or
  nameWithType: Result<TToken, T>.Or
  nameWithType.vb: Result(Of TToken, T).Or
- uid: Pidgin.Result`2.Select*
  name: Select
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Select_
  commentId: Overload:Pidgin.Result`2.Select
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Select
  fullName.vb: Pidgin.Result(Of TToken, T).Select
  nameWithType: Result<TToken, T>.Select
  nameWithType.vb: Result(Of TToken, T).Select
- uid: Pidgin.Result`2.Select``1(Func{`1,``0})
  name: Select<U>(Func<T, U>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Select__1_Func__1___0__
  commentId: M:Pidgin.Result`2.Select``1(Func{`1,``0})
  name.vb: Select(Of U)(Func(Of T, U))
  fullName: Pidgin.Result<TToken, T>.Select<U>(Func<T, U>)
  fullName.vb: Pidgin.Result(Of TToken, T).Select(Of U)(Func(Of T, U))
  nameWithType: Result<TToken, T>.Select<U>(Func<T, U>)
  nameWithType.vb: Result(Of TToken, T).Select(Of U)(Func(Of T, U))
- uid: Pidgin.Result`2.SelectMany*
  name: SelectMany
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_SelectMany_
  commentId: Overload:Pidgin.Result`2.SelectMany
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.SelectMany
  fullName.vb: Pidgin.Result(Of TToken, T).SelectMany
  nameWithType: Result<TToken, T>.SelectMany
  nameWithType.vb: Result(Of TToken, T).SelectMany
- uid: Pidgin.Result`2.SelectMany``1(Func{`1,Pidgin.Result{`0,``0}})
  name: SelectMany<U>(Func<T, Result<TToken, U>>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_SelectMany__1_Func__1_Pidgin_Result__0___0___
  commentId: M:Pidgin.Result`2.SelectMany``1(Func{`1,Pidgin.Result{`0,``0}})
  name.vb: SelectMany(Of U)(Func(Of T, Result(Of TToken, U)))
  fullName: Pidgin.Result<TToken, T>.SelectMany<U>(Func<T, Pidgin.Result<TToken, U>>)
  fullName.vb: Pidgin.Result(Of TToken, T).SelectMany(Of U)(Func(Of T, Pidgin.Result(Of TToken, U)))
  nameWithType: Result<TToken, T>.SelectMany<U>(Func<T, Result<TToken, U>>)
  nameWithType.vb: Result(Of TToken, T).SelectMany(Of U)(Func(Of T, Result(Of TToken, U)))
- uid: Pidgin.Result`2.SelectMany``2(Func{`1,Pidgin.Result{`0,``0}},Func{`1,``0,``1})
  name: SelectMany<U, R>(Func<T, Result<TToken, U>>, Func<T, U, R>)
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_SelectMany__2_Func__1_Pidgin_Result__0___0___Func__1___0___1__
  commentId: M:Pidgin.Result`2.SelectMany``2(Func{`1,Pidgin.Result{`0,``0}},Func{`1,``0,``1})
  name.vb: SelectMany(Of U, R)(Func(Of T, Result(Of TToken, U)), Func(Of T, U, R))
  fullName: Pidgin.Result<TToken, T>.SelectMany<U, R>(Func<T, Pidgin.Result<TToken, U>>, Func<T, U, R>)
  fullName.vb: Pidgin.Result(Of TToken, T).SelectMany(Of U, R)(Func(Of T, Pidgin.Result(Of TToken, U)), Func(Of T, U, R))
  nameWithType: Result<TToken, T>.SelectMany<U, R>(Func<T, Result<TToken, U>>, Func<T, U, R>)
  nameWithType.vb: Result(Of TToken, T).SelectMany(Of U, R)(Func(Of T, Result(Of TToken, U)), Func(Of T, U, R))
- uid: Pidgin.Result`2.Success
  name: Success
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Success
  commentId: P:Pidgin.Result`2.Success
  fullName: Pidgin.Result<TToken, T>.Success
  fullName.vb: Pidgin.Result(Of TToken, T).Success
  nameWithType: Result<TToken, T>.Success
  nameWithType.vb: Result(Of TToken, T).Success
- uid: Pidgin.Result`2.Success*
  name: Success
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Success_
  commentId: Overload:Pidgin.Result`2.Success
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Success
  fullName.vb: Pidgin.Result(Of TToken, T).Success
  nameWithType: Result<TToken, T>.Success
  nameWithType.vb: Result(Of TToken, T).Success
- uid: Pidgin.Result`2.Value
  name: Value
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Value
  commentId: P:Pidgin.Result`2.Value
  fullName: Pidgin.Result<TToken, T>.Value
  fullName.vb: Pidgin.Result(Of TToken, T).Value
  nameWithType: Result<TToken, T>.Value
  nameWithType.vb: Result(Of TToken, T).Value
- uid: Pidgin.Result`2.Value*
  name: Value
  href: api/Pidgin.Result-2.html#Pidgin_Result_2_Value_
  commentId: Overload:Pidgin.Result`2.Value
  isSpec: "True"
  fullName: Pidgin.Result<TToken, T>.Value
  fullName.vb: Pidgin.Result(Of TToken, T).Value
  nameWithType: Result<TToken, T>.Value
  nameWithType.vb: Result(Of TToken, T).Value
- uid: Pidgin.SourcePos
  name: SourcePos
  href: api/Pidgin.SourcePos.html
  commentId: T:Pidgin.SourcePos
  fullName: Pidgin.SourcePos
  nameWithType: SourcePos
- uid: Pidgin.SourcePos.#ctor(System.Int32,System.Int32)
  name: SourcePos(Int32, Int32)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos__ctor_System_Int32_System_Int32_
  commentId: M:Pidgin.SourcePos.#ctor(System.Int32,System.Int32)
  fullName: Pidgin.SourcePos.SourcePos(System.Int32, System.Int32)
  nameWithType: SourcePos.SourcePos(Int32, Int32)
- uid: Pidgin.SourcePos.#ctor*
  name: SourcePos
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos__ctor_
  commentId: Overload:Pidgin.SourcePos.#ctor
  isSpec: "True"
  fullName: Pidgin.SourcePos.SourcePos
  nameWithType: SourcePos.SourcePos
- uid: Pidgin.SourcePos.Col
  name: Col
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Col
  commentId: P:Pidgin.SourcePos.Col
  fullName: Pidgin.SourcePos.Col
  nameWithType: SourcePos.Col
- uid: Pidgin.SourcePos.Col*
  name: Col
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Col_
  commentId: Overload:Pidgin.SourcePos.Col
  isSpec: "True"
  fullName: Pidgin.SourcePos.Col
  nameWithType: SourcePos.Col
- uid: Pidgin.SourcePos.CompareTo(Pidgin.SourcePos)
  name: CompareTo(SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_CompareTo_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.CompareTo(Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.CompareTo(Pidgin.SourcePos)
  nameWithType: SourcePos.CompareTo(SourcePos)
- uid: Pidgin.SourcePos.CompareTo*
  name: CompareTo
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_CompareTo_
  commentId: Overload:Pidgin.SourcePos.CompareTo
  isSpec: "True"
  fullName: Pidgin.SourcePos.CompareTo
  nameWithType: SourcePos.CompareTo
- uid: Pidgin.SourcePos.Equals(Pidgin.SourcePos)
  name: Equals(SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Equals_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.Equals(Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.Equals(Pidgin.SourcePos)
  nameWithType: SourcePos.Equals(SourcePos)
- uid: Pidgin.SourcePos.Equals(System.Object)
  name: Equals(Object)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Equals_System_Object_
  commentId: M:Pidgin.SourcePos.Equals(System.Object)
  fullName: Pidgin.SourcePos.Equals(System.Object)
  nameWithType: SourcePos.Equals(Object)
- uid: Pidgin.SourcePos.Equals*
  name: Equals
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Equals_
  commentId: Overload:Pidgin.SourcePos.Equals
  isSpec: "True"
  fullName: Pidgin.SourcePos.Equals
  nameWithType: SourcePos.Equals
- uid: Pidgin.SourcePos.GetHashCode
  name: GetHashCode()
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_GetHashCode
  commentId: M:Pidgin.SourcePos.GetHashCode
  fullName: Pidgin.SourcePos.GetHashCode()
  nameWithType: SourcePos.GetHashCode()
- uid: Pidgin.SourcePos.GetHashCode*
  name: GetHashCode
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_GetHashCode_
  commentId: Overload:Pidgin.SourcePos.GetHashCode
  isSpec: "True"
  fullName: Pidgin.SourcePos.GetHashCode
  nameWithType: SourcePos.GetHashCode
- uid: Pidgin.SourcePos.IncrementCol
  name: IncrementCol()
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_IncrementCol
  commentId: M:Pidgin.SourcePos.IncrementCol
  fullName: Pidgin.SourcePos.IncrementCol()
  nameWithType: SourcePos.IncrementCol()
- uid: Pidgin.SourcePos.IncrementCol*
  name: IncrementCol
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_IncrementCol_
  commentId: Overload:Pidgin.SourcePos.IncrementCol
  isSpec: "True"
  fullName: Pidgin.SourcePos.IncrementCol
  nameWithType: SourcePos.IncrementCol
- uid: Pidgin.SourcePos.Line
  name: Line
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Line
  commentId: P:Pidgin.SourcePos.Line
  fullName: Pidgin.SourcePos.Line
  nameWithType: SourcePos.Line
- uid: Pidgin.SourcePos.Line*
  name: Line
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_Line_
  commentId: Overload:Pidgin.SourcePos.Line
  isSpec: "True"
  fullName: Pidgin.SourcePos.Line
  nameWithType: SourcePos.Line
- uid: Pidgin.SourcePos.NewLine
  name: NewLine()
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_NewLine
  commentId: M:Pidgin.SourcePos.NewLine
  fullName: Pidgin.SourcePos.NewLine()
  nameWithType: SourcePos.NewLine()
- uid: Pidgin.SourcePos.NewLine*
  name: NewLine
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_NewLine_
  commentId: Overload:Pidgin.SourcePos.NewLine
  isSpec: "True"
  fullName: Pidgin.SourcePos.NewLine
  nameWithType: SourcePos.NewLine
- uid: Pidgin.SourcePos.op_Equality(Pidgin.SourcePos,Pidgin.SourcePos)
  name: Equality(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_Equality_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_Equality(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.Equality(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.Equality(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_Equality*
  name: Equality
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_Equality_
  commentId: Overload:Pidgin.SourcePos.op_Equality
  isSpec: "True"
  fullName: Pidgin.SourcePos.Equality
  nameWithType: SourcePos.Equality
- uid: Pidgin.SourcePos.op_GreaterThan(Pidgin.SourcePos,Pidgin.SourcePos)
  name: GreaterThan(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_GreaterThan_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_GreaterThan(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.GreaterThan(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.GreaterThan(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_GreaterThan*
  name: GreaterThan
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_GreaterThan_
  commentId: Overload:Pidgin.SourcePos.op_GreaterThan
  isSpec: "True"
  fullName: Pidgin.SourcePos.GreaterThan
  nameWithType: SourcePos.GreaterThan
- uid: Pidgin.SourcePos.op_GreaterThanOrEqual(Pidgin.SourcePos,Pidgin.SourcePos)
  name: GreaterThanOrEqual(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_GreaterThanOrEqual_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_GreaterThanOrEqual(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.GreaterThanOrEqual(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.GreaterThanOrEqual(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_GreaterThanOrEqual_
  commentId: Overload:Pidgin.SourcePos.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Pidgin.SourcePos.GreaterThanOrEqual
  nameWithType: SourcePos.GreaterThanOrEqual
- uid: Pidgin.SourcePos.op_Inequality(Pidgin.SourcePos,Pidgin.SourcePos)
  name: Inequality(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_Inequality_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_Inequality(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.Inequality(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.Inequality(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_Inequality*
  name: Inequality
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_Inequality_
  commentId: Overload:Pidgin.SourcePos.op_Inequality
  isSpec: "True"
  fullName: Pidgin.SourcePos.Inequality
  nameWithType: SourcePos.Inequality
- uid: Pidgin.SourcePos.op_LessThan(Pidgin.SourcePos,Pidgin.SourcePos)
  name: LessThan(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_LessThan_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_LessThan(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.LessThan(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.LessThan(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_LessThan*
  name: LessThan
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_LessThan_
  commentId: Overload:Pidgin.SourcePos.op_LessThan
  isSpec: "True"
  fullName: Pidgin.SourcePos.LessThan
  nameWithType: SourcePos.LessThan
- uid: Pidgin.SourcePos.op_LessThanOrEqual(Pidgin.SourcePos,Pidgin.SourcePos)
  name: LessThanOrEqual(SourcePos, SourcePos)
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_LessThanOrEqual_Pidgin_SourcePos_Pidgin_SourcePos_
  commentId: M:Pidgin.SourcePos.op_LessThanOrEqual(Pidgin.SourcePos,Pidgin.SourcePos)
  fullName: Pidgin.SourcePos.LessThanOrEqual(Pidgin.SourcePos, Pidgin.SourcePos)
  nameWithType: SourcePos.LessThanOrEqual(SourcePos, SourcePos)
- uid: Pidgin.SourcePos.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Pidgin.SourcePos.html#Pidgin_SourcePos_op_LessThanOrEqual_
  commentId: Overload:Pidgin.SourcePos.op_LessThanOrEqual
  isSpec: "True"
  fullName: Pidgin.SourcePos.LessThanOrEqual
  nameWithType: SourcePos.LessThanOrEqual
- uid: Pidgin.Unit
  name: Unit
  href: api/Pidgin.Unit.html
  commentId: T:Pidgin.Unit
  fullName: Pidgin.Unit
  nameWithType: Unit
- uid: Pidgin.Unit.Value
  name: Value
  href: api/Pidgin.Unit.html#Pidgin_Unit_Value
  commentId: P:Pidgin.Unit.Value
  fullName: Pidgin.Unit.Value
  nameWithType: Unit.Value
- uid: Pidgin.Unit.Value*
  name: Value
  href: api/Pidgin.Unit.html#Pidgin_Unit_Value_
  commentId: Overload:Pidgin.Unit.Value
  isSpec: "True"
  fullName: Pidgin.Unit.Value
  nameWithType: Unit.Value
